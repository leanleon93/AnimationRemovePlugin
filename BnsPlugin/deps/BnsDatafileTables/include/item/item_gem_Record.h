/*
 Generated Code! Do not manually edit this code. Modify the generator instead.
*/
#pragma once
#include "AAA_item_RecordBase.h"

namespace Data {
#pragma pack(push, 1)
	struct item_gem_Record : item_Record
	{
	private:
		static std::wstring Get_gem_type_EnumValue(__int8 value);
		static std::wstring Get_weapon_gem_type_EnumValue(__int8 value);
		static std::wstring Get_weapon_enchant_gem_slot_type_EnumValue(__int8 value);
		static std::wstring Get_accessory_enchant_gem_equip_accessory_type_EnumValue(__int8 value);
		static std::wstring Get_accessory_enchant_gem_slot_type_EnumValue(__int8 value);
		static std::wstring Get_attack_effect_skill_result_EnumValue(__int8 value);
		static std::wstring Get_attack_effect_target_effect_flag_EnumValue(__int16 value);
		static std::wstring Get_attack_effect_caster_effect_flag_EnumValue(__int16 value);
		static std::wstring Get_second_attack_effect_skill_result_EnumValue(__int8 value);
		static std::wstring Get_second_attack_effect_target_effect_flag_EnumValue(__int16 value);
		static std::wstring Get_second_attack_effect_caster_effect_flag_EnumValue(__int16 value);
	public:
		std::any GetField(const wchar_t* fieldName) const {
			auto baseResult = item_Record::GetField(fieldName);
			if (baseResult.has_value()) {
				return baseResult;
			}
			if (wcscmp(fieldName, L"gem_type") == 0) return gem_type;
			if (wcscmp(fieldName, L"weapon_gem_type") == 0) return weapon_gem_type;
			if (wcscmp(fieldName, L"weapon_gem_level") == 0) return weapon_gem_level;
			if (wcscmp(fieldName, L"cannot_transform") == 0) return cannot_transform;
			if (wcscmp(fieldName, L"extra_icon") == 0) return extra_icon;
			if (wcscmp(fieldName, L"extra_icon_grade") == 0) return extra_icon_grade;
			if (wcscmp(fieldName, L"weapon_enchant_gem_slot_type") == 0) return weapon_enchant_gem_slot_type;
			if (wcscmp(fieldName, L"accessory_enchant_gem_equip_accessory_type") == 0) return accessory_enchant_gem_equip_accessory_type;
			if (wcscmp(fieldName, L"accessory_enchant_gem_slot_type") == 0) return accessory_enchant_gem_slot_type;
			if (wcscmp(fieldName, L"reveal_consumable_item") == 0) return reveal_consumable_item;
			if (wcscmp(fieldName, L"reveal_consumable_item_1") == 0) return reveal_consumable_item[0];
			if (wcscmp(fieldName, L"reveal_consumable_item_2") == 0) return reveal_consumable_item[1];
			if (wcscmp(fieldName, L"reveal_consumable_item_3") == 0) return reveal_consumable_item[2];
			if (wcscmp(fieldName, L"reveal_consumable_item_4") == 0) return reveal_consumable_item[3];
			if (wcscmp(fieldName, L"reveal_consumable_item_count") == 0) return reveal_consumable_item_count;
			if (wcscmp(fieldName, L"reveal_consumable_item_count_1") == 0) return reveal_consumable_item_count[0];
			if (wcscmp(fieldName, L"reveal_consumable_item_count_2") == 0) return reveal_consumable_item_count[1];
			if (wcscmp(fieldName, L"reveal_consumable_item_count_3") == 0) return reveal_consumable_item_count[2];
			if (wcscmp(fieldName, L"reveal_consumable_item_count_4") == 0) return reveal_consumable_item_count[3];
			if (wcscmp(fieldName, L"equip_gem_piece") == 0) return equip_gem_piece;
			if (wcscmp(fieldName, L"equip_gem_piece_1") == 0) return equip_gem_piece[0];
			if (wcscmp(fieldName, L"equip_gem_piece_2") == 0) return equip_gem_piece[1];
			if (wcscmp(fieldName, L"equip_gem_piece_3") == 0) return equip_gem_piece[2];
			if (wcscmp(fieldName, L"equip_gem_piece_4") == 0) return equip_gem_piece[3];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item") == 0) return attach_equip_gem_piece_consumable_item;
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_1") == 0) return attach_equip_gem_piece_consumable_item[0];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_2") == 0) return attach_equip_gem_piece_consumable_item[1];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_3") == 0) return attach_equip_gem_piece_consumable_item[2];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_4") == 0) return attach_equip_gem_piece_consumable_item[3];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_count") == 0) return attach_equip_gem_piece_consumable_item_count;
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_count_1") == 0) return attach_equip_gem_piece_consumable_item_count[0];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_count_2") == 0) return attach_equip_gem_piece_consumable_item_count[1];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_count_3") == 0) return attach_equip_gem_piece_consumable_item_count[2];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_count_4") == 0) return attach_equip_gem_piece_consumable_item_count[3];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_money_cost") == 0) return attach_equip_gem_piece_money_cost;
			if (wcscmp(fieldName, L"attach_equip_gem_piece") == 0) return attach_equip_gem_piece;
			if (wcscmp(fieldName, L"attach_equip_gem_piece_1") == 0) return attach_equip_gem_piece[0];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_2") == 0) return attach_equip_gem_piece[1];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_3") == 0) return attach_equip_gem_piece[2];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_4") == 0) return attach_equip_gem_piece[3];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_5") == 0) return attach_equip_gem_piece[4];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_6") == 0) return attach_equip_gem_piece[5];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_7") == 0) return attach_equip_gem_piece[6];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_8") == 0) return attach_equip_gem_piece[7];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_9") == 0) return attach_equip_gem_piece[8];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_10") == 0) return attach_equip_gem_piece[9];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight") == 0) return attach_equip_gem_piece_prop_weight;
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_1") == 0) return attach_equip_gem_piece_prop_weight[0];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_2") == 0) return attach_equip_gem_piece_prop_weight[1];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_3") == 0) return attach_equip_gem_piece_prop_weight[2];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_4") == 0) return attach_equip_gem_piece_prop_weight[3];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_5") == 0) return attach_equip_gem_piece_prop_weight[4];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_6") == 0) return attach_equip_gem_piece_prop_weight[5];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_7") == 0) return attach_equip_gem_piece_prop_weight[6];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_8") == 0) return attach_equip_gem_piece_prop_weight[7];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_9") == 0) return attach_equip_gem_piece_prop_weight[8];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_10") == 0) return attach_equip_gem_piece_prop_weight[9];
			if (wcscmp(fieldName, L"attach_equip_gem_piece_primary_gem_equip_level_min") == 0) return attach_equip_gem_piece_primary_gem_equip_level_min;
			if (wcscmp(fieldName, L"attach_equip_gem_piece_primary_gem_equip_level_max") == 0) return attach_equip_gem_piece_primary_gem_equip_level_max;
			if (wcscmp(fieldName, L"attack_effect") == 0) return attack_effect;
			if (wcscmp(fieldName, L"attack_effect_1") == 0) return attack_effect[0];
			if (wcscmp(fieldName, L"attack_effect_2") == 0) return attack_effect[1];
			if (wcscmp(fieldName, L"attack_effect_skill_result") == 0) return attack_effect_skill_result;
			if (wcscmp(fieldName, L"attack_effect_probability") == 0) return attack_effect_probability;
			if (wcscmp(fieldName, L"attack_effect_target_limit_level") == 0) return attack_effect_target_limit_level;
			if (wcscmp(fieldName, L"attack_effect_target_effect_flag") == 0) return attack_effect_target_effect_flag;
			if (wcscmp(fieldName, L"attack_effect_target_effect_flag_1") == 0) return attack_effect_target_effect_flag[0];
			if (wcscmp(fieldName, L"attack_effect_target_effect_flag_2") == 0) return attack_effect_target_effect_flag[1];
			if (wcscmp(fieldName, L"attack_effect_target_effect_flag_3") == 0) return attack_effect_target_effect_flag[2];
			if (wcscmp(fieldName, L"attack_effect_target_effect_flag_4") == 0) return attack_effect_target_effect_flag[3];
			if (wcscmp(fieldName, L"attack_effect_caster_effect_flag") == 0) return attack_effect_caster_effect_flag;
			if (wcscmp(fieldName, L"attack_effect_caster_effect_flag_1") == 0) return attack_effect_caster_effect_flag[0];
			if (wcscmp(fieldName, L"attack_effect_caster_effect_flag_2") == 0) return attack_effect_caster_effect_flag[1];
			if (wcscmp(fieldName, L"attack_effect_caster_effect_flag_3") == 0) return attack_effect_caster_effect_flag[2];
			if (wcscmp(fieldName, L"attack_effect_caster_effect_flag_4") == 0) return attack_effect_caster_effect_flag[3];
			if (wcscmp(fieldName, L"second_attack_effect") == 0) return second_attack_effect;
			if (wcscmp(fieldName, L"second_attack_effect_1") == 0) return second_attack_effect[0];
			if (wcscmp(fieldName, L"second_attack_effect_2") == 0) return second_attack_effect[1];
			if (wcscmp(fieldName, L"second_attack_effect_skill_result") == 0) return second_attack_effect_skill_result;
			if (wcscmp(fieldName, L"second_attack_effect_probability") == 0) return second_attack_effect_probability;
			if (wcscmp(fieldName, L"second_attack_effect_target_limit_level") == 0) return second_attack_effect_target_limit_level;
			if (wcscmp(fieldName, L"second_attack_effect_target_effect_flag") == 0) return second_attack_effect_target_effect_flag;
			if (wcscmp(fieldName, L"second_attack_effect_target_effect_flag_1") == 0) return second_attack_effect_target_effect_flag[0];
			if (wcscmp(fieldName, L"second_attack_effect_target_effect_flag_2") == 0) return second_attack_effect_target_effect_flag[1];
			if (wcscmp(fieldName, L"second_attack_effect_target_effect_flag_3") == 0) return second_attack_effect_target_effect_flag[2];
			if (wcscmp(fieldName, L"second_attack_effect_target_effect_flag_4") == 0) return second_attack_effect_target_effect_flag[3];
			if (wcscmp(fieldName, L"second_attack_effect_caster_effect_flag") == 0) return second_attack_effect_caster_effect_flag;
			if (wcscmp(fieldName, L"second_attack_effect_caster_effect_flag_1") == 0) return second_attack_effect_caster_effect_flag[0];
			if (wcscmp(fieldName, L"second_attack_effect_caster_effect_flag_2") == 0) return second_attack_effect_caster_effect_flag[1];
			if (wcscmp(fieldName, L"second_attack_effect_caster_effect_flag_3") == 0) return second_attack_effect_caster_effect_flag[2];
			if (wcscmp(fieldName, L"second_attack_effect_caster_effect_flag_4") == 0) return second_attack_effect_caster_effect_flag[3];
			if (wcscmp(fieldName, L"detach_gem_money_cost") == 0) return detach_gem_money_cost;
			if (wcscmp(fieldName, L"main_ability_fixed") == 0) return main_ability_fixed;
			if (wcscmp(fieldName, L"sub_ability_fixed") == 0) return sub_ability_fixed;
			if (wcscmp(fieldName, L"sub_ability_random_count") == 0) return sub_ability_random_count;
			if (wcscmp(fieldName, L"sub_ability_random") == 0) return sub_ability_random;
			if (wcscmp(fieldName, L"sub_ability_random_1") == 0) return sub_ability_random[0];
			if (wcscmp(fieldName, L"sub_ability_random_2") == 0) return sub_ability_random[1];
			if (wcscmp(fieldName, L"sub_ability_random_3") == 0) return sub_ability_random[2];
			if (wcscmp(fieldName, L"sub_ability_random_4") == 0) return sub_ability_random[3];
			if (wcscmp(fieldName, L"sub_ability_random_5") == 0) return sub_ability_random[4];
			if (wcscmp(fieldName, L"sub_ability_random_6") == 0) return sub_ability_random[5];
			if (wcscmp(fieldName, L"sub_ability_random_7") == 0) return sub_ability_random[6];
			if (wcscmp(fieldName, L"sub_ability_random_8") == 0) return sub_ability_random[7];
			if (wcscmp(fieldName, L"feed_ability_random") == 0) return feed_ability_random;
			if (wcscmp(fieldName, L"feed_ability_random_1") == 0) return feed_ability_random[0];
			if (wcscmp(fieldName, L"feed_ability_random_2") == 0) return feed_ability_random[1];
			if (wcscmp(fieldName, L"feed_ability_random_3") == 0) return feed_ability_random[2];
			if (wcscmp(fieldName, L"feed_ability_random_4") == 0) return feed_ability_random[3];
			if (wcscmp(fieldName, L"feed_ability_random_5") == 0) return feed_ability_random[4];
			if (wcscmp(fieldName, L"feed_ability_random_6") == 0) return feed_ability_random[5];
			if (wcscmp(fieldName, L"feed_ability_random_7") == 0) return feed_ability_random[6];
			if (wcscmp(fieldName, L"feed_ability_random_8") == 0) return feed_ability_random[7];
			if (wcscmp(fieldName, L"feed_ability_random_count") == 0) return feed_ability_random_count;
			if (wcscmp(fieldName, L"ability_feeding_required_money") == 0) return ability_feeding_required_money;
			if (wcscmp(fieldName, L"ability_feeding_required_item") == 0) return ability_feeding_required_item;
			if (wcscmp(fieldName, L"ability_feeding_required_item_1") == 0) return ability_feeding_required_item[0];
			if (wcscmp(fieldName, L"ability_feeding_required_item_2") == 0) return ability_feeding_required_item[1];
			if (wcscmp(fieldName, L"ability_feeding_required_item_count") == 0) return ability_feeding_required_item_count;
			if (wcscmp(fieldName, L"ability_feeding_required_item_count_1") == 0) return ability_feeding_required_item_count[0];
			if (wcscmp(fieldName, L"ability_feeding_required_item_count_2") == 0) return ability_feeding_required_item_count[1];
			if (wcscmp(fieldName, L"ability_feeding_special_item") == 0) return ability_feeding_special_item;
			if (wcscmp(fieldName, L"ability_feeding_special_item_count") == 0) return ability_feeding_special_item_count;
			if (wcscmp(fieldName, L"ability_feeding_target") == 0) return ability_feeding_target;
			if (wcscmp(fieldName, L"ability_feeding_target_1") == 0) return ability_feeding_target[0];
			if (wcscmp(fieldName, L"ability_feeding_target_2") == 0) return ability_feeding_target[1];
			if (wcscmp(fieldName, L"skill_by_equipment") == 0) return skill_by_equipment;
			if (wcscmp(fieldName, L"hidden_power_attach") == 0) return hidden_power_attach;
			if (wcscmp(fieldName, L"unseal_consume_item2") == 0) return unseal_consume_item2;
			if (wcscmp(fieldName, L"unseal_consume_item2_1") == 0) return unseal_consume_item2[0];
			if (wcscmp(fieldName, L"unseal_consume_item2_2") == 0) return unseal_consume_item2[1];
			if (wcscmp(fieldName, L"unseal_consume_item2_3") == 0) return unseal_consume_item2[2];
			if (wcscmp(fieldName, L"unseal_consume_item2_4") == 0) return unseal_consume_item2[3];
			if (wcscmp(fieldName, L"unseal_consume_item2_stack_count") == 0) return unseal_consume_item2_stack_count;
			if (wcscmp(fieldName, L"unseal_consume_item2_stack_count_1") == 0) return unseal_consume_item2_stack_count[0];
			if (wcscmp(fieldName, L"unseal_consume_item2_stack_count_2") == 0) return unseal_consume_item2_stack_count[1];
			if (wcscmp(fieldName, L"unseal_consume_item2_stack_count_3") == 0) return unseal_consume_item2_stack_count[2];
			if (wcscmp(fieldName, L"unseal_consume_item2_stack_count_4") == 0) return unseal_consume_item2_stack_count[3];
			if (wcscmp(fieldName, L"skill3") == 0) return skill3;
			if (wcscmp(fieldName, L"equip_show") == 0) return equip_show;

			return std::any();
		}
		std::wstring GetFieldAsString(const wchar_t* fieldName) {
			auto baseResult = item_Record::GetFieldAsString(fieldName);
			if (!baseResult.empty()) {
				return baseResult;
			}
			if (wcscmp(fieldName, L"gem_type") == 0) return Data::AnyFieldToStringConverter::ToString(&gem_type);
			if (wcscmp(fieldName, L"weapon_gem_type") == 0) return Data::AnyFieldToStringConverter::ToString(&weapon_gem_type);
			if (wcscmp(fieldName, L"weapon_gem_level") == 0) return Data::AnyFieldToStringConverter::ToString(&weapon_gem_level);
			if (wcscmp(fieldName, L"cannot_transform") == 0) return Data::AnyFieldToStringConverter::ToString(&cannot_transform);
			if (wcscmp(fieldName, L"extra_icon") == 0) return Data::AnyFieldToStringConverter::ToString(&extra_icon);
			if (wcscmp(fieldName, L"extra_icon_grade") == 0) return Data::AnyFieldToStringConverter::ToString(&extra_icon_grade);
			if (wcscmp(fieldName, L"weapon_enchant_gem_slot_type") == 0) return Data::AnyFieldToStringConverter::ToString(&weapon_enchant_gem_slot_type);
			if (wcscmp(fieldName, L"accessory_enchant_gem_equip_accessory_type") == 0) return Data::AnyFieldToStringConverter::ToString(&accessory_enchant_gem_equip_accessory_type);
			if (wcscmp(fieldName, L"accessory_enchant_gem_slot_type") == 0) return Data::AnyFieldToStringConverter::ToString(&accessory_enchant_gem_slot_type);
			if (wcscmp(fieldName, L"reveal_consumable_item_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(reveal_consumable_item[0]));
			if (wcscmp(fieldName, L"reveal_consumable_item_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(reveal_consumable_item[1]));
			if (wcscmp(fieldName, L"reveal_consumable_item_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(reveal_consumable_item[2]));
			if (wcscmp(fieldName, L"reveal_consumable_item_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(reveal_consumable_item[3]));
			if (wcscmp(fieldName, L"reveal_consumable_item_count_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(reveal_consumable_item_count[0]));
			if (wcscmp(fieldName, L"reveal_consumable_item_count_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(reveal_consumable_item_count[1]));
			if (wcscmp(fieldName, L"reveal_consumable_item_count_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(reveal_consumable_item_count[2]));
			if (wcscmp(fieldName, L"reveal_consumable_item_count_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(reveal_consumable_item_count[3]));
			if (wcscmp(fieldName, L"equip_gem_piece_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(equip_gem_piece[0]));
			if (wcscmp(fieldName, L"equip_gem_piece_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(equip_gem_piece[1]));
			if (wcscmp(fieldName, L"equip_gem_piece_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(equip_gem_piece[2]));
			if (wcscmp(fieldName, L"equip_gem_piece_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(equip_gem_piece[3]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_consumable_item[0]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_consumable_item[1]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_consumable_item[2]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_consumable_item[3]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_count_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_consumable_item_count[0]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_count_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_consumable_item_count[1]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_count_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_consumable_item_count[2]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_consumable_item_count_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_consumable_item_count[3]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_money_cost") == 0) return Data::AnyFieldToStringConverter::ToString(&attach_equip_gem_piece_money_cost);
			if (wcscmp(fieldName, L"attach_equip_gem_piece_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece[0]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece[1]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece[2]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece[3]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece[4]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece[5]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece[6]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece[7]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_9") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece[8]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_10") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece[9]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_prop_weight[0]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_prop_weight[1]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_prop_weight[2]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_prop_weight[3]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_prop_weight[4]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_prop_weight[5]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_prop_weight[6]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_prop_weight[7]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_9") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_prop_weight[8]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_prop_weight_10") == 0) return Data::AnyFieldToStringConverter::ToString(&(attach_equip_gem_piece_prop_weight[9]));
			if (wcscmp(fieldName, L"attach_equip_gem_piece_primary_gem_equip_level_min") == 0) return Data::AnyFieldToStringConverter::ToString(&attach_equip_gem_piece_primary_gem_equip_level_min);
			if (wcscmp(fieldName, L"attach_equip_gem_piece_primary_gem_equip_level_max") == 0) return Data::AnyFieldToStringConverter::ToString(&attach_equip_gem_piece_primary_gem_equip_level_max);
			if (wcscmp(fieldName, L"attack_effect_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(attack_effect[0]));
			if (wcscmp(fieldName, L"attack_effect_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(attack_effect[1]));
			if (wcscmp(fieldName, L"attack_effect_skill_result") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_effect_skill_result);
			if (wcscmp(fieldName, L"attack_effect_probability") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_effect_probability);
			if (wcscmp(fieldName, L"attack_effect_target_limit_level") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_effect_target_limit_level);
			if (wcscmp(fieldName, L"attack_effect_target_effect_flag_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(attack_effect_target_effect_flag[0]));
			if (wcscmp(fieldName, L"attack_effect_target_effect_flag_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(attack_effect_target_effect_flag[1]));
			if (wcscmp(fieldName, L"attack_effect_target_effect_flag_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(attack_effect_target_effect_flag[2]));
			if (wcscmp(fieldName, L"attack_effect_target_effect_flag_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(attack_effect_target_effect_flag[3]));
			if (wcscmp(fieldName, L"attack_effect_caster_effect_flag_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(attack_effect_caster_effect_flag[0]));
			if (wcscmp(fieldName, L"attack_effect_caster_effect_flag_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(attack_effect_caster_effect_flag[1]));
			if (wcscmp(fieldName, L"attack_effect_caster_effect_flag_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(attack_effect_caster_effect_flag[2]));
			if (wcscmp(fieldName, L"attack_effect_caster_effect_flag_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(attack_effect_caster_effect_flag[3]));
			if (wcscmp(fieldName, L"second_attack_effect_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(second_attack_effect[0]));
			if (wcscmp(fieldName, L"second_attack_effect_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(second_attack_effect[1]));
			if (wcscmp(fieldName, L"second_attack_effect_skill_result") == 0) return Data::AnyFieldToStringConverter::ToString(&second_attack_effect_skill_result);
			if (wcscmp(fieldName, L"second_attack_effect_probability") == 0) return Data::AnyFieldToStringConverter::ToString(&second_attack_effect_probability);
			if (wcscmp(fieldName, L"second_attack_effect_target_limit_level") == 0) return Data::AnyFieldToStringConverter::ToString(&second_attack_effect_target_limit_level);
			if (wcscmp(fieldName, L"second_attack_effect_target_effect_flag_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(second_attack_effect_target_effect_flag[0]));
			if (wcscmp(fieldName, L"second_attack_effect_target_effect_flag_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(second_attack_effect_target_effect_flag[1]));
			if (wcscmp(fieldName, L"second_attack_effect_target_effect_flag_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(second_attack_effect_target_effect_flag[2]));
			if (wcscmp(fieldName, L"second_attack_effect_target_effect_flag_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(second_attack_effect_target_effect_flag[3]));
			if (wcscmp(fieldName, L"second_attack_effect_caster_effect_flag_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(second_attack_effect_caster_effect_flag[0]));
			if (wcscmp(fieldName, L"second_attack_effect_caster_effect_flag_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(second_attack_effect_caster_effect_flag[1]));
			if (wcscmp(fieldName, L"second_attack_effect_caster_effect_flag_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(second_attack_effect_caster_effect_flag[2]));
			if (wcscmp(fieldName, L"second_attack_effect_caster_effect_flag_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(second_attack_effect_caster_effect_flag[3]));
			if (wcscmp(fieldName, L"detach_gem_money_cost") == 0) return Data::AnyFieldToStringConverter::ToString(&detach_gem_money_cost);
			if (wcscmp(fieldName, L"main_ability_fixed") == 0) return Data::AnyFieldToStringConverter::ToString(&main_ability_fixed);
			if (wcscmp(fieldName, L"sub_ability_fixed") == 0) return Data::AnyFieldToStringConverter::ToString(&sub_ability_fixed);
			if (wcscmp(fieldName, L"sub_ability_random_count") == 0) return Data::AnyFieldToStringConverter::ToString(&sub_ability_random_count);
			if (wcscmp(fieldName, L"sub_ability_random_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(sub_ability_random[0]));
			if (wcscmp(fieldName, L"sub_ability_random_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(sub_ability_random[1]));
			if (wcscmp(fieldName, L"sub_ability_random_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(sub_ability_random[2]));
			if (wcscmp(fieldName, L"sub_ability_random_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(sub_ability_random[3]));
			if (wcscmp(fieldName, L"sub_ability_random_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(sub_ability_random[4]));
			if (wcscmp(fieldName, L"sub_ability_random_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(sub_ability_random[5]));
			if (wcscmp(fieldName, L"sub_ability_random_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(sub_ability_random[6]));
			if (wcscmp(fieldName, L"sub_ability_random_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(sub_ability_random[7]));
			if (wcscmp(fieldName, L"feed_ability_random_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(feed_ability_random[0]));
			if (wcscmp(fieldName, L"feed_ability_random_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(feed_ability_random[1]));
			if (wcscmp(fieldName, L"feed_ability_random_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(feed_ability_random[2]));
			if (wcscmp(fieldName, L"feed_ability_random_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(feed_ability_random[3]));
			if (wcscmp(fieldName, L"feed_ability_random_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(feed_ability_random[4]));
			if (wcscmp(fieldName, L"feed_ability_random_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(feed_ability_random[5]));
			if (wcscmp(fieldName, L"feed_ability_random_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(feed_ability_random[6]));
			if (wcscmp(fieldName, L"feed_ability_random_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(feed_ability_random[7]));
			if (wcscmp(fieldName, L"feed_ability_random_count") == 0) return Data::AnyFieldToStringConverter::ToString(&feed_ability_random_count);
			if (wcscmp(fieldName, L"ability_feeding_required_money") == 0) return Data::AnyFieldToStringConverter::ToString(&ability_feeding_required_money);
			if (wcscmp(fieldName, L"ability_feeding_required_item_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(ability_feeding_required_item[0]));
			if (wcscmp(fieldName, L"ability_feeding_required_item_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(ability_feeding_required_item[1]));
			if (wcscmp(fieldName, L"ability_feeding_required_item_count_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(ability_feeding_required_item_count[0]));
			if (wcscmp(fieldName, L"ability_feeding_required_item_count_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(ability_feeding_required_item_count[1]));
			if (wcscmp(fieldName, L"ability_feeding_special_item") == 0) return Data::AnyFieldToStringConverter::ToString(&ability_feeding_special_item);
			if (wcscmp(fieldName, L"ability_feeding_special_item_count") == 0) return Data::AnyFieldToStringConverter::ToString(&ability_feeding_special_item_count);
			if (wcscmp(fieldName, L"ability_feeding_target_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(ability_feeding_target[0]));
			if (wcscmp(fieldName, L"ability_feeding_target_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(ability_feeding_target[1]));
			if (wcscmp(fieldName, L"skill_by_equipment") == 0) return Data::AnyFieldToStringConverter::ToString(&skill_by_equipment);
			if (wcscmp(fieldName, L"hidden_power_attach") == 0) return Data::AnyFieldToStringConverter::ToString(&hidden_power_attach);
			if (wcscmp(fieldName, L"unseal_consume_item2_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(unseal_consume_item2[0]));
			if (wcscmp(fieldName, L"unseal_consume_item2_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(unseal_consume_item2[1]));
			if (wcscmp(fieldName, L"unseal_consume_item2_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(unseal_consume_item2[2]));
			if (wcscmp(fieldName, L"unseal_consume_item2_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(unseal_consume_item2[3]));
			if (wcscmp(fieldName, L"unseal_consume_item2_stack_count_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(unseal_consume_item2_stack_count[0]));
			if (wcscmp(fieldName, L"unseal_consume_item2_stack_count_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(unseal_consume_item2_stack_count[1]));
			if (wcscmp(fieldName, L"unseal_consume_item2_stack_count_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(unseal_consume_item2_stack_count[2]));
			if (wcscmp(fieldName, L"unseal_consume_item2_stack_count_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(unseal_consume_item2_stack_count[3]));
			if (wcscmp(fieldName, L"skill3") == 0) return Data::AnyFieldToStringConverter::ToString(&skill3);
			if (wcscmp(fieldName, L"equip_show") == 0) return Data::AnyFieldToStringConverter::ToString(&equip_show);

			return L"";
		}
		void AutoCorrectLookupOffsets(const char* lookupDataPtr) {
			item_Record::AutoCorrectLookupOffsets(lookupDataPtr);
			if (reinterpret_cast<std::uintptr_t>(equip_show) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) equip_show = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(equip_show));
		}
		char Pad_sub_0[3];
__int8 gem_type;
std::wstring gem_type_EnumValue() const {return Get_gem_type_EnumValue(gem_type);};
__int8 weapon_gem_type;
std::wstring weapon_gem_type_EnumValue() const {return Get_weapon_gem_type_EnumValue(weapon_gem_type);};
__int16 weapon_gem_level;
bool cannot_transform;
char Pad_sub_1[3];
Data::IconRef extra_icon;
Data::IconRef extra_icon_grade;
__int8 weapon_enchant_gem_slot_type;
std::wstring weapon_enchant_gem_slot_type_EnumValue() const {return Get_weapon_enchant_gem_slot_type_EnumValue(weapon_enchant_gem_slot_type);};
__int8 accessory_enchant_gem_equip_accessory_type;
std::wstring accessory_enchant_gem_equip_accessory_type_EnumValue() const {return Get_accessory_enchant_gem_equip_accessory_type_EnumValue(accessory_enchant_gem_equip_accessory_type);};
__int8 accessory_enchant_gem_slot_type;
std::wstring accessory_enchant_gem_slot_type_EnumValue() const {return Get_accessory_enchant_gem_slot_type_EnumValue(accessory_enchant_gem_slot_type);};
char Pad_sub_2[1];
Data::TableRef reveal_consumable_item[4];
int reveal_consumable_item_tableId(){return 189;};
__int8 reveal_consumable_item_count[4];
Data::TableRef equip_gem_piece[4];
int equip_gem_piece_tableId(){return 119;};
Data::TableRef attach_equip_gem_piece_consumable_item[4];
int attach_equip_gem_piece_consumable_item_tableId(){return 189;};
__int16 attach_equip_gem_piece_consumable_item_count[4];
__int32 attach_equip_gem_piece_money_cost;
Data::TableRef attach_equip_gem_piece[10];
int attach_equip_gem_piece_tableId(){return 119;};
__int16 attach_equip_gem_piece_prop_weight[10];
__int8 attach_equip_gem_piece_primary_gem_equip_level_min;
__int8 attach_equip_gem_piece_primary_gem_equip_level_max;
char Pad_sub_3[2];
Data::TableRef attack_effect[2];
int attack_effect_tableId(){return 111;};
__int8 attack_effect_skill_result;
std::wstring attack_effect_skill_result_EnumValue() const {return Get_attack_effect_skill_result_EnumValue(attack_effect_skill_result);};
__int8 attack_effect_probability;
__int8 attack_effect_target_limit_level;
char Pad_sub_4[1];
__int16 attack_effect_target_effect_flag[4];
std::wstring attack_effect_target_effect_flag_EnumValue(int index) const {return Get_attack_effect_target_effect_flag_EnumValue(attack_effect_target_effect_flag[index]);};
__int16 attack_effect_caster_effect_flag[4];
std::wstring attack_effect_caster_effect_flag_EnumValue(int index) const {return Get_attack_effect_caster_effect_flag_EnumValue(attack_effect_caster_effect_flag[index]);};
Data::TableRef second_attack_effect[2];
int second_attack_effect_tableId(){return 111;};
__int8 second_attack_effect_skill_result;
std::wstring second_attack_effect_skill_result_EnumValue() const {return Get_second_attack_effect_skill_result_EnumValue(second_attack_effect_skill_result);};
__int8 second_attack_effect_probability;
__int8 second_attack_effect_target_limit_level;
char Pad_sub_5[1];
__int16 second_attack_effect_target_effect_flag[4];
std::wstring second_attack_effect_target_effect_flag_EnumValue(int index) const {return Get_second_attack_effect_target_effect_flag_EnumValue(second_attack_effect_target_effect_flag[index]);};
__int16 second_attack_effect_caster_effect_flag[4];
std::wstring second_attack_effect_caster_effect_flag_EnumValue(int index) const {return Get_second_attack_effect_caster_effect_flag_EnumValue(second_attack_effect_caster_effect_flag[index]);};
__int32 detach_gem_money_cost;
Data::TableRef main_ability_fixed;
int main_ability_fixed_tableId(){return 205;};
Data::TableRef sub_ability_fixed;
int sub_ability_fixed_tableId(){return 205;};
__int8 sub_ability_random_count;
char Pad_sub_6[3];
Data::TableRef sub_ability_random[8];
int sub_ability_random_tableId(){return 205;};
Data::TableRef feed_ability_random[8];
int feed_ability_random_tableId(){return 205;};
__int8 feed_ability_random_count;
char Pad_sub_7[3];
__int32 ability_feeding_required_money;
Data::TableRef ability_feeding_required_item[2];
int ability_feeding_required_item_tableId(){return 189;};
__int16 ability_feeding_required_item_count[2];
Data::TableRef ability_feeding_special_item;
int ability_feeding_special_item_tableId(){return 189;};
__int16 ability_feeding_special_item_count;
char Pad_sub_8[2];
Data::TableRef ability_feeding_target[2];
int ability_feeding_target_tableId(){return 183;};
Data::TableRef skill_by_equipment;
int skill_by_equipment_tableId(){return 330;};
__int16 hidden_power_attach;
char Pad_sub_9[2];
Data::TableRef unseal_consume_item2[4];
int unseal_consume_item2_tableId(){return 189;};
__int16 unseal_consume_item2_stack_count[4];
Data::TableRef skill3;
int skill3_tableId(){return 324;};
wchar_t* equip_show;

		static __int32 SubType() { return 3; }
	};
#pragma pack(pop)
}