/*
 Generated Code! Do not manually edit this code. Modify the generator instead.
*/
#pragma once
#include "../DrEl.h"
#include "../AnyToStringConverter.h"

namespace Data {

#pragma pack(push, 1)
	struct glyph_reward_Record : DrEl
	{
	private:
		static std::wstring Get_upgrade_reward_preview_EnumValue(__int8 value);
		static std::wstring Get_reward_type_EnumValue(__int8 value);
		static std::wstring Get_color_EnumValue(__int8 value);
		static std::wstring Get_glyph_type_EnumValue(__int8 value);
	public:
		std::any GetField(const wchar_t* fieldName) const {
			if (wcscmp(fieldName, L"alias") == 0) return alias;
			if (wcscmp(fieldName, L"name") == 0) return name;
			if (wcscmp(fieldName, L"shuffle_reward_icon") == 0) return shuffle_reward_icon;
			if (wcscmp(fieldName, L"shuffle_reward_tooltip") == 0) return shuffle_reward_tooltip;
			if (wcscmp(fieldName, L"upgrade_reward_preview") == 0) return upgrade_reward_preview;
			if (wcscmp(fieldName, L"upgrade_reward_warning_message") == 0) return upgrade_reward_warning_message;
			if (wcscmp(fieldName, L"reward_type") == 0) return reward_type;
			if (wcscmp(fieldName, L"grade") == 0) return grade;
			if (wcscmp(fieldName, L"color") == 0) return color;
			if (wcscmp(fieldName, L"glyph_type") == 0) return glyph_type;
			if (wcscmp(fieldName, L"cost_money") == 0) return cost_money;
			if (wcscmp(fieldName, L"cost_item") == 0) return cost_item;
			if (wcscmp(fieldName, L"cost_item_1") == 0) return cost_item[0];
			if (wcscmp(fieldName, L"cost_item_2") == 0) return cost_item[1];
			if (wcscmp(fieldName, L"cost_item_3") == 0) return cost_item[2];
			if (wcscmp(fieldName, L"cost_item_4") == 0) return cost_item[3];
			if (wcscmp(fieldName, L"cost_item_count") == 0) return cost_item_count;
			if (wcscmp(fieldName, L"cost_item_count_1") == 0) return cost_item_count[0];
			if (wcscmp(fieldName, L"cost_item_count_2") == 0) return cost_item_count[1];
			if (wcscmp(fieldName, L"cost_item_count_3") == 0) return cost_item_count[2];
			if (wcscmp(fieldName, L"cost_item_count_4") == 0) return cost_item_count[3];
			if (wcscmp(fieldName, L"tier_pick_probability") == 0) return tier_pick_probability;
			if (wcscmp(fieldName, L"additional_glyph_pick_probability") == 0) return additional_glyph_pick_probability;
			if (wcscmp(fieldName, L"grade_prob_weight") == 0) return grade_prob_weight;
			if (wcscmp(fieldName, L"grade_prob_weight_1") == 0) return grade_prob_weight[0];
			if (wcscmp(fieldName, L"grade_prob_weight_2") == 0) return grade_prob_weight[1];
			if (wcscmp(fieldName, L"grade_prob_weight_3") == 0) return grade_prob_weight[2];
			if (wcscmp(fieldName, L"grade_prob_weight_4") == 0) return grade_prob_weight[3];
			if (wcscmp(fieldName, L"grade_prob_weight_5") == 0) return grade_prob_weight[4];
			if (wcscmp(fieldName, L"grade_prob_weight_6") == 0) return grade_prob_weight[5];
			if (wcscmp(fieldName, L"grade_prob_weight_7") == 0) return grade_prob_weight[6];
			if (wcscmp(fieldName, L"grade_prob_weight_8") == 0) return grade_prob_weight[7];
			if (wcscmp(fieldName, L"grade_prob_weight_total") == 0) return grade_prob_weight_total;
			if (wcscmp(fieldName, L"tier_prob_weight") == 0) return tier_prob_weight;
			if (wcscmp(fieldName, L"tier_prob_weight_1") == 0) return tier_prob_weight[0];
			if (wcscmp(fieldName, L"tier_prob_weight_2") == 0) return tier_prob_weight[1];
			if (wcscmp(fieldName, L"tier_prob_weight_3") == 0) return tier_prob_weight[2];
			if (wcscmp(fieldName, L"tier_prob_weight_4") == 0) return tier_prob_weight[3];
			if (wcscmp(fieldName, L"tier_prob_weight_5") == 0) return tier_prob_weight[4];
			if (wcscmp(fieldName, L"tier_prob_weight_6") == 0) return tier_prob_weight[5];
			if (wcscmp(fieldName, L"tier_prob_weight_7") == 0) return tier_prob_weight[6];
			if (wcscmp(fieldName, L"tier_prob_weight_8") == 0) return tier_prob_weight[7];
			if (wcscmp(fieldName, L"tier_prob_weight_total") == 0) return tier_prob_weight_total;
			if (wcscmp(fieldName, L"result_glyph_prob_weight") == 0) return result_glyph_prob_weight;
			if (wcscmp(fieldName, L"result_glyph_prob_weight_1") == 0) return result_glyph_prob_weight[0];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_2") == 0) return result_glyph_prob_weight[1];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_3") == 0) return result_glyph_prob_weight[2];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_4") == 0) return result_glyph_prob_weight[3];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_5") == 0) return result_glyph_prob_weight[4];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_6") == 0) return result_glyph_prob_weight[5];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_7") == 0) return result_glyph_prob_weight[6];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_8") == 0) return result_glyph_prob_weight[7];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_9") == 0) return result_glyph_prob_weight[8];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_10") == 0) return result_glyph_prob_weight[9];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_11") == 0) return result_glyph_prob_weight[10];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_12") == 0) return result_glyph_prob_weight[11];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_13") == 0) return result_glyph_prob_weight[12];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_14") == 0) return result_glyph_prob_weight[13];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_15") == 0) return result_glyph_prob_weight[14];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_16") == 0) return result_glyph_prob_weight[15];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_17") == 0) return result_glyph_prob_weight[16];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_18") == 0) return result_glyph_prob_weight[17];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_19") == 0) return result_glyph_prob_weight[18];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_20") == 0) return result_glyph_prob_weight[19];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_21") == 0) return result_glyph_prob_weight[20];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_22") == 0) return result_glyph_prob_weight[21];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_23") == 0) return result_glyph_prob_weight[22];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_24") == 0) return result_glyph_prob_weight[23];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_25") == 0) return result_glyph_prob_weight[24];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_26") == 0) return result_glyph_prob_weight[25];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_27") == 0) return result_glyph_prob_weight[26];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_28") == 0) return result_glyph_prob_weight[27];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_29") == 0) return result_glyph_prob_weight[28];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_30") == 0) return result_glyph_prob_weight[29];
			if (wcscmp(fieldName, L"result_glyph_prob_weight_total") == 0) return result_glyph_prob_weight_total;
			if (wcscmp(fieldName, L"result_glyph") == 0) return result_glyph;
			if (wcscmp(fieldName, L"result_glyph_1") == 0) return result_glyph[0];
			if (wcscmp(fieldName, L"result_glyph_2") == 0) return result_glyph[1];
			if (wcscmp(fieldName, L"result_glyph_3") == 0) return result_glyph[2];
			if (wcscmp(fieldName, L"result_glyph_4") == 0) return result_glyph[3];
			if (wcscmp(fieldName, L"result_glyph_5") == 0) return result_glyph[4];
			if (wcscmp(fieldName, L"result_glyph_6") == 0) return result_glyph[5];
			if (wcscmp(fieldName, L"result_glyph_7") == 0) return result_glyph[6];
			if (wcscmp(fieldName, L"result_glyph_8") == 0) return result_glyph[7];
			if (wcscmp(fieldName, L"result_glyph_9") == 0) return result_glyph[8];
			if (wcscmp(fieldName, L"result_glyph_10") == 0) return result_glyph[9];
			if (wcscmp(fieldName, L"result_glyph_11") == 0) return result_glyph[10];
			if (wcscmp(fieldName, L"result_glyph_12") == 0) return result_glyph[11];
			if (wcscmp(fieldName, L"result_glyph_13") == 0) return result_glyph[12];
			if (wcscmp(fieldName, L"result_glyph_14") == 0) return result_glyph[13];
			if (wcscmp(fieldName, L"result_glyph_15") == 0) return result_glyph[14];
			if (wcscmp(fieldName, L"result_glyph_16") == 0) return result_glyph[15];
			if (wcscmp(fieldName, L"result_glyph_17") == 0) return result_glyph[16];
			if (wcscmp(fieldName, L"result_glyph_18") == 0) return result_glyph[17];
			if (wcscmp(fieldName, L"result_glyph_19") == 0) return result_glyph[18];
			if (wcscmp(fieldName, L"result_glyph_20") == 0) return result_glyph[19];
			if (wcscmp(fieldName, L"result_glyph_21") == 0) return result_glyph[20];
			if (wcscmp(fieldName, L"result_glyph_22") == 0) return result_glyph[21];
			if (wcscmp(fieldName, L"result_glyph_23") == 0) return result_glyph[22];
			if (wcscmp(fieldName, L"result_glyph_24") == 0) return result_glyph[23];
			if (wcscmp(fieldName, L"result_glyph_25") == 0) return result_glyph[24];
			if (wcscmp(fieldName, L"result_glyph_26") == 0) return result_glyph[25];
			if (wcscmp(fieldName, L"result_glyph_27") == 0) return result_glyph[26];
			if (wcscmp(fieldName, L"result_glyph_28") == 0) return result_glyph[27];
			if (wcscmp(fieldName, L"result_glyph_29") == 0) return result_glyph[28];
			if (wcscmp(fieldName, L"result_glyph_30") == 0) return result_glyph[29];
			if (wcscmp(fieldName, L"additional_glyph_prob_weight") == 0) return additional_glyph_prob_weight;
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_1") == 0) return additional_glyph_prob_weight[0];
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_2") == 0) return additional_glyph_prob_weight[1];
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_3") == 0) return additional_glyph_prob_weight[2];
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_4") == 0) return additional_glyph_prob_weight[3];
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_5") == 0) return additional_glyph_prob_weight[4];
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_6") == 0) return additional_glyph_prob_weight[5];
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_7") == 0) return additional_glyph_prob_weight[6];
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_8") == 0) return additional_glyph_prob_weight[7];
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_9") == 0) return additional_glyph_prob_weight[8];
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_10") == 0) return additional_glyph_prob_weight[9];
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_total") == 0) return additional_glyph_prob_weight_total;
			if (wcscmp(fieldName, L"additional_glyph") == 0) return additional_glyph;
			if (wcscmp(fieldName, L"additional_glyph_1") == 0) return additional_glyph[0];
			if (wcscmp(fieldName, L"additional_glyph_2") == 0) return additional_glyph[1];
			if (wcscmp(fieldName, L"additional_glyph_3") == 0) return additional_glyph[2];
			if (wcscmp(fieldName, L"additional_glyph_4") == 0) return additional_glyph[3];
			if (wcscmp(fieldName, L"additional_glyph_5") == 0) return additional_glyph[4];
			if (wcscmp(fieldName, L"additional_glyph_6") == 0) return additional_glyph[5];
			if (wcscmp(fieldName, L"additional_glyph_7") == 0) return additional_glyph[6];
			if (wcscmp(fieldName, L"additional_glyph_8") == 0) return additional_glyph[7];
			if (wcscmp(fieldName, L"additional_glyph_9") == 0) return additional_glyph[8];
			if (wcscmp(fieldName, L"additional_glyph_10") == 0) return additional_glyph[9];
			if (wcscmp(fieldName, L"cost_group_id") == 0) return cost_group_id;
			if (wcscmp(fieldName, L"cost_group_id_1") == 0) return cost_group_id[0];
			if (wcscmp(fieldName, L"cost_group_id_2") == 0) return cost_group_id[1];
			if (wcscmp(fieldName, L"cost_group_id_3") == 0) return cost_group_id[2];
			if (wcscmp(fieldName, L"cost_group_id_4") == 0) return cost_group_id[3];
			if (wcscmp(fieldName, L"cost_group_id_5") == 0) return cost_group_id[4];
			if (wcscmp(fieldName, L"cost_group_id_6") == 0) return cost_group_id[5];
			if (wcscmp(fieldName, L"cost_group_id_7") == 0) return cost_group_id[6];
			if (wcscmp(fieldName, L"cost_group_id_8") == 0) return cost_group_id[7];
			if (wcscmp(fieldName, L"result_group_id") == 0) return result_group_id;
			if (wcscmp(fieldName, L"result_group_id_1") == 0) return result_group_id[0];
			if (wcscmp(fieldName, L"result_group_id_2") == 0) return result_group_id[1];
			if (wcscmp(fieldName, L"result_group_id_3") == 0) return result_group_id[2];
			if (wcscmp(fieldName, L"result_group_id_4") == 0) return result_group_id[3];
			if (wcscmp(fieldName, L"result_group_id_5") == 0) return result_group_id[4];
			if (wcscmp(fieldName, L"result_group_id_6") == 0) return result_group_id[5];
			if (wcscmp(fieldName, L"result_group_id_7") == 0) return result_group_id[6];
			if (wcscmp(fieldName, L"result_group_id_8") == 0) return result_group_id[7];
			if (wcscmp(fieldName, L"group_prob_weight") == 0) return group_prob_weight;
			if (wcscmp(fieldName, L"group_prob_weight_1") == 0) return group_prob_weight[0];
			if (wcscmp(fieldName, L"group_prob_weight_2") == 0) return group_prob_weight[1];
			if (wcscmp(fieldName, L"group_prob_weight_3") == 0) return group_prob_weight[2];
			if (wcscmp(fieldName, L"group_prob_weight_4") == 0) return group_prob_weight[3];
			if (wcscmp(fieldName, L"group_prob_weight_5") == 0) return group_prob_weight[4];
			if (wcscmp(fieldName, L"group_prob_weight_6") == 0) return group_prob_weight[5];
			if (wcscmp(fieldName, L"group_prob_weight_7") == 0) return group_prob_weight[6];
			if (wcscmp(fieldName, L"group_prob_weight_8") == 0) return group_prob_weight[7];
			if (wcscmp(fieldName, L"group_prob_weight_total") == 0) return group_prob_weight_total;

			return std::any();
		}
		std::wstring GetFieldAsString(const wchar_t* fieldName) {
			if (wcscmp(fieldName, L"alias") == 0) return Data::AnyFieldToStringConverter::ToString(&alias);
			if (wcscmp(fieldName, L"name") == 0) return Data::AnyFieldToStringConverter::ToString(&name);
			if (wcscmp(fieldName, L"shuffle_reward_icon") == 0) return Data::AnyFieldToStringConverter::ToString(&shuffle_reward_icon);
			if (wcscmp(fieldName, L"shuffle_reward_tooltip") == 0) return Data::AnyFieldToStringConverter::ToString(&shuffle_reward_tooltip);
			if (wcscmp(fieldName, L"upgrade_reward_preview") == 0) return Data::AnyFieldToStringConverter::ToString(&upgrade_reward_preview);
			if (wcscmp(fieldName, L"upgrade_reward_warning_message") == 0) return Data::AnyFieldToStringConverter::ToString(&upgrade_reward_warning_message);
			if (wcscmp(fieldName, L"reward_type") == 0) return Data::AnyFieldToStringConverter::ToString(&reward_type);
			if (wcscmp(fieldName, L"grade") == 0) return Data::AnyFieldToStringConverter::ToString(&grade);
			if (wcscmp(fieldName, L"color") == 0) return Data::AnyFieldToStringConverter::ToString(&color);
			if (wcscmp(fieldName, L"glyph_type") == 0) return Data::AnyFieldToStringConverter::ToString(&glyph_type);
			if (wcscmp(fieldName, L"cost_money") == 0) return Data::AnyFieldToStringConverter::ToString(&cost_money);
			if (wcscmp(fieldName, L"cost_item_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(cost_item[0]));
			if (wcscmp(fieldName, L"cost_item_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(cost_item[1]));
			if (wcscmp(fieldName, L"cost_item_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(cost_item[2]));
			if (wcscmp(fieldName, L"cost_item_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(cost_item[3]));
			if (wcscmp(fieldName, L"cost_item_count_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(cost_item_count[0]));
			if (wcscmp(fieldName, L"cost_item_count_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(cost_item_count[1]));
			if (wcscmp(fieldName, L"cost_item_count_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(cost_item_count[2]));
			if (wcscmp(fieldName, L"cost_item_count_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(cost_item_count[3]));
			if (wcscmp(fieldName, L"tier_pick_probability") == 0) return Data::AnyFieldToStringConverter::ToString(&tier_pick_probability);
			if (wcscmp(fieldName, L"additional_glyph_pick_probability") == 0) return Data::AnyFieldToStringConverter::ToString(&additional_glyph_pick_probability);
			if (wcscmp(fieldName, L"grade_prob_weight_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(grade_prob_weight[0]));
			if (wcscmp(fieldName, L"grade_prob_weight_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(grade_prob_weight[1]));
			if (wcscmp(fieldName, L"grade_prob_weight_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(grade_prob_weight[2]));
			if (wcscmp(fieldName, L"grade_prob_weight_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(grade_prob_weight[3]));
			if (wcscmp(fieldName, L"grade_prob_weight_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(grade_prob_weight[4]));
			if (wcscmp(fieldName, L"grade_prob_weight_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(grade_prob_weight[5]));
			if (wcscmp(fieldName, L"grade_prob_weight_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(grade_prob_weight[6]));
			if (wcscmp(fieldName, L"grade_prob_weight_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(grade_prob_weight[7]));
			if (wcscmp(fieldName, L"grade_prob_weight_total") == 0) return Data::AnyFieldToStringConverter::ToString(&grade_prob_weight_total);
			if (wcscmp(fieldName, L"tier_prob_weight_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(tier_prob_weight[0]));
			if (wcscmp(fieldName, L"tier_prob_weight_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(tier_prob_weight[1]));
			if (wcscmp(fieldName, L"tier_prob_weight_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(tier_prob_weight[2]));
			if (wcscmp(fieldName, L"tier_prob_weight_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(tier_prob_weight[3]));
			if (wcscmp(fieldName, L"tier_prob_weight_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(tier_prob_weight[4]));
			if (wcscmp(fieldName, L"tier_prob_weight_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(tier_prob_weight[5]));
			if (wcscmp(fieldName, L"tier_prob_weight_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(tier_prob_weight[6]));
			if (wcscmp(fieldName, L"tier_prob_weight_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(tier_prob_weight[7]));
			if (wcscmp(fieldName, L"tier_prob_weight_total") == 0) return Data::AnyFieldToStringConverter::ToString(&tier_prob_weight_total);
			if (wcscmp(fieldName, L"result_glyph_prob_weight_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[0]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[1]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[2]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[3]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[4]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[5]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[6]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[7]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_9") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[8]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_10") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[9]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_11") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[10]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_12") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[11]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_13") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[12]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_14") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[13]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_15") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[14]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_16") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[15]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_17") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[16]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_18") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[17]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_19") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[18]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_20") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[19]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_21") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[20]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_22") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[21]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_23") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[22]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_24") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[23]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_25") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[24]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_26") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[25]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_27") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[26]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_28") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[27]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_29") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[28]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_30") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph_prob_weight[29]));
			if (wcscmp(fieldName, L"result_glyph_prob_weight_total") == 0) return Data::AnyFieldToStringConverter::ToString(&result_glyph_prob_weight_total);
			if (wcscmp(fieldName, L"result_glyph_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[0]));
			if (wcscmp(fieldName, L"result_glyph_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[1]));
			if (wcscmp(fieldName, L"result_glyph_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[2]));
			if (wcscmp(fieldName, L"result_glyph_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[3]));
			if (wcscmp(fieldName, L"result_glyph_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[4]));
			if (wcscmp(fieldName, L"result_glyph_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[5]));
			if (wcscmp(fieldName, L"result_glyph_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[6]));
			if (wcscmp(fieldName, L"result_glyph_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[7]));
			if (wcscmp(fieldName, L"result_glyph_9") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[8]));
			if (wcscmp(fieldName, L"result_glyph_10") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[9]));
			if (wcscmp(fieldName, L"result_glyph_11") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[10]));
			if (wcscmp(fieldName, L"result_glyph_12") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[11]));
			if (wcscmp(fieldName, L"result_glyph_13") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[12]));
			if (wcscmp(fieldName, L"result_glyph_14") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[13]));
			if (wcscmp(fieldName, L"result_glyph_15") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[14]));
			if (wcscmp(fieldName, L"result_glyph_16") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[15]));
			if (wcscmp(fieldName, L"result_glyph_17") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[16]));
			if (wcscmp(fieldName, L"result_glyph_18") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[17]));
			if (wcscmp(fieldName, L"result_glyph_19") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[18]));
			if (wcscmp(fieldName, L"result_glyph_20") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[19]));
			if (wcscmp(fieldName, L"result_glyph_21") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[20]));
			if (wcscmp(fieldName, L"result_glyph_22") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[21]));
			if (wcscmp(fieldName, L"result_glyph_23") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[22]));
			if (wcscmp(fieldName, L"result_glyph_24") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[23]));
			if (wcscmp(fieldName, L"result_glyph_25") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[24]));
			if (wcscmp(fieldName, L"result_glyph_26") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[25]));
			if (wcscmp(fieldName, L"result_glyph_27") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[26]));
			if (wcscmp(fieldName, L"result_glyph_28") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[27]));
			if (wcscmp(fieldName, L"result_glyph_29") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[28]));
			if (wcscmp(fieldName, L"result_glyph_30") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_glyph[29]));
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph_prob_weight[0]));
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph_prob_weight[1]));
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph_prob_weight[2]));
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph_prob_weight[3]));
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph_prob_weight[4]));
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph_prob_weight[5]));
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph_prob_weight[6]));
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph_prob_weight[7]));
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_9") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph_prob_weight[8]));
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_10") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph_prob_weight[9]));
			if (wcscmp(fieldName, L"additional_glyph_prob_weight_total") == 0) return Data::AnyFieldToStringConverter::ToString(&additional_glyph_prob_weight_total);
			if (wcscmp(fieldName, L"additional_glyph_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph[0]));
			if (wcscmp(fieldName, L"additional_glyph_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph[1]));
			if (wcscmp(fieldName, L"additional_glyph_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph[2]));
			if (wcscmp(fieldName, L"additional_glyph_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph[3]));
			if (wcscmp(fieldName, L"additional_glyph_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph[4]));
			if (wcscmp(fieldName, L"additional_glyph_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph[5]));
			if (wcscmp(fieldName, L"additional_glyph_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph[6]));
			if (wcscmp(fieldName, L"additional_glyph_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph[7]));
			if (wcscmp(fieldName, L"additional_glyph_9") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph[8]));
			if (wcscmp(fieldName, L"additional_glyph_10") == 0) return Data::AnyFieldToStringConverter::ToString(&(additional_glyph[9]));
			if (wcscmp(fieldName, L"cost_group_id_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(cost_group_id[0]));
			if (wcscmp(fieldName, L"cost_group_id_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(cost_group_id[1]));
			if (wcscmp(fieldName, L"cost_group_id_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(cost_group_id[2]));
			if (wcscmp(fieldName, L"cost_group_id_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(cost_group_id[3]));
			if (wcscmp(fieldName, L"cost_group_id_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(cost_group_id[4]));
			if (wcscmp(fieldName, L"cost_group_id_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(cost_group_id[5]));
			if (wcscmp(fieldName, L"cost_group_id_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(cost_group_id[6]));
			if (wcscmp(fieldName, L"cost_group_id_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(cost_group_id[7]));
			if (wcscmp(fieldName, L"result_group_id_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_group_id[0]));
			if (wcscmp(fieldName, L"result_group_id_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_group_id[1]));
			if (wcscmp(fieldName, L"result_group_id_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_group_id[2]));
			if (wcscmp(fieldName, L"result_group_id_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_group_id[3]));
			if (wcscmp(fieldName, L"result_group_id_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_group_id[4]));
			if (wcscmp(fieldName, L"result_group_id_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_group_id[5]));
			if (wcscmp(fieldName, L"result_group_id_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_group_id[6]));
			if (wcscmp(fieldName, L"result_group_id_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(result_group_id[7]));
			if (wcscmp(fieldName, L"group_prob_weight_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(group_prob_weight[0]));
			if (wcscmp(fieldName, L"group_prob_weight_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(group_prob_weight[1]));
			if (wcscmp(fieldName, L"group_prob_weight_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(group_prob_weight[2]));
			if (wcscmp(fieldName, L"group_prob_weight_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(group_prob_weight[3]));
			if (wcscmp(fieldName, L"group_prob_weight_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(group_prob_weight[4]));
			if (wcscmp(fieldName, L"group_prob_weight_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(group_prob_weight[5]));
			if (wcscmp(fieldName, L"group_prob_weight_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(group_prob_weight[6]));
			if (wcscmp(fieldName, L"group_prob_weight_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(group_prob_weight[7]));
			if (wcscmp(fieldName, L"group_prob_weight_total") == 0) return Data::AnyFieldToStringConverter::ToString(&group_prob_weight_total);

			return L"";
		}
		void AutoCorrectLookupOffsets(const char* lookupDataPtr) {
			if (reinterpret_cast<std::uintptr_t>(alias) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) alias = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(alias));
		}
		union Key
		{
            struct {
                __int16 id;

            };
			unsigned __int64 key;
		};
		__declspec(align(8)) Key key;
		wchar_t* alias;
Data::TableRef name;
int name_tableId(){return 405;};
Data::IconRef shuffle_reward_icon;
Data::TableRef shuffle_reward_tooltip;
int shuffle_reward_tooltip_tableId(){return 405;};
__int8 upgrade_reward_preview;
std::wstring upgrade_reward_preview_EnumValue() const {return Get_upgrade_reward_preview_EnumValue(upgrade_reward_preview);};
bool upgrade_reward_warning_message;
__int8 reward_type;
std::wstring reward_type_EnumValue() const {return Get_reward_type_EnumValue(reward_type);};
__int8 grade;
__int8 color;
std::wstring color_EnumValue() const {return Get_color_EnumValue(color);};
__int8 glyph_type;
std::wstring glyph_type_EnumValue() const {return Get_glyph_type_EnumValue(glyph_type);};
char Pad0[2];
__int32 cost_money;
Data::TableRef cost_item[4];
int cost_item_tableId(){return 189;};
__int16 cost_item_count[4];
__int8 tier_pick_probability;
__int8 additional_glyph_pick_probability;
__int16 grade_prob_weight[8];
__int16 grade_prob_weight_total;
__int16 tier_prob_weight[8];
__int16 tier_prob_weight_total;
__int16 result_glyph_prob_weight[30];
__int16 result_glyph_prob_weight_total;
Data::TableRef result_glyph[30];
int result_glyph_tableId(){return 153;};
__int16 additional_glyph_prob_weight[10];
__int16 additional_glyph_prob_weight_total;
char Pad1[2];
Data::TableRef additional_glyph[10];
int additional_glyph_tableId(){return 153;};
__int16 cost_group_id[8];
__int16 result_group_id[8];
__int16 group_prob_weight[8];
__int16 group_prob_weight_total;

		static TableVersion Version() { return TableVersion(4, 0); }
		static __int16 TableId() { return 155; }
		static __int32 SubType() { return 0; }
	};
#pragma pack(pop)
#pragma pack(push, 1)
	struct __declspec(align(4)) glyph_reward_RecordPtr // : DrRecordPtr
	{
		glyph_reward_Record* _record;
		int _cacheChunkIndex;
		//__unaligned __declspec(align(1)) const Data::glyph_reward_Record* _debug;
		bool _makeCopy;
	};
#pragma pack(pop)
}