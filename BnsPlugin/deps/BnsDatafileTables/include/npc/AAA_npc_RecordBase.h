/*
 Generated Code! Do not manually edit this code. Modify the generator instead.
*/
#pragma once
#include "../DrEl.h"
#include "../AnyToStringConverter.h"

namespace Data {

#pragma pack(push, 1)
	struct npc_Record : DrEl
	{
	private:
		static std::wstring Get_boss_type_EnumValue(__int8 value);
		static std::wstring Get_neutral_hostile_EnumValue(__int8 value);
		static std::wstring Get_immune_skill_attribute_EnumValue(__int8 value);
		static std::wstring Get_immune_effect_attribute_EnumValue(__int16 value);
		static std::wstring Get_immune_breaker_attribute_EnumValue(__int16 value);
		static std::wstring Get_production_EnumValue(__int8 value);
		static std::wstring Get_forwarding_types_EnumValue(__int8 value);
		static std::wstring Get_loot_forwarding_types_EnumValue(__int8 value);
		static std::wstring Get_finish_blow_forwarding_types_EnumValue(__int8 value);
		static std::wstring Get_race_EnumValue(__int8 value);
		static std::wstring Get_sex_EnumValue(__int8 value);
		static std::wstring Get_job_EnumValue(__int8 value);
		static std::wstring Get_stance_EnumValue(__int8 value);
		static std::wstring Get_grade2_EnumValue(__int8 value);
		static std::wstring Get_boss_ui_type_EnumValue(__int8 value);
		static std::wstring Get_boss_slot_EnumValue(__int8 value);
		static std::wstring Get_move_type_EnumValue(__int8 value);
		static std::wstring Get_size_type_EnumValue(__int8 value);
		static std::wstring Get_role_type_EnumValue(__int8 value);
		static std::wstring Get_race_type_EnumValue(__int8 value);
		static std::wstring Get_ghost_type_EnumValue(__int8 value);
		static std::wstring Get_race_type2_EnumValue(__int8 value);
		static std::wstring Get_attribute_type_EnumValue(__int8 value);
	public:
		std::any GetField(const wchar_t* fieldName) const {
			if (wcscmp(fieldName, L"alias") == 0) return alias;
			if (wcscmp(fieldName, L"name") == 0) return name;
			if (wcscmp(fieldName, L"title") == 0) return title;
			if (wcscmp(fieldName, L"name2") == 0) return name2;
			if (wcscmp(fieldName, L"title2") == 0) return title2;
			if (wcscmp(fieldName, L"boss_npc") == 0) return boss_npc;
			if (wcscmp(fieldName, L"soul_npc") == 0) return soul_npc;
			if (wcscmp(fieldName, L"boss_type") == 0) return boss_type;
			if (wcscmp(fieldName, L"write_combat_log") == 0) return write_combat_log;
			if (wcscmp(fieldName, L"radius") == 0) return radius;
			if (wcscmp(fieldName, L"scale") == 0) return scale;
			if (wcscmp(fieldName, L"walk_speed") == 0) return walk_speed;
			if (wcscmp(fieldName, L"run_speed") == 0) return run_speed;
			if (wcscmp(fieldName, L"neutral_hostile") == 0) return neutral_hostile;
			if (wcscmp(fieldName, L"offensive") == 0) return offensive;
			if (wcscmp(fieldName, L"immune_skill_attribute") == 0) return immune_skill_attribute;
			if (wcscmp(fieldName, L"immune_skill_attribute_1") == 0) return immune_skill_attribute[0];
			if (wcscmp(fieldName, L"immune_skill_attribute_2") == 0) return immune_skill_attribute[1];
			if (wcscmp(fieldName, L"immune_skill_attribute_3") == 0) return immune_skill_attribute[2];
			if (wcscmp(fieldName, L"immune_skill_attribute_4") == 0) return immune_skill_attribute[3];
			if (wcscmp(fieldName, L"immune_skill_attribute_5") == 0) return immune_skill_attribute[4];
			if (wcscmp(fieldName, L"immune_skill_attribute_6") == 0) return immune_skill_attribute[5];
			if (wcscmp(fieldName, L"immune_skill_attribute_7") == 0) return immune_skill_attribute[6];
			if (wcscmp(fieldName, L"immune_skill_attribute_8") == 0) return immune_skill_attribute[7];
			if (wcscmp(fieldName, L"immune_effect_attribute") == 0) return immune_effect_attribute;
			if (wcscmp(fieldName, L"immune_effect_attribute_1") == 0) return immune_effect_attribute[0];
			if (wcscmp(fieldName, L"immune_effect_attribute_2") == 0) return immune_effect_attribute[1];
			if (wcscmp(fieldName, L"immune_effect_attribute_3") == 0) return immune_effect_attribute[2];
			if (wcscmp(fieldName, L"immune_effect_attribute_4") == 0) return immune_effect_attribute[3];
			if (wcscmp(fieldName, L"immune_effect_attribute_5") == 0) return immune_effect_attribute[4];
			if (wcscmp(fieldName, L"immune_effect_attribute_6") == 0) return immune_effect_attribute[5];
			if (wcscmp(fieldName, L"immune_effect_attribute_7") == 0) return immune_effect_attribute[6];
			if (wcscmp(fieldName, L"immune_effect_attribute_8") == 0) return immune_effect_attribute[7];
			if (wcscmp(fieldName, L"immune_effect_attribute_9") == 0) return immune_effect_attribute[8];
			if (wcscmp(fieldName, L"immune_effect_attribute_10") == 0) return immune_effect_attribute[9];
			if (wcscmp(fieldName, L"immune_effect_attribute_11") == 0) return immune_effect_attribute[10];
			if (wcscmp(fieldName, L"immune_effect_attribute_12") == 0) return immune_effect_attribute[11];
			if (wcscmp(fieldName, L"immune_effect_attribute_13") == 0) return immune_effect_attribute[12];
			if (wcscmp(fieldName, L"immune_effect_attribute_14") == 0) return immune_effect_attribute[13];
			if (wcscmp(fieldName, L"immune_effect_attribute_15") == 0) return immune_effect_attribute[14];
			if (wcscmp(fieldName, L"immune_effect_attribute_16") == 0) return immune_effect_attribute[15];
			if (wcscmp(fieldName, L"immune_effect_attribute_17") == 0) return immune_effect_attribute[16];
			if (wcscmp(fieldName, L"immune_effect_attribute_18") == 0) return immune_effect_attribute[17];
			if (wcscmp(fieldName, L"immune_effect_attribute_19") == 0) return immune_effect_attribute[18];
			if (wcscmp(fieldName, L"immune_effect_attribute_20") == 0) return immune_effect_attribute[19];
			if (wcscmp(fieldName, L"immune_breaker_attribute") == 0) return immune_breaker_attribute;
			if (wcscmp(fieldName, L"immune_breaker_attribute_1") == 0) return immune_breaker_attribute[0];
			if (wcscmp(fieldName, L"immune_breaker_attribute_2") == 0) return immune_breaker_attribute[1];
			if (wcscmp(fieldName, L"immune_breaker_attribute_3") == 0) return immune_breaker_attribute[2];
			if (wcscmp(fieldName, L"immune_breaker_attribute_4") == 0) return immune_breaker_attribute[3];
			if (wcscmp(fieldName, L"immune_breaker_attribute_5") == 0) return immune_breaker_attribute[4];
			if (wcscmp(fieldName, L"immune_breaker_attribute_6") == 0) return immune_breaker_attribute[5];
			if (wcscmp(fieldName, L"immune_breaker_attribute_7") == 0) return immune_breaker_attribute[6];
			if (wcscmp(fieldName, L"immune_breaker_attribute_8") == 0) return immune_breaker_attribute[7];
			if (wcscmp(fieldName, L"immune_breaker_count") == 0) return immune_breaker_count;
			if (wcscmp(fieldName, L"immune_breaker_init_duration") == 0) return immune_breaker_init_duration;
			if (wcscmp(fieldName, L"immune_breaker_show") == 0) return immune_breaker_show;
			if (wcscmp(fieldName, L"immune_breaker_show_1") == 0) return immune_breaker_show[0];
			if (wcscmp(fieldName, L"immune_breaker_show_2") == 0) return immune_breaker_show[1];
			if (wcscmp(fieldName, L"immune_breaker_show_3") == 0) return immune_breaker_show[2];
			if (wcscmp(fieldName, L"immune_breaker_show_4") == 0) return immune_breaker_show[3];
			if (wcscmp(fieldName, L"immune_breaker_show_5") == 0) return immune_breaker_show[4];
			if (wcscmp(fieldName, L"immune_breaker_show_6") == 0) return immune_breaker_show[5];
			if (wcscmp(fieldName, L"immune_breaker_show_7") == 0) return immune_breaker_show[6];
			if (wcscmp(fieldName, L"immune_breaker_show_8") == 0) return immune_breaker_show[7];
			if (wcscmp(fieldName, L"store") == 0) return store;
			if (wcscmp(fieldName, L"store_by_item") == 0) return store_by_item;
			if (wcscmp(fieldName, L"store2") == 0) return store2;
			if (wcscmp(fieldName, L"store2_1") == 0) return store2[0];
			if (wcscmp(fieldName, L"store2_2") == 0) return store2[1];
			if (wcscmp(fieldName, L"store2_3") == 0) return store2[2];
			if (wcscmp(fieldName, L"store2_4") == 0) return store2[3];
			if (wcscmp(fieldName, L"store2_5") == 0) return store2[4];
			if (wcscmp(fieldName, L"store2_6") == 0) return store2[5];
			if (wcscmp(fieldName, L"teleport") == 0) return teleport;
			if (wcscmp(fieldName, L"repairer") == 0) return repairer;
			if (wcscmp(fieldName, L"production") == 0) return production;
			if (wcscmp(fieldName, L"market") == 0) return market;
			if (wcscmp(fieldName, L"post_office") == 0) return post_office;
			if (wcscmp(fieldName, L"exchange_faction_score") == 0) return exchange_faction_score;
			if (wcscmp(fieldName, L"exchange_faction_score_max_faction_level") == 0) return exchange_faction_score_max_faction_level;
			if (wcscmp(fieldName, L"exchange_faction_score_multiply_value") == 0) return exchange_faction_score_multiply_value;
			if (wcscmp(fieldName, L"join_leave_faction") == 0) return join_leave_faction;
			if (wcscmp(fieldName, L"transfer_faction") == 0) return transfer_faction;
			if (wcscmp(fieldName, L"depot") == 0) return depot;
			if (wcscmp(fieldName, L"guild") == 0) return guild;
			if (wcscmp(fieldName, L"max_faction_score") == 0) return max_faction_score;
			if (wcscmp(fieldName, L"enable_co_ownership_pouch") == 0) return enable_co_ownership_pouch;
			if (wcscmp(fieldName, L"reward_faction_score") == 0) return reward_faction_score;
			if (wcscmp(fieldName, L"peaktime_reward_sun_start_hour") == 0) return peaktime_reward_sun_start_hour;
			if (wcscmp(fieldName, L"peaktime_reward_sun_end_hour") == 0) return peaktime_reward_sun_end_hour;
			if (wcscmp(fieldName, L"peaktime_reward_mon_start_hour") == 0) return peaktime_reward_mon_start_hour;
			if (wcscmp(fieldName, L"peaktime_reward_mon_end_hour") == 0) return peaktime_reward_mon_end_hour;
			if (wcscmp(fieldName, L"peaktime_reward_tue_start_hour") == 0) return peaktime_reward_tue_start_hour;
			if (wcscmp(fieldName, L"peaktime_reward_tue_end_hour") == 0) return peaktime_reward_tue_end_hour;
			if (wcscmp(fieldName, L"peaktime_reward_wed_start_hour") == 0) return peaktime_reward_wed_start_hour;
			if (wcscmp(fieldName, L"peaktime_reward_wed_end_hour") == 0) return peaktime_reward_wed_end_hour;
			if (wcscmp(fieldName, L"peaktime_reward_thu_start_hour") == 0) return peaktime_reward_thu_start_hour;
			if (wcscmp(fieldName, L"peaktime_reward_thu_end_hour") == 0) return peaktime_reward_thu_end_hour;
			if (wcscmp(fieldName, L"peaktime_reward_fri_start_hour") == 0) return peaktime_reward_fri_start_hour;
			if (wcscmp(fieldName, L"peaktime_reward_fri_end_hour") == 0) return peaktime_reward_fri_end_hour;
			if (wcscmp(fieldName, L"peaktime_reward_sat_start_hour") == 0) return peaktime_reward_sat_start_hour;
			if (wcscmp(fieldName, L"peaktime_reward_sat_end_hour") == 0) return peaktime_reward_sat_end_hour;
			if (wcscmp(fieldName, L"contribution_reward") == 0) return contribution_reward;
			if (wcscmp(fieldName, L"contribution_day_reward_sun") == 0) return contribution_day_reward_sun;
			if (wcscmp(fieldName, L"contribution_day_reward_mon") == 0) return contribution_day_reward_mon;
			if (wcscmp(fieldName, L"contribution_day_reward_tue") == 0) return contribution_day_reward_tue;
			if (wcscmp(fieldName, L"contribution_day_reward_wed") == 0) return contribution_day_reward_wed;
			if (wcscmp(fieldName, L"contribution_day_reward_thu") == 0) return contribution_day_reward_thu;
			if (wcscmp(fieldName, L"contribution_day_reward_fri") == 0) return contribution_day_reward_fri;
			if (wcscmp(fieldName, L"contribution_day_reward_sat") == 0) return contribution_day_reward_sat;
			if (wcscmp(fieldName, L"contribution_peaktime_reward_sun_start_hour") == 0) return contribution_peaktime_reward_sun_start_hour;
			if (wcscmp(fieldName, L"contribution_peaktime_reward_sun_end_hour") == 0) return contribution_peaktime_reward_sun_end_hour;
			if (wcscmp(fieldName, L"contribution_peaktime_reward_mon_start_hour") == 0) return contribution_peaktime_reward_mon_start_hour;
			if (wcscmp(fieldName, L"contribution_peaktime_reward_mon_end_hour") == 0) return contribution_peaktime_reward_mon_end_hour;
			if (wcscmp(fieldName, L"contribution_peaktime_reward_tue_start_hour") == 0) return contribution_peaktime_reward_tue_start_hour;
			if (wcscmp(fieldName, L"contribution_peaktime_reward_tue_end_hour") == 0) return contribution_peaktime_reward_tue_end_hour;
			if (wcscmp(fieldName, L"contribution_peaktime_reward_wed_start_hour") == 0) return contribution_peaktime_reward_wed_start_hour;
			if (wcscmp(fieldName, L"contribution_peaktime_reward_wed_end_hour") == 0) return contribution_peaktime_reward_wed_end_hour;
			if (wcscmp(fieldName, L"contribution_peaktime_reward_thu_start_hour") == 0) return contribution_peaktime_reward_thu_start_hour;
			if (wcscmp(fieldName, L"contribution_peaktime_reward_thu_end_hour") == 0) return contribution_peaktime_reward_thu_end_hour;
			if (wcscmp(fieldName, L"contribution_peaktime_reward_fri_start_hour") == 0) return contribution_peaktime_reward_fri_start_hour;
			if (wcscmp(fieldName, L"contribution_peaktime_reward_fri_end_hour") == 0) return contribution_peaktime_reward_fri_end_hour;
			if (wcscmp(fieldName, L"contribution_peaktime_reward_sat_start_hour") == 0) return contribution_peaktime_reward_sat_start_hour;
			if (wcscmp(fieldName, L"contribution_peaktime_reward_sat_end_hour") == 0) return contribution_peaktime_reward_sat_end_hour;
			if (wcscmp(fieldName, L"personal_dropped_pouch_reward") == 0) return personal_dropped_pouch_reward;
			if (wcscmp(fieldName, L"reward_sealed_dungeon") == 0) return reward_sealed_dungeon;
			if (wcscmp(fieldName, L"fielditemdrop") == 0) return fielditemdrop;
			if (wcscmp(fieldName, L"deadbody_fielditemdrop") == 0) return deadbody_fielditemdrop;
			if (wcscmp(fieldName, L"deadbody_pickup_duration") == 0) return deadbody_pickup_duration;
			if (wcscmp(fieldName, L"burrow") == 0) return burrow;
			if (wcscmp(fieldName, L"manipulate_duration") == 0) return manipulate_duration;
			if (wcscmp(fieldName, L"caster_manipulate_animname") == 0) return caster_manipulate_animname;
			if (wcscmp(fieldName, L"target_manipulate_animname") == 0) return target_manipulate_animname;
			if (wcscmp(fieldName, L"caster_manipulate_show") == 0) return caster_manipulate_show;
			if (wcscmp(fieldName, L"target_manipulate_show") == 0) return target_manipulate_show;
			if (wcscmp(fieldName, L"action_name") == 0) return action_name;
			if (wcscmp(fieldName, L"action_desc") == 0) return action_desc;
			if (wcscmp(fieldName, L"manipulate_transit_zone") == 0) return manipulate_transit_zone;
			if (wcscmp(fieldName, L"forwarding_types") == 0) return forwarding_types;
			if (wcscmp(fieldName, L"forwarding_types_1") == 0) return forwarding_types[0];
			if (wcscmp(fieldName, L"forwarding_types_2") == 0) return forwarding_types[1];
			if (wcscmp(fieldName, L"forwarding_types_3") == 0) return forwarding_types[2];
			if (wcscmp(fieldName, L"forwarding_types_4") == 0) return forwarding_types[3];
			if (wcscmp(fieldName, L"forwarding_types_5") == 0) return forwarding_types[4];
			if (wcscmp(fieldName, L"forwarding_types_6") == 0) return forwarding_types[5];
			if (wcscmp(fieldName, L"forwarding_types_7") == 0) return forwarding_types[6];
			if (wcscmp(fieldName, L"forwarding_types_8") == 0) return forwarding_types[7];
			if (wcscmp(fieldName, L"forwarding_types_9") == 0) return forwarding_types[8];
			if (wcscmp(fieldName, L"forwarding_types_10") == 0) return forwarding_types[9];
			if (wcscmp(fieldName, L"forwarding_types_11") == 0) return forwarding_types[10];
			if (wcscmp(fieldName, L"forwarding_types_12") == 0) return forwarding_types[11];
			if (wcscmp(fieldName, L"forwarding_types_13") == 0) return forwarding_types[12];
			if (wcscmp(fieldName, L"forwarding_types_14") == 0) return forwarding_types[13];
			if (wcscmp(fieldName, L"forwarding_types_15") == 0) return forwarding_types[14];
			if (wcscmp(fieldName, L"forwarding_types_16") == 0) return forwarding_types[15];
			if (wcscmp(fieldName, L"forwarding_types_17") == 0) return forwarding_types[16];
			if (wcscmp(fieldName, L"forwarding_types_18") == 0) return forwarding_types[17];
			if (wcscmp(fieldName, L"forwarding_types_19") == 0) return forwarding_types[18];
			if (wcscmp(fieldName, L"forwarding_types_20") == 0) return forwarding_types[19];
			if (wcscmp(fieldName, L"forwarding_types_21") == 0) return forwarding_types[20];
			if (wcscmp(fieldName, L"forwarding_types_22") == 0) return forwarding_types[21];
			if (wcscmp(fieldName, L"forwarding_types_23") == 0) return forwarding_types[22];
			if (wcscmp(fieldName, L"forwarding_types_24") == 0) return forwarding_types[23];
			if (wcscmp(fieldName, L"forwarding_types_25") == 0) return forwarding_types[24];
			if (wcscmp(fieldName, L"forwarding_types_26") == 0) return forwarding_types[25];
			if (wcscmp(fieldName, L"forwarding_types_27") == 0) return forwarding_types[26];
			if (wcscmp(fieldName, L"forwarding_types_28") == 0) return forwarding_types[27];
			if (wcscmp(fieldName, L"forwarding_types_29") == 0) return forwarding_types[28];
			if (wcscmp(fieldName, L"forwarding_types_30") == 0) return forwarding_types[29];
			if (wcscmp(fieldName, L"forwarding_types_31") == 0) return forwarding_types[30];
			if (wcscmp(fieldName, L"forwarding_types_32") == 0) return forwarding_types[31];
			if (wcscmp(fieldName, L"forwarding_types_33") == 0) return forwarding_types[32];
			if (wcscmp(fieldName, L"forwarding_types_34") == 0) return forwarding_types[33];
			if (wcscmp(fieldName, L"forwarding_types_35") == 0) return forwarding_types[34];
			if (wcscmp(fieldName, L"forwarding_types_36") == 0) return forwarding_types[35];
			if (wcscmp(fieldName, L"forwarding_types_37") == 0) return forwarding_types[36];
			if (wcscmp(fieldName, L"forwarding_types_38") == 0) return forwarding_types[37];
			if (wcscmp(fieldName, L"forwarding_types_39") == 0) return forwarding_types[38];
			if (wcscmp(fieldName, L"forwarding_types_40") == 0) return forwarding_types[39];
			if (wcscmp(fieldName, L"forwarding_types_41") == 0) return forwarding_types[40];
			if (wcscmp(fieldName, L"forwarding_types_42") == 0) return forwarding_types[41];
			if (wcscmp(fieldName, L"forwarding_types_43") == 0) return forwarding_types[42];
			if (wcscmp(fieldName, L"forwarding_types_44") == 0) return forwarding_types[43];
			if (wcscmp(fieldName, L"forwarding_types_45") == 0) return forwarding_types[44];
			if (wcscmp(fieldName, L"forwarding_types_46") == 0) return forwarding_types[45];
			if (wcscmp(fieldName, L"forwarding_types_47") == 0) return forwarding_types[46];
			if (wcscmp(fieldName, L"forwarding_types_48") == 0) return forwarding_types[47];
			if (wcscmp(fieldName, L"forwarding_types_49") == 0) return forwarding_types[48];
			if (wcscmp(fieldName, L"forwarding_types_50") == 0) return forwarding_types[49];
			if (wcscmp(fieldName, L"forwarding_types_51") == 0) return forwarding_types[50];
			if (wcscmp(fieldName, L"forwarding_types_52") == 0) return forwarding_types[51];
			if (wcscmp(fieldName, L"forwarding_types_53") == 0) return forwarding_types[52];
			if (wcscmp(fieldName, L"forwarding_types_54") == 0) return forwarding_types[53];
			if (wcscmp(fieldName, L"forwarding_types_55") == 0) return forwarding_types[54];
			if (wcscmp(fieldName, L"forwarding_types_56") == 0) return forwarding_types[55];
			if (wcscmp(fieldName, L"forwarding_types_57") == 0) return forwarding_types[56];
			if (wcscmp(fieldName, L"forwarding_types_58") == 0) return forwarding_types[57];
			if (wcscmp(fieldName, L"forwarding_types_59") == 0) return forwarding_types[58];
			if (wcscmp(fieldName, L"forwarding_types_60") == 0) return forwarding_types[59];
			if (wcscmp(fieldName, L"forwarding_types_61") == 0) return forwarding_types[60];
			if (wcscmp(fieldName, L"forwarding_types_62") == 0) return forwarding_types[61];
			if (wcscmp(fieldName, L"forwarding_types_63") == 0) return forwarding_types[62];
			if (wcscmp(fieldName, L"forwarding_types_64") == 0) return forwarding_types[63];
			if (wcscmp(fieldName, L"forwarding_types_65") == 0) return forwarding_types[64];
			if (wcscmp(fieldName, L"forwarding_types_66") == 0) return forwarding_types[65];
			if (wcscmp(fieldName, L"forwarding_types_67") == 0) return forwarding_types[66];
			if (wcscmp(fieldName, L"forwarding_types_68") == 0) return forwarding_types[67];
			if (wcscmp(fieldName, L"forwarding_types_69") == 0) return forwarding_types[68];
			if (wcscmp(fieldName, L"forwarding_types_70") == 0) return forwarding_types[69];
			if (wcscmp(fieldName, L"forwarding_types_71") == 0) return forwarding_types[70];
			if (wcscmp(fieldName, L"forwarding_types_72") == 0) return forwarding_types[71];
			if (wcscmp(fieldName, L"forwarding_types_73") == 0) return forwarding_types[72];
			if (wcscmp(fieldName, L"forwarding_types_74") == 0) return forwarding_types[73];
			if (wcscmp(fieldName, L"forwarding_types_75") == 0) return forwarding_types[74];
			if (wcscmp(fieldName, L"forwarding_types_76") == 0) return forwarding_types[75];
			if (wcscmp(fieldName, L"forwarding_types_77") == 0) return forwarding_types[76];
			if (wcscmp(fieldName, L"forwarding_types_78") == 0) return forwarding_types[77];
			if (wcscmp(fieldName, L"forwarding_types_79") == 0) return forwarding_types[78];
			if (wcscmp(fieldName, L"forwarding_types_80") == 0) return forwarding_types[79];
			if (wcscmp(fieldName, L"quests") == 0) return quests;
			if (wcscmp(fieldName, L"quests_1") == 0) return quests[0];
			if (wcscmp(fieldName, L"quests_2") == 0) return quests[1];
			if (wcscmp(fieldName, L"quests_3") == 0) return quests[2];
			if (wcscmp(fieldName, L"quests_4") == 0) return quests[3];
			if (wcscmp(fieldName, L"quests_5") == 0) return quests[4];
			if (wcscmp(fieldName, L"quests_6") == 0) return quests[5];
			if (wcscmp(fieldName, L"quests_7") == 0) return quests[6];
			if (wcscmp(fieldName, L"quests_8") == 0) return quests[7];
			if (wcscmp(fieldName, L"quests_9") == 0) return quests[8];
			if (wcscmp(fieldName, L"quests_10") == 0) return quests[9];
			if (wcscmp(fieldName, L"quests_11") == 0) return quests[10];
			if (wcscmp(fieldName, L"quests_12") == 0) return quests[11];
			if (wcscmp(fieldName, L"quests_13") == 0) return quests[12];
			if (wcscmp(fieldName, L"quests_14") == 0) return quests[13];
			if (wcscmp(fieldName, L"quests_15") == 0) return quests[14];
			if (wcscmp(fieldName, L"quests_16") == 0) return quests[15];
			if (wcscmp(fieldName, L"quests_17") == 0) return quests[16];
			if (wcscmp(fieldName, L"quests_18") == 0) return quests[17];
			if (wcscmp(fieldName, L"quests_19") == 0) return quests[18];
			if (wcscmp(fieldName, L"quests_20") == 0) return quests[19];
			if (wcscmp(fieldName, L"quests_21") == 0) return quests[20];
			if (wcscmp(fieldName, L"quests_22") == 0) return quests[21];
			if (wcscmp(fieldName, L"quests_23") == 0) return quests[22];
			if (wcscmp(fieldName, L"quests_24") == 0) return quests[23];
			if (wcscmp(fieldName, L"quests_25") == 0) return quests[24];
			if (wcscmp(fieldName, L"quests_26") == 0) return quests[25];
			if (wcscmp(fieldName, L"quests_27") == 0) return quests[26];
			if (wcscmp(fieldName, L"quests_28") == 0) return quests[27];
			if (wcscmp(fieldName, L"quests_29") == 0) return quests[28];
			if (wcscmp(fieldName, L"quests_30") == 0) return quests[29];
			if (wcscmp(fieldName, L"quests_31") == 0) return quests[30];
			if (wcscmp(fieldName, L"quests_32") == 0) return quests[31];
			if (wcscmp(fieldName, L"quests_33") == 0) return quests[32];
			if (wcscmp(fieldName, L"quests_34") == 0) return quests[33];
			if (wcscmp(fieldName, L"quests_35") == 0) return quests[34];
			if (wcscmp(fieldName, L"quests_36") == 0) return quests[35];
			if (wcscmp(fieldName, L"quests_37") == 0) return quests[36];
			if (wcscmp(fieldName, L"quests_38") == 0) return quests[37];
			if (wcscmp(fieldName, L"quests_39") == 0) return quests[38];
			if (wcscmp(fieldName, L"quests_40") == 0) return quests[39];
			if (wcscmp(fieldName, L"quests_41") == 0) return quests[40];
			if (wcscmp(fieldName, L"quests_42") == 0) return quests[41];
			if (wcscmp(fieldName, L"quests_43") == 0) return quests[42];
			if (wcscmp(fieldName, L"quests_44") == 0) return quests[43];
			if (wcscmp(fieldName, L"quests_45") == 0) return quests[44];
			if (wcscmp(fieldName, L"quests_46") == 0) return quests[45];
			if (wcscmp(fieldName, L"quests_47") == 0) return quests[46];
			if (wcscmp(fieldName, L"quests_48") == 0) return quests[47];
			if (wcscmp(fieldName, L"quests_49") == 0) return quests[48];
			if (wcscmp(fieldName, L"quests_50") == 0) return quests[49];
			if (wcscmp(fieldName, L"quests_51") == 0) return quests[50];
			if (wcscmp(fieldName, L"quests_52") == 0) return quests[51];
			if (wcscmp(fieldName, L"quests_53") == 0) return quests[52];
			if (wcscmp(fieldName, L"quests_54") == 0) return quests[53];
			if (wcscmp(fieldName, L"quests_55") == 0) return quests[54];
			if (wcscmp(fieldName, L"quests_56") == 0) return quests[55];
			if (wcscmp(fieldName, L"quests_57") == 0) return quests[56];
			if (wcscmp(fieldName, L"quests_58") == 0) return quests[57];
			if (wcscmp(fieldName, L"quests_59") == 0) return quests[58];
			if (wcscmp(fieldName, L"quests_60") == 0) return quests[59];
			if (wcscmp(fieldName, L"quests_61") == 0) return quests[60];
			if (wcscmp(fieldName, L"quests_62") == 0) return quests[61];
			if (wcscmp(fieldName, L"quests_63") == 0) return quests[62];
			if (wcscmp(fieldName, L"quests_64") == 0) return quests[63];
			if (wcscmp(fieldName, L"quests_65") == 0) return quests[64];
			if (wcscmp(fieldName, L"quests_66") == 0) return quests[65];
			if (wcscmp(fieldName, L"quests_67") == 0) return quests[66];
			if (wcscmp(fieldName, L"quests_68") == 0) return quests[67];
			if (wcscmp(fieldName, L"quests_69") == 0) return quests[68];
			if (wcscmp(fieldName, L"quests_70") == 0) return quests[69];
			if (wcscmp(fieldName, L"quests_71") == 0) return quests[70];
			if (wcscmp(fieldName, L"quests_72") == 0) return quests[71];
			if (wcscmp(fieldName, L"quests_73") == 0) return quests[72];
			if (wcscmp(fieldName, L"quests_74") == 0) return quests[73];
			if (wcscmp(fieldName, L"quests_75") == 0) return quests[74];
			if (wcscmp(fieldName, L"quests_76") == 0) return quests[75];
			if (wcscmp(fieldName, L"quests_77") == 0) return quests[76];
			if (wcscmp(fieldName, L"quests_78") == 0) return quests[77];
			if (wcscmp(fieldName, L"quests_79") == 0) return quests[78];
			if (wcscmp(fieldName, L"quests_80") == 0) return quests[79];
			if (wcscmp(fieldName, L"missions") == 0) return missions;
			if (wcscmp(fieldName, L"missions_1") == 0) return missions[0];
			if (wcscmp(fieldName, L"missions_2") == 0) return missions[1];
			if (wcscmp(fieldName, L"missions_3") == 0) return missions[2];
			if (wcscmp(fieldName, L"missions_4") == 0) return missions[3];
			if (wcscmp(fieldName, L"missions_5") == 0) return missions[4];
			if (wcscmp(fieldName, L"missions_6") == 0) return missions[5];
			if (wcscmp(fieldName, L"missions_7") == 0) return missions[6];
			if (wcscmp(fieldName, L"missions_8") == 0) return missions[7];
			if (wcscmp(fieldName, L"missions_9") == 0) return missions[8];
			if (wcscmp(fieldName, L"missions_10") == 0) return missions[9];
			if (wcscmp(fieldName, L"missions_11") == 0) return missions[10];
			if (wcscmp(fieldName, L"missions_12") == 0) return missions[11];
			if (wcscmp(fieldName, L"missions_13") == 0) return missions[12];
			if (wcscmp(fieldName, L"missions_14") == 0) return missions[13];
			if (wcscmp(fieldName, L"missions_15") == 0) return missions[14];
			if (wcscmp(fieldName, L"missions_16") == 0) return missions[15];
			if (wcscmp(fieldName, L"missions_17") == 0) return missions[16];
			if (wcscmp(fieldName, L"missions_18") == 0) return missions[17];
			if (wcscmp(fieldName, L"missions_19") == 0) return missions[18];
			if (wcscmp(fieldName, L"missions_20") == 0) return missions[19];
			if (wcscmp(fieldName, L"missions_21") == 0) return missions[20];
			if (wcscmp(fieldName, L"missions_22") == 0) return missions[21];
			if (wcscmp(fieldName, L"missions_23") == 0) return missions[22];
			if (wcscmp(fieldName, L"missions_24") == 0) return missions[23];
			if (wcscmp(fieldName, L"missions_25") == 0) return missions[24];
			if (wcscmp(fieldName, L"missions_26") == 0) return missions[25];
			if (wcscmp(fieldName, L"missions_27") == 0) return missions[26];
			if (wcscmp(fieldName, L"missions_28") == 0) return missions[27];
			if (wcscmp(fieldName, L"missions_29") == 0) return missions[28];
			if (wcscmp(fieldName, L"missions_30") == 0) return missions[29];
			if (wcscmp(fieldName, L"missions_31") == 0) return missions[30];
			if (wcscmp(fieldName, L"missions_32") == 0) return missions[31];
			if (wcscmp(fieldName, L"missions_33") == 0) return missions[32];
			if (wcscmp(fieldName, L"missions_34") == 0) return missions[33];
			if (wcscmp(fieldName, L"missions_35") == 0) return missions[34];
			if (wcscmp(fieldName, L"missions_36") == 0) return missions[35];
			if (wcscmp(fieldName, L"missions_37") == 0) return missions[36];
			if (wcscmp(fieldName, L"missions_38") == 0) return missions[37];
			if (wcscmp(fieldName, L"missions_39") == 0) return missions[38];
			if (wcscmp(fieldName, L"missions_40") == 0) return missions[39];
			if (wcscmp(fieldName, L"missions_41") == 0) return missions[40];
			if (wcscmp(fieldName, L"missions_42") == 0) return missions[41];
			if (wcscmp(fieldName, L"missions_43") == 0) return missions[42];
			if (wcscmp(fieldName, L"missions_44") == 0) return missions[43];
			if (wcscmp(fieldName, L"missions_45") == 0) return missions[44];
			if (wcscmp(fieldName, L"missions_46") == 0) return missions[45];
			if (wcscmp(fieldName, L"missions_47") == 0) return missions[46];
			if (wcscmp(fieldName, L"missions_48") == 0) return missions[47];
			if (wcscmp(fieldName, L"missions_49") == 0) return missions[48];
			if (wcscmp(fieldName, L"missions_50") == 0) return missions[49];
			if (wcscmp(fieldName, L"missions_51") == 0) return missions[50];
			if (wcscmp(fieldName, L"missions_52") == 0) return missions[51];
			if (wcscmp(fieldName, L"missions_53") == 0) return missions[52];
			if (wcscmp(fieldName, L"missions_54") == 0) return missions[53];
			if (wcscmp(fieldName, L"missions_55") == 0) return missions[54];
			if (wcscmp(fieldName, L"missions_56") == 0) return missions[55];
			if (wcscmp(fieldName, L"missions_57") == 0) return missions[56];
			if (wcscmp(fieldName, L"missions_58") == 0) return missions[57];
			if (wcscmp(fieldName, L"missions_59") == 0) return missions[58];
			if (wcscmp(fieldName, L"missions_60") == 0) return missions[59];
			if (wcscmp(fieldName, L"missions_61") == 0) return missions[60];
			if (wcscmp(fieldName, L"missions_62") == 0) return missions[61];
			if (wcscmp(fieldName, L"missions_63") == 0) return missions[62];
			if (wcscmp(fieldName, L"missions_64") == 0) return missions[63];
			if (wcscmp(fieldName, L"missions_65") == 0) return missions[64];
			if (wcscmp(fieldName, L"missions_66") == 0) return missions[65];
			if (wcscmp(fieldName, L"missions_67") == 0) return missions[66];
			if (wcscmp(fieldName, L"missions_68") == 0) return missions[67];
			if (wcscmp(fieldName, L"missions_69") == 0) return missions[68];
			if (wcscmp(fieldName, L"missions_70") == 0) return missions[69];
			if (wcscmp(fieldName, L"missions_71") == 0) return missions[70];
			if (wcscmp(fieldName, L"missions_72") == 0) return missions[71];
			if (wcscmp(fieldName, L"missions_73") == 0) return missions[72];
			if (wcscmp(fieldName, L"missions_74") == 0) return missions[73];
			if (wcscmp(fieldName, L"missions_75") == 0) return missions[74];
			if (wcscmp(fieldName, L"missions_76") == 0) return missions[75];
			if (wcscmp(fieldName, L"missions_77") == 0) return missions[76];
			if (wcscmp(fieldName, L"missions_78") == 0) return missions[77];
			if (wcscmp(fieldName, L"missions_79") == 0) return missions[78];
			if (wcscmp(fieldName, L"missions_80") == 0) return missions[79];
			if (wcscmp(fieldName, L"cases") == 0) return cases;
			if (wcscmp(fieldName, L"cases_1") == 0) return cases[0];
			if (wcscmp(fieldName, L"cases_2") == 0) return cases[1];
			if (wcscmp(fieldName, L"cases_3") == 0) return cases[2];
			if (wcscmp(fieldName, L"cases_4") == 0) return cases[3];
			if (wcscmp(fieldName, L"cases_5") == 0) return cases[4];
			if (wcscmp(fieldName, L"cases_6") == 0) return cases[5];
			if (wcscmp(fieldName, L"cases_7") == 0) return cases[6];
			if (wcscmp(fieldName, L"cases_8") == 0) return cases[7];
			if (wcscmp(fieldName, L"cases_9") == 0) return cases[8];
			if (wcscmp(fieldName, L"cases_10") == 0) return cases[9];
			if (wcscmp(fieldName, L"cases_11") == 0) return cases[10];
			if (wcscmp(fieldName, L"cases_12") == 0) return cases[11];
			if (wcscmp(fieldName, L"cases_13") == 0) return cases[12];
			if (wcscmp(fieldName, L"cases_14") == 0) return cases[13];
			if (wcscmp(fieldName, L"cases_15") == 0) return cases[14];
			if (wcscmp(fieldName, L"cases_16") == 0) return cases[15];
			if (wcscmp(fieldName, L"cases_17") == 0) return cases[16];
			if (wcscmp(fieldName, L"cases_18") == 0) return cases[17];
			if (wcscmp(fieldName, L"cases_19") == 0) return cases[18];
			if (wcscmp(fieldName, L"cases_20") == 0) return cases[19];
			if (wcscmp(fieldName, L"cases_21") == 0) return cases[20];
			if (wcscmp(fieldName, L"cases_22") == 0) return cases[21];
			if (wcscmp(fieldName, L"cases_23") == 0) return cases[22];
			if (wcscmp(fieldName, L"cases_24") == 0) return cases[23];
			if (wcscmp(fieldName, L"cases_25") == 0) return cases[24];
			if (wcscmp(fieldName, L"cases_26") == 0) return cases[25];
			if (wcscmp(fieldName, L"cases_27") == 0) return cases[26];
			if (wcscmp(fieldName, L"cases_28") == 0) return cases[27];
			if (wcscmp(fieldName, L"cases_29") == 0) return cases[28];
			if (wcscmp(fieldName, L"cases_30") == 0) return cases[29];
			if (wcscmp(fieldName, L"cases_31") == 0) return cases[30];
			if (wcscmp(fieldName, L"cases_32") == 0) return cases[31];
			if (wcscmp(fieldName, L"cases_33") == 0) return cases[32];
			if (wcscmp(fieldName, L"cases_34") == 0) return cases[33];
			if (wcscmp(fieldName, L"cases_35") == 0) return cases[34];
			if (wcscmp(fieldName, L"cases_36") == 0) return cases[35];
			if (wcscmp(fieldName, L"cases_37") == 0) return cases[36];
			if (wcscmp(fieldName, L"cases_38") == 0) return cases[37];
			if (wcscmp(fieldName, L"cases_39") == 0) return cases[38];
			if (wcscmp(fieldName, L"cases_40") == 0) return cases[39];
			if (wcscmp(fieldName, L"cases_41") == 0) return cases[40];
			if (wcscmp(fieldName, L"cases_42") == 0) return cases[41];
			if (wcscmp(fieldName, L"cases_43") == 0) return cases[42];
			if (wcscmp(fieldName, L"cases_44") == 0) return cases[43];
			if (wcscmp(fieldName, L"cases_45") == 0) return cases[44];
			if (wcscmp(fieldName, L"cases_46") == 0) return cases[45];
			if (wcscmp(fieldName, L"cases_47") == 0) return cases[46];
			if (wcscmp(fieldName, L"cases_48") == 0) return cases[47];
			if (wcscmp(fieldName, L"cases_49") == 0) return cases[48];
			if (wcscmp(fieldName, L"cases_50") == 0) return cases[49];
			if (wcscmp(fieldName, L"cases_51") == 0) return cases[50];
			if (wcscmp(fieldName, L"cases_52") == 0) return cases[51];
			if (wcscmp(fieldName, L"cases_53") == 0) return cases[52];
			if (wcscmp(fieldName, L"cases_54") == 0) return cases[53];
			if (wcscmp(fieldName, L"cases_55") == 0) return cases[54];
			if (wcscmp(fieldName, L"cases_56") == 0) return cases[55];
			if (wcscmp(fieldName, L"cases_57") == 0) return cases[56];
			if (wcscmp(fieldName, L"cases_58") == 0) return cases[57];
			if (wcscmp(fieldName, L"cases_59") == 0) return cases[58];
			if (wcscmp(fieldName, L"cases_60") == 0) return cases[59];
			if (wcscmp(fieldName, L"cases_61") == 0) return cases[60];
			if (wcscmp(fieldName, L"cases_62") == 0) return cases[61];
			if (wcscmp(fieldName, L"cases_63") == 0) return cases[62];
			if (wcscmp(fieldName, L"cases_64") == 0) return cases[63];
			if (wcscmp(fieldName, L"cases_65") == 0) return cases[64];
			if (wcscmp(fieldName, L"cases_66") == 0) return cases[65];
			if (wcscmp(fieldName, L"cases_67") == 0) return cases[66];
			if (wcscmp(fieldName, L"cases_68") == 0) return cases[67];
			if (wcscmp(fieldName, L"cases_69") == 0) return cases[68];
			if (wcscmp(fieldName, L"cases_70") == 0) return cases[69];
			if (wcscmp(fieldName, L"cases_71") == 0) return cases[70];
			if (wcscmp(fieldName, L"cases_72") == 0) return cases[71];
			if (wcscmp(fieldName, L"cases_73") == 0) return cases[72];
			if (wcscmp(fieldName, L"cases_74") == 0) return cases[73];
			if (wcscmp(fieldName, L"cases_75") == 0) return cases[74];
			if (wcscmp(fieldName, L"cases_76") == 0) return cases[75];
			if (wcscmp(fieldName, L"cases_77") == 0) return cases[76];
			if (wcscmp(fieldName, L"cases_78") == 0) return cases[77];
			if (wcscmp(fieldName, L"cases_79") == 0) return cases[78];
			if (wcscmp(fieldName, L"cases_80") == 0) return cases[79];
			if (wcscmp(fieldName, L"case_subtypes") == 0) return case_subtypes;
			if (wcscmp(fieldName, L"case_subtypes_1") == 0) return case_subtypes[0];
			if (wcscmp(fieldName, L"case_subtypes_2") == 0) return case_subtypes[1];
			if (wcscmp(fieldName, L"case_subtypes_3") == 0) return case_subtypes[2];
			if (wcscmp(fieldName, L"case_subtypes_4") == 0) return case_subtypes[3];
			if (wcscmp(fieldName, L"case_subtypes_5") == 0) return case_subtypes[4];
			if (wcscmp(fieldName, L"case_subtypes_6") == 0) return case_subtypes[5];
			if (wcscmp(fieldName, L"case_subtypes_7") == 0) return case_subtypes[6];
			if (wcscmp(fieldName, L"case_subtypes_8") == 0) return case_subtypes[7];
			if (wcscmp(fieldName, L"case_subtypes_9") == 0) return case_subtypes[8];
			if (wcscmp(fieldName, L"case_subtypes_10") == 0) return case_subtypes[9];
			if (wcscmp(fieldName, L"case_subtypes_11") == 0) return case_subtypes[10];
			if (wcscmp(fieldName, L"case_subtypes_12") == 0) return case_subtypes[11];
			if (wcscmp(fieldName, L"case_subtypes_13") == 0) return case_subtypes[12];
			if (wcscmp(fieldName, L"case_subtypes_14") == 0) return case_subtypes[13];
			if (wcscmp(fieldName, L"case_subtypes_15") == 0) return case_subtypes[14];
			if (wcscmp(fieldName, L"case_subtypes_16") == 0) return case_subtypes[15];
			if (wcscmp(fieldName, L"case_subtypes_17") == 0) return case_subtypes[16];
			if (wcscmp(fieldName, L"case_subtypes_18") == 0) return case_subtypes[17];
			if (wcscmp(fieldName, L"case_subtypes_19") == 0) return case_subtypes[18];
			if (wcscmp(fieldName, L"case_subtypes_20") == 0) return case_subtypes[19];
			if (wcscmp(fieldName, L"case_subtypes_21") == 0) return case_subtypes[20];
			if (wcscmp(fieldName, L"case_subtypes_22") == 0) return case_subtypes[21];
			if (wcscmp(fieldName, L"case_subtypes_23") == 0) return case_subtypes[22];
			if (wcscmp(fieldName, L"case_subtypes_24") == 0) return case_subtypes[23];
			if (wcscmp(fieldName, L"case_subtypes_25") == 0) return case_subtypes[24];
			if (wcscmp(fieldName, L"case_subtypes_26") == 0) return case_subtypes[25];
			if (wcscmp(fieldName, L"case_subtypes_27") == 0) return case_subtypes[26];
			if (wcscmp(fieldName, L"case_subtypes_28") == 0) return case_subtypes[27];
			if (wcscmp(fieldName, L"case_subtypes_29") == 0) return case_subtypes[28];
			if (wcscmp(fieldName, L"case_subtypes_30") == 0) return case_subtypes[29];
			if (wcscmp(fieldName, L"case_subtypes_31") == 0) return case_subtypes[30];
			if (wcscmp(fieldName, L"case_subtypes_32") == 0) return case_subtypes[31];
			if (wcscmp(fieldName, L"case_subtypes_33") == 0) return case_subtypes[32];
			if (wcscmp(fieldName, L"case_subtypes_34") == 0) return case_subtypes[33];
			if (wcscmp(fieldName, L"case_subtypes_35") == 0) return case_subtypes[34];
			if (wcscmp(fieldName, L"case_subtypes_36") == 0) return case_subtypes[35];
			if (wcscmp(fieldName, L"case_subtypes_37") == 0) return case_subtypes[36];
			if (wcscmp(fieldName, L"case_subtypes_38") == 0) return case_subtypes[37];
			if (wcscmp(fieldName, L"case_subtypes_39") == 0) return case_subtypes[38];
			if (wcscmp(fieldName, L"case_subtypes_40") == 0) return case_subtypes[39];
			if (wcscmp(fieldName, L"case_subtypes_41") == 0) return case_subtypes[40];
			if (wcscmp(fieldName, L"case_subtypes_42") == 0) return case_subtypes[41];
			if (wcscmp(fieldName, L"case_subtypes_43") == 0) return case_subtypes[42];
			if (wcscmp(fieldName, L"case_subtypes_44") == 0) return case_subtypes[43];
			if (wcscmp(fieldName, L"case_subtypes_45") == 0) return case_subtypes[44];
			if (wcscmp(fieldName, L"case_subtypes_46") == 0) return case_subtypes[45];
			if (wcscmp(fieldName, L"case_subtypes_47") == 0) return case_subtypes[46];
			if (wcscmp(fieldName, L"case_subtypes_48") == 0) return case_subtypes[47];
			if (wcscmp(fieldName, L"case_subtypes_49") == 0) return case_subtypes[48];
			if (wcscmp(fieldName, L"case_subtypes_50") == 0) return case_subtypes[49];
			if (wcscmp(fieldName, L"case_subtypes_51") == 0) return case_subtypes[50];
			if (wcscmp(fieldName, L"case_subtypes_52") == 0) return case_subtypes[51];
			if (wcscmp(fieldName, L"case_subtypes_53") == 0) return case_subtypes[52];
			if (wcscmp(fieldName, L"case_subtypes_54") == 0) return case_subtypes[53];
			if (wcscmp(fieldName, L"case_subtypes_55") == 0) return case_subtypes[54];
			if (wcscmp(fieldName, L"case_subtypes_56") == 0) return case_subtypes[55];
			if (wcscmp(fieldName, L"case_subtypes_57") == 0) return case_subtypes[56];
			if (wcscmp(fieldName, L"case_subtypes_58") == 0) return case_subtypes[57];
			if (wcscmp(fieldName, L"case_subtypes_59") == 0) return case_subtypes[58];
			if (wcscmp(fieldName, L"case_subtypes_60") == 0) return case_subtypes[59];
			if (wcscmp(fieldName, L"case_subtypes_61") == 0) return case_subtypes[60];
			if (wcscmp(fieldName, L"case_subtypes_62") == 0) return case_subtypes[61];
			if (wcscmp(fieldName, L"case_subtypes_63") == 0) return case_subtypes[62];
			if (wcscmp(fieldName, L"case_subtypes_64") == 0) return case_subtypes[63];
			if (wcscmp(fieldName, L"case_subtypes_65") == 0) return case_subtypes[64];
			if (wcscmp(fieldName, L"case_subtypes_66") == 0) return case_subtypes[65];
			if (wcscmp(fieldName, L"case_subtypes_67") == 0) return case_subtypes[66];
			if (wcscmp(fieldName, L"case_subtypes_68") == 0) return case_subtypes[67];
			if (wcscmp(fieldName, L"case_subtypes_69") == 0) return case_subtypes[68];
			if (wcscmp(fieldName, L"case_subtypes_70") == 0) return case_subtypes[69];
			if (wcscmp(fieldName, L"case_subtypes_71") == 0) return case_subtypes[70];
			if (wcscmp(fieldName, L"case_subtypes_72") == 0) return case_subtypes[71];
			if (wcscmp(fieldName, L"case_subtypes_73") == 0) return case_subtypes[72];
			if (wcscmp(fieldName, L"case_subtypes_74") == 0) return case_subtypes[73];
			if (wcscmp(fieldName, L"case_subtypes_75") == 0) return case_subtypes[74];
			if (wcscmp(fieldName, L"case_subtypes_76") == 0) return case_subtypes[75];
			if (wcscmp(fieldName, L"case_subtypes_77") == 0) return case_subtypes[76];
			if (wcscmp(fieldName, L"case_subtypes_78") == 0) return case_subtypes[77];
			if (wcscmp(fieldName, L"case_subtypes_79") == 0) return case_subtypes[78];
			if (wcscmp(fieldName, L"case_subtypes_80") == 0) return case_subtypes[79];
			if (wcscmp(fieldName, L"loot_forwarding_types") == 0) return loot_forwarding_types;
			if (wcscmp(fieldName, L"loot_forwarding_types_1") == 0) return loot_forwarding_types[0];
			if (wcscmp(fieldName, L"loot_forwarding_types_2") == 0) return loot_forwarding_types[1];
			if (wcscmp(fieldName, L"loot_forwarding_types_3") == 0) return loot_forwarding_types[2];
			if (wcscmp(fieldName, L"loot_forwarding_types_4") == 0) return loot_forwarding_types[3];
			if (wcscmp(fieldName, L"loot_forwarding_types_5") == 0) return loot_forwarding_types[4];
			if (wcscmp(fieldName, L"loot_forwarding_types_6") == 0) return loot_forwarding_types[5];
			if (wcscmp(fieldName, L"loot_forwarding_types_7") == 0) return loot_forwarding_types[6];
			if (wcscmp(fieldName, L"loot_forwarding_types_8") == 0) return loot_forwarding_types[7];
			if (wcscmp(fieldName, L"loot_quests") == 0) return loot_quests;
			if (wcscmp(fieldName, L"loot_quests_1") == 0) return loot_quests[0];
			if (wcscmp(fieldName, L"loot_quests_2") == 0) return loot_quests[1];
			if (wcscmp(fieldName, L"loot_quests_3") == 0) return loot_quests[2];
			if (wcscmp(fieldName, L"loot_quests_4") == 0) return loot_quests[3];
			if (wcscmp(fieldName, L"loot_quests_5") == 0) return loot_quests[4];
			if (wcscmp(fieldName, L"loot_quests_6") == 0) return loot_quests[5];
			if (wcscmp(fieldName, L"loot_quests_7") == 0) return loot_quests[6];
			if (wcscmp(fieldName, L"loot_quests_8") == 0) return loot_quests[7];
			if (wcscmp(fieldName, L"loot_missions") == 0) return loot_missions;
			if (wcscmp(fieldName, L"loot_missions_1") == 0) return loot_missions[0];
			if (wcscmp(fieldName, L"loot_missions_2") == 0) return loot_missions[1];
			if (wcscmp(fieldName, L"loot_missions_3") == 0) return loot_missions[2];
			if (wcscmp(fieldName, L"loot_missions_4") == 0) return loot_missions[3];
			if (wcscmp(fieldName, L"loot_missions_5") == 0) return loot_missions[4];
			if (wcscmp(fieldName, L"loot_missions_6") == 0) return loot_missions[5];
			if (wcscmp(fieldName, L"loot_missions_7") == 0) return loot_missions[6];
			if (wcscmp(fieldName, L"loot_missions_8") == 0) return loot_missions[7];
			if (wcscmp(fieldName, L"loot_cases") == 0) return loot_cases;
			if (wcscmp(fieldName, L"loot_cases_1") == 0) return loot_cases[0];
			if (wcscmp(fieldName, L"loot_cases_2") == 0) return loot_cases[1];
			if (wcscmp(fieldName, L"loot_cases_3") == 0) return loot_cases[2];
			if (wcscmp(fieldName, L"loot_cases_4") == 0) return loot_cases[3];
			if (wcscmp(fieldName, L"loot_cases_5") == 0) return loot_cases[4];
			if (wcscmp(fieldName, L"loot_cases_6") == 0) return loot_cases[5];
			if (wcscmp(fieldName, L"loot_cases_7") == 0) return loot_cases[6];
			if (wcscmp(fieldName, L"loot_cases_8") == 0) return loot_cases[7];
			if (wcscmp(fieldName, L"loot_item") == 0) return loot_item;
			if (wcscmp(fieldName, L"loot_item_1") == 0) return loot_item[0];
			if (wcscmp(fieldName, L"loot_item_2") == 0) return loot_item[1];
			if (wcscmp(fieldName, L"loot_item_3") == 0) return loot_item[2];
			if (wcscmp(fieldName, L"loot_item_4") == 0) return loot_item[3];
			if (wcscmp(fieldName, L"loot_item_5") == 0) return loot_item[4];
			if (wcscmp(fieldName, L"loot_item_6") == 0) return loot_item[5];
			if (wcscmp(fieldName, L"loot_item_7") == 0) return loot_item[6];
			if (wcscmp(fieldName, L"loot_item_8") == 0) return loot_item[7];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types") == 0) return finish_blow_forwarding_types;
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_1") == 0) return finish_blow_forwarding_types[0];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_2") == 0) return finish_blow_forwarding_types[1];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_3") == 0) return finish_blow_forwarding_types[2];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_4") == 0) return finish_blow_forwarding_types[3];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_5") == 0) return finish_blow_forwarding_types[4];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_6") == 0) return finish_blow_forwarding_types[5];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_7") == 0) return finish_blow_forwarding_types[6];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_8") == 0) return finish_blow_forwarding_types[7];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_9") == 0) return finish_blow_forwarding_types[8];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_10") == 0) return finish_blow_forwarding_types[9];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_11") == 0) return finish_blow_forwarding_types[10];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_12") == 0) return finish_blow_forwarding_types[11];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_13") == 0) return finish_blow_forwarding_types[12];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_14") == 0) return finish_blow_forwarding_types[13];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_15") == 0) return finish_blow_forwarding_types[14];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_16") == 0) return finish_blow_forwarding_types[15];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_17") == 0) return finish_blow_forwarding_types[16];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_18") == 0) return finish_blow_forwarding_types[17];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_19") == 0) return finish_blow_forwarding_types[18];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_20") == 0) return finish_blow_forwarding_types[19];
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_21") == 0) return finish_blow_forwarding_types[20];
			if (wcscmp(fieldName, L"finish_blow_quests") == 0) return finish_blow_quests;
			if (wcscmp(fieldName, L"finish_blow_quests_1") == 0) return finish_blow_quests[0];
			if (wcscmp(fieldName, L"finish_blow_quests_2") == 0) return finish_blow_quests[1];
			if (wcscmp(fieldName, L"finish_blow_quests_3") == 0) return finish_blow_quests[2];
			if (wcscmp(fieldName, L"finish_blow_quests_4") == 0) return finish_blow_quests[3];
			if (wcscmp(fieldName, L"finish_blow_quests_5") == 0) return finish_blow_quests[4];
			if (wcscmp(fieldName, L"finish_blow_quests_6") == 0) return finish_blow_quests[5];
			if (wcscmp(fieldName, L"finish_blow_quests_7") == 0) return finish_blow_quests[6];
			if (wcscmp(fieldName, L"finish_blow_quests_8") == 0) return finish_blow_quests[7];
			if (wcscmp(fieldName, L"finish_blow_quests_9") == 0) return finish_blow_quests[8];
			if (wcscmp(fieldName, L"finish_blow_quests_10") == 0) return finish_blow_quests[9];
			if (wcscmp(fieldName, L"finish_blow_quests_11") == 0) return finish_blow_quests[10];
			if (wcscmp(fieldName, L"finish_blow_quests_12") == 0) return finish_blow_quests[11];
			if (wcscmp(fieldName, L"finish_blow_quests_13") == 0) return finish_blow_quests[12];
			if (wcscmp(fieldName, L"finish_blow_quests_14") == 0) return finish_blow_quests[13];
			if (wcscmp(fieldName, L"finish_blow_quests_15") == 0) return finish_blow_quests[14];
			if (wcscmp(fieldName, L"finish_blow_quests_16") == 0) return finish_blow_quests[15];
			if (wcscmp(fieldName, L"finish_blow_quests_17") == 0) return finish_blow_quests[16];
			if (wcscmp(fieldName, L"finish_blow_quests_18") == 0) return finish_blow_quests[17];
			if (wcscmp(fieldName, L"finish_blow_quests_19") == 0) return finish_blow_quests[18];
			if (wcscmp(fieldName, L"finish_blow_quests_20") == 0) return finish_blow_quests[19];
			if (wcscmp(fieldName, L"finish_blow_quests_21") == 0) return finish_blow_quests[20];
			if (wcscmp(fieldName, L"finish_blow_missions") == 0) return finish_blow_missions;
			if (wcscmp(fieldName, L"finish_blow_missions_1") == 0) return finish_blow_missions[0];
			if (wcscmp(fieldName, L"finish_blow_missions_2") == 0) return finish_blow_missions[1];
			if (wcscmp(fieldName, L"finish_blow_missions_3") == 0) return finish_blow_missions[2];
			if (wcscmp(fieldName, L"finish_blow_missions_4") == 0) return finish_blow_missions[3];
			if (wcscmp(fieldName, L"finish_blow_missions_5") == 0) return finish_blow_missions[4];
			if (wcscmp(fieldName, L"finish_blow_missions_6") == 0) return finish_blow_missions[5];
			if (wcscmp(fieldName, L"finish_blow_missions_7") == 0) return finish_blow_missions[6];
			if (wcscmp(fieldName, L"finish_blow_missions_8") == 0) return finish_blow_missions[7];
			if (wcscmp(fieldName, L"finish_blow_missions_9") == 0) return finish_blow_missions[8];
			if (wcscmp(fieldName, L"finish_blow_missions_10") == 0) return finish_blow_missions[9];
			if (wcscmp(fieldName, L"finish_blow_missions_11") == 0) return finish_blow_missions[10];
			if (wcscmp(fieldName, L"finish_blow_missions_12") == 0) return finish_blow_missions[11];
			if (wcscmp(fieldName, L"finish_blow_missions_13") == 0) return finish_blow_missions[12];
			if (wcscmp(fieldName, L"finish_blow_missions_14") == 0) return finish_blow_missions[13];
			if (wcscmp(fieldName, L"finish_blow_missions_15") == 0) return finish_blow_missions[14];
			if (wcscmp(fieldName, L"finish_blow_missions_16") == 0) return finish_blow_missions[15];
			if (wcscmp(fieldName, L"finish_blow_missions_17") == 0) return finish_blow_missions[16];
			if (wcscmp(fieldName, L"finish_blow_missions_18") == 0) return finish_blow_missions[17];
			if (wcscmp(fieldName, L"finish_blow_missions_19") == 0) return finish_blow_missions[18];
			if (wcscmp(fieldName, L"finish_blow_missions_20") == 0) return finish_blow_missions[19];
			if (wcscmp(fieldName, L"finish_blow_missions_21") == 0) return finish_blow_missions[20];
			if (wcscmp(fieldName, L"finish_blow_cases") == 0) return finish_blow_cases;
			if (wcscmp(fieldName, L"finish_blow_cases_1") == 0) return finish_blow_cases[0];
			if (wcscmp(fieldName, L"finish_blow_cases_2") == 0) return finish_blow_cases[1];
			if (wcscmp(fieldName, L"finish_blow_cases_3") == 0) return finish_blow_cases[2];
			if (wcscmp(fieldName, L"finish_blow_cases_4") == 0) return finish_blow_cases[3];
			if (wcscmp(fieldName, L"finish_blow_cases_5") == 0) return finish_blow_cases[4];
			if (wcscmp(fieldName, L"finish_blow_cases_6") == 0) return finish_blow_cases[5];
			if (wcscmp(fieldName, L"finish_blow_cases_7") == 0) return finish_blow_cases[6];
			if (wcscmp(fieldName, L"finish_blow_cases_8") == 0) return finish_blow_cases[7];
			if (wcscmp(fieldName, L"finish_blow_cases_9") == 0) return finish_blow_cases[8];
			if (wcscmp(fieldName, L"finish_blow_cases_10") == 0) return finish_blow_cases[9];
			if (wcscmp(fieldName, L"finish_blow_cases_11") == 0) return finish_blow_cases[10];
			if (wcscmp(fieldName, L"finish_blow_cases_12") == 0) return finish_blow_cases[11];
			if (wcscmp(fieldName, L"finish_blow_cases_13") == 0) return finish_blow_cases[12];
			if (wcscmp(fieldName, L"finish_blow_cases_14") == 0) return finish_blow_cases[13];
			if (wcscmp(fieldName, L"finish_blow_cases_15") == 0) return finish_blow_cases[14];
			if (wcscmp(fieldName, L"finish_blow_cases_16") == 0) return finish_blow_cases[15];
			if (wcscmp(fieldName, L"finish_blow_cases_17") == 0) return finish_blow_cases[16];
			if (wcscmp(fieldName, L"finish_blow_cases_18") == 0) return finish_blow_cases[17];
			if (wcscmp(fieldName, L"finish_blow_cases_19") == 0) return finish_blow_cases[18];
			if (wcscmp(fieldName, L"finish_blow_cases_20") == 0) return finish_blow_cases[19];
			if (wcscmp(fieldName, L"finish_blow_cases_21") == 0) return finish_blow_cases[20];
			if (wcscmp(fieldName, L"walk_ratescale") == 0) return walk_ratescale;
			if (wcscmp(fieldName, L"run_ratescale") == 0) return run_ratescale;
			if (wcscmp(fieldName, L"appearance") == 0) return appearance;
			if (wcscmp(fieldName, L"animset") == 0) return animset;
			if (wcscmp(fieldName, L"face_animset") == 0) return face_animset;
			if (wcscmp(fieldName, L"talk") == 0) return talk;
			if (wcscmp(fieldName, L"iconindex") == 0) return iconindex;
			if (wcscmp(fieldName, L"mesh_scale") == 0) return mesh_scale;
			if (wcscmp(fieldName, L"p_radius") == 0) return p_radius;
			if (wcscmp(fieldName, L"name_pos_diff") == 0) return name_pos_diff;
			if (wcscmp(fieldName, L"name_pos_stand") == 0) return name_pos_stand;
			if (wcscmp(fieldName, L"name_pos_sit") == 0) return name_pos_sit;
			if (wcscmp(fieldName, L"name_pos_dead") == 0) return name_pos_dead;
			if (wcscmp(fieldName, L"start_talk_action") == 0) return start_talk_action;
			if (wcscmp(fieldName, L"end_talk_action") == 0) return end_talk_action;
			if (wcscmp(fieldName, L"spawn_production") == 0) return spawn_production;
			if (wcscmp(fieldName, L"dead_production") == 0) return dead_production;
			if (wcscmp(fieldName, L"four_leg") == 0) return four_leg;
			if (wcscmp(fieldName, L"despawn_showdata") == 0) return despawn_showdata;
			if (wcscmp(fieldName, L"race") == 0) return race;
			if (wcscmp(fieldName, L"sex") == 0) return sex;
			if (wcscmp(fieldName, L"job") == 0) return job;
			if (wcscmp(fieldName, L"stance") == 0) return stance;
			if (wcscmp(fieldName, L"level") == 0) return level;
			if (wcscmp(fieldName, L"mastery_level") == 0) return mastery_level;
			if (wcscmp(fieldName, L"faction") == 0) return faction;
			if (wcscmp(fieldName, L"attackable") == 0) return attackable;
			if (wcscmp(fieldName, L"detect_hiding") == 0) return detect_hiding;
			if (wcscmp(fieldName, L"default_idle") == 0) return default_idle;
			if (wcscmp(fieldName, L"warfare_boss") == 0) return warfare_boss;
			if (wcscmp(fieldName, L"max_hp") == 0) return max_hp;
			if (wcscmp(fieldName, L"max_sp") == 0) return max_sp;
			if (wcscmp(fieldName, L"modify_cast_speed_percent") == 0) return modify_cast_speed_percent;
			if (wcscmp(fieldName, L"hp_regen") == 0) return hp_regen;
			if (wcscmp(fieldName, L"hp_regen_combat") == 0) return hp_regen_combat;
			if (wcscmp(fieldName, L"attack_hit_base_percent") == 0) return attack_hit_base_percent;
			if (wcscmp(fieldName, L"attack_hit_value") == 0) return attack_hit_value;
			if (wcscmp(fieldName, L"attack_pierce_base_percent") == 0) return attack_pierce_base_percent;
			if (wcscmp(fieldName, L"attack_parry_pierce_percent") == 0) return attack_parry_pierce_percent;
			if (wcscmp(fieldName, L"attack_pierce_value") == 0) return attack_pierce_value;
			if (wcscmp(fieldName, L"attack_concentrate_value") == 0) return attack_concentrate_value;
			if (wcscmp(fieldName, L"attack_critical_base_percent") == 0) return attack_critical_base_percent;
			if (wcscmp(fieldName, L"attack_critical_damage_percent") == 0) return attack_critical_damage_percent;
			if (wcscmp(fieldName, L"attack_critical_value") == 0) return attack_critical_value;
			if (wcscmp(fieldName, L"attack_critical_damage_value") == 0) return attack_critical_damage_value;
			if (wcscmp(fieldName, L"defend_critical_base_percent") == 0) return defend_critical_base_percent;
			if (wcscmp(fieldName, L"defend_critical_damage_percent") == 0) return defend_critical_damage_percent;
			if (wcscmp(fieldName, L"defend_critical_value") == 0) return defend_critical_value;
			if (wcscmp(fieldName, L"defend_bounce_percent") == 0) return defend_bounce_percent;
			if (wcscmp(fieldName, L"defend_dodge_base_percent") == 0) return defend_dodge_base_percent;
			if (wcscmp(fieldName, L"defend_dodge_value") == 0) return defend_dodge_value;
			if (wcscmp(fieldName, L"defend_parry_base_percent") == 0) return defend_parry_base_percent;
			if (wcscmp(fieldName, L"defend_parry_value") == 0) return defend_parry_value;
			if (wcscmp(fieldName, L"defend_parry_reduce_percent") == 0) return defend_parry_reduce_percent;
			if (wcscmp(fieldName, L"defend_parry_reduce_diff") == 0) return defend_parry_reduce_diff;
			if (wcscmp(fieldName, L"defend_perfect_parry_base_percent") == 0) return defend_perfect_parry_base_percent;
			if (wcscmp(fieldName, L"defend_perfect_parry_reduce_percent") == 0) return defend_perfect_parry_reduce_percent;
			if (wcscmp(fieldName, L"defend_counter_reduce_percent") == 0) return defend_counter_reduce_percent;
			if (wcscmp(fieldName, L"defend_immune_base_percent") == 0) return defend_immune_base_percent;
			if (wcscmp(fieldName, L"attack_power_creature_min") == 0) return attack_power_creature_min;
			if (wcscmp(fieldName, L"attack_power_creature_max") == 0) return attack_power_creature_max;
			if (wcscmp(fieldName, L"attack_power_equip_min") == 0) return attack_power_equip_min;
			if (wcscmp(fieldName, L"attack_power_equip_max") == 0) return attack_power_equip_max;
			if (wcscmp(fieldName, L"defend_power_creature_value") == 0) return defend_power_creature_value;
			if (wcscmp(fieldName, L"defend_power_equip_value") == 0) return defend_power_equip_value;
			if (wcscmp(fieldName, L"defend_resist_power_creature_value") == 0) return defend_resist_power_creature_value;
			if (wcscmp(fieldName, L"defend_resist_power_equip_value") == 0) return defend_resist_power_equip_value;
			if (wcscmp(fieldName, L"defend_physical_damage_reduce_percent") == 0) return defend_physical_damage_reduce_percent;
			if (wcscmp(fieldName, L"defend_force_damage_reduce_percent") == 0) return defend_force_damage_reduce_percent;
			if (wcscmp(fieldName, L"attack_damage_modify_percent") == 0) return attack_damage_modify_percent;
			if (wcscmp(fieldName, L"attack_damage_modify_diff") == 0) return attack_damage_modify_diff;
			if (wcscmp(fieldName, L"defend_damage_modify_percent") == 0) return defend_damage_modify_percent;
			if (wcscmp(fieldName, L"defend_damage_modify_diff") == 0) return defend_damage_modify_diff;
			if (wcscmp(fieldName, L"defend_miss_base_percent") == 0) return defend_miss_base_percent;
			if (wcscmp(fieldName, L"attack_stiff_duration_base_percent") == 0) return attack_stiff_duration_base_percent;
			if (wcscmp(fieldName, L"attack_stiff_duration_value") == 0) return attack_stiff_duration_value;
			if (wcscmp(fieldName, L"defend_stiff_duration_base_percent") == 0) return defend_stiff_duration_base_percent;
			if (wcscmp(fieldName, L"defend_stiff_duration_value") == 0) return defend_stiff_duration_value;
			if (wcscmp(fieldName, L"cast_duration_base_percent") == 0) return cast_duration_base_percent;
			if (wcscmp(fieldName, L"cast_duration_value") == 0) return cast_duration_value;
			if (wcscmp(fieldName, L"job_ability_1") == 0) return job_ability_1;
			if (wcscmp(fieldName, L"job_ability_2") == 0) return job_ability_2;
			if (wcscmp(fieldName, L"heal_power_base_percent") == 0) return heal_power_base_percent;
			if (wcscmp(fieldName, L"aoe_defend_base_percent") == 0) return aoe_defend_base_percent;
			if (wcscmp(fieldName, L"aoe_defend_power_value") == 0) return aoe_defend_power_value;
			if (wcscmp(fieldName, L"hate_base_percent") == 0) return hate_base_percent;
			if (wcscmp(fieldName, L"hate_power_creature_value") == 0) return hate_power_creature_value;
			if (wcscmp(fieldName, L"abnormal_attack_power_value") == 0) return abnormal_attack_power_value;
			if (wcscmp(fieldName, L"abnormal_attack_base_percent") == 0) return abnormal_attack_base_percent;
			if (wcscmp(fieldName, L"abnormal_defend_power_value") == 0) return abnormal_defend_power_value;
			if (wcscmp(fieldName, L"abnormal_defend_base_percent") == 0) return abnormal_defend_base_percent;
			if (wcscmp(fieldName, L"abnormal_attack_power_modify") == 0) return abnormal_attack_power_modify;
			if (wcscmp(fieldName, L"abnormal_defend_power_modify") == 0) return abnormal_defend_power_modify;
			if (wcscmp(fieldName, L"hate_power_modify") == 0) return hate_power_modify;
			if (wcscmp(fieldName, L"heal_power_modify") == 0) return heal_power_modify;
			if (wcscmp(fieldName, L"aoe_defend_power_modify") == 0) return aoe_defend_power_modify;
			if (wcscmp(fieldName, L"attack_hit_value_modify") == 0) return attack_hit_value_modify;
			if (wcscmp(fieldName, L"attack_critical_value_modify") == 0) return attack_critical_value_modify;
			if (wcscmp(fieldName, L"defend_critical_value_modify") == 0) return defend_critical_value_modify;
			if (wcscmp(fieldName, L"defend_dodge_value_modify") == 0) return defend_dodge_value_modify;
			if (wcscmp(fieldName, L"defend_parry_value_modify") == 0) return defend_parry_value_modify;
			if (wcscmp(fieldName, L"defend_physical_value_modify") == 0) return defend_physical_value_modify;
			if (wcscmp(fieldName, L"defend_force_value_modify") == 0) return defend_force_value_modify;
			if (wcscmp(fieldName, L"attack_stiff_duration_value_modify") == 0) return attack_stiff_duration_value_modify;
			if (wcscmp(fieldName, L"defend_stiff_duration_value_modify") == 0) return defend_stiff_duration_value_modify;
			if (wcscmp(fieldName, L"cast_duration_value_modify") == 0) return cast_duration_value_modify;
			if (wcscmp(fieldName, L"attack_critical_damage_modify") == 0) return attack_critical_damage_modify;
			if (wcscmp(fieldName, L"defend_critical_damage_modify") == 0) return defend_critical_damage_modify;
			if (wcscmp(fieldName, L"attack_pierce_modify") == 0) return attack_pierce_modify;
			if (wcscmp(fieldName, L"attack_parry_pierce_modify") == 0) return attack_parry_pierce_modify;
			if (wcscmp(fieldName, L"defend_parry_reduce_modify") == 0) return defend_parry_reduce_modify;
			if (wcscmp(fieldName, L"attack_perfect_parry_damage_modify") == 0) return attack_perfect_parry_damage_modify;
			if (wcscmp(fieldName, L"defend_perfect_parry_reduce_modify") == 0) return defend_perfect_parry_reduce_modify;
			if (wcscmp(fieldName, L"attack_counter_damage_modify") == 0) return attack_counter_damage_modify;
			if (wcscmp(fieldName, L"defend_counter_reduce_modify") == 0) return defend_counter_reduce_modify;
			if (wcscmp(fieldName, L"grade2") == 0) return grade2;
			if (wcscmp(fieldName, L"grade_imageset") == 0) return grade_imageset;
			if (wcscmp(fieldName, L"grade_tooltip_text") == 0) return grade_tooltip_text;
			if (wcscmp(fieldName, L"boss_ui_type") == 0) return boss_ui_type;
			if (wcscmp(fieldName, L"boss_group_id") == 0) return boss_group_id;
			if (wcscmp(fieldName, L"boss_slot") == 0) return boss_slot;
			if (wcscmp(fieldName, L"boss_kill_hide_slot") == 0) return boss_kill_hide_slot;
			if (wcscmp(fieldName, L"boss_spawn_message") == 0) return boss_spawn_message;
			if (wcscmp(fieldName, L"boss_icon") == 0) return boss_icon;
			if (wcscmp(fieldName, L"boss_aggro_icon") == 0) return boss_aggro_icon;
			if (wcscmp(fieldName, L"boss_aggro_indicator") == 0) return boss_aggro_indicator;
			if (wcscmp(fieldName, L"boss_aggro_twin_indicator") == 0) return boss_aggro_twin_indicator;
			if (wcscmp(fieldName, L"end_talk_sound") == 0) return end_talk_sound;
			if (wcscmp(fieldName, L"end_talk_social") == 0) return end_talk_social;
			if (wcscmp(fieldName, L"burrow_scaned_mark") == 0) return burrow_scaned_mark;
			if (wcscmp(fieldName, L"burrow_visual_effect") == 0) return burrow_visual_effect;
			if (wcscmp(fieldName, L"use_foot_print") == 0) return use_foot_print;
			if (wcscmp(fieldName, L"use_water_print") == 0) return use_water_print;
			if (wcscmp(fieldName, L"default_visible") == 0) return default_visible;
			if (wcscmp(fieldName, L"move_type") == 0) return move_type;
			if (wcscmp(fieldName, L"size_type") == 0) return size_type;
			if (wcscmp(fieldName, L"description") == 0) return description;
			if (wcscmp(fieldName, L"description2") == 0) return description2;
			if (wcscmp(fieldName, L"dying_message") == 0) return dying_message;
			if (wcscmp(fieldName, L"role_type") == 0) return role_type;
			if (wcscmp(fieldName, L"die_shout") == 0) return die_shout;
			if (wcscmp(fieldName, L"race_type") == 0) return race_type;
			if (wcscmp(fieldName, L"indicator") == 0) return indicator;
			if (wcscmp(fieldName, L"neutral_faction_nameplate_enemy") == 0) return neutral_faction_nameplate_enemy;
			if (wcscmp(fieldName, L"banned_response") == 0) return banned_response;
			if (wcscmp(fieldName, L"banned_response_1") == 0) return banned_response[0];
			if (wcscmp(fieldName, L"banned_response_2") == 0) return banned_response[1];
			if (wcscmp(fieldName, L"response") == 0) return response;
			if (wcscmp(fieldName, L"response_1") == 0) return response[0];
			if (wcscmp(fieldName, L"response_2") == 0) return response[1];
			if (wcscmp(fieldName, L"response_3") == 0) return response[2];
			if (wcscmp(fieldName, L"response_4") == 0) return response[3];
			if (wcscmp(fieldName, L"response_5") == 0) return response[4];
			if (wcscmp(fieldName, L"response_6") == 0) return response[5];
			if (wcscmp(fieldName, L"response_7") == 0) return response[6];
			if (wcscmp(fieldName, L"stand_social") == 0) return stand_social;
			if (wcscmp(fieldName, L"stand_social_1") == 0) return stand_social[0];
			if (wcscmp(fieldName, L"stand_social_2") == 0) return stand_social[1];
			if (wcscmp(fieldName, L"stand_social_3") == 0) return stand_social[2];
			if (wcscmp(fieldName, L"stand_social_rate") == 0) return stand_social_rate;
			if (wcscmp(fieldName, L"stand_social_rate_1") == 0) return stand_social_rate[0];
			if (wcscmp(fieldName, L"stand_social_rate_2") == 0) return stand_social_rate[1];
			if (wcscmp(fieldName, L"stand_social_rate_3") == 0) return stand_social_rate[2];
			if (wcscmp(fieldName, L"die_knockback") == 0) return die_knockback;
			if (wcscmp(fieldName, L"invoke_fx_msg") == 0) return invoke_fx_msg;
			if (wcscmp(fieldName, L"disable_name_spawn") == 0) return disable_name_spawn;
			if (wcscmp(fieldName, L"play_additional_die") == 0) return play_additional_die;
			if (wcscmp(fieldName, L"summoned_beauty_shop") == 0) return summoned_beauty_shop;
			if (wcscmp(fieldName, L"boast") == 0) return boast;
			if (wcscmp(fieldName, L"always_show_hp") == 0) return always_show_hp;
			if (wcscmp(fieldName, L"use_map_unit_group") == 0) return use_map_unit_group;
			if (wcscmp(fieldName, L"map_unit") == 0) return map_unit;
			if (wcscmp(fieldName, L"map_unit_1") == 0) return map_unit[0];
			if (wcscmp(fieldName, L"map_unit_2") == 0) return map_unit[1];
			if (wcscmp(fieldName, L"use_immediate_load") == 0) return use_immediate_load;
			if (wcscmp(fieldName, L"ghost_type") == 0) return ghost_type;
			if (wcscmp(fieldName, L"ghostmode_beyond_start_show") == 0) return ghostmode_beyond_start_show;
			if (wcscmp(fieldName, L"ghostmode_beyond_end_show") == 0) return ghostmode_beyond_end_show;
			if (wcscmp(fieldName, L"soul_npc_skill_level") == 0) return soul_npc_skill_level;
			if (wcscmp(fieldName, L"boss_challenge_attraction_score") == 0) return boss_challenge_attraction_score;
			if (wcscmp(fieldName, L"is_mysterious_store") == 0) return is_mysterious_store;
			if (wcscmp(fieldName, L"newbiecare") == 0) return newbiecare;
			if (wcscmp(fieldName, L"attack_attribute_value") == 0) return attack_attribute_value;
			if (wcscmp(fieldName, L"attack_attribute_base_percent") == 0) return attack_attribute_base_percent;
			if (wcscmp(fieldName, L"attack_attribute_modify") == 0) return attack_attribute_modify;
			if (wcscmp(fieldName, L"hide_nameplate") == 0) return hide_nameplate;
			if (wcscmp(fieldName, L"nameplate_height_modify") == 0) return nameplate_height_modify;
			if (wcscmp(fieldName, L"attack_aoe_pierce_value") == 0) return attack_aoe_pierce_value;
			if (wcscmp(fieldName, L"attack_abnormal_hit_base_percent") == 0) return attack_abnormal_hit_base_percent;
			if (wcscmp(fieldName, L"attack_abnormal_hit_value") == 0) return attack_abnormal_hit_value;
			if (wcscmp(fieldName, L"defend_abnormal_dodge_base_percent") == 0) return defend_abnormal_dodge_base_percent;
			if (wcscmp(fieldName, L"defend_abnormal_dodge_value") == 0) return defend_abnormal_dodge_value;
			if (wcscmp(fieldName, L"support_power_base_percent") == 0) return support_power_base_percent;
			if (wcscmp(fieldName, L"support_power_value") == 0) return support_power_value;
			if (wcscmp(fieldName, L"heal_power_value") == 0) return heal_power_value;
			if (wcscmp(fieldName, L"hypermove_power_value") == 0) return hypermove_power_value;
			if (wcscmp(fieldName, L"r_attack_aoe_pierce_modify") == 0) return r_attack_aoe_pierce_modify;
			if (wcscmp(fieldName, L"r_attack_abnormal_hit_modify") == 0) return r_attack_abnormal_hit_modify;
			if (wcscmp(fieldName, L"r_defend_abnormal_dodge_modify") == 0) return r_defend_abnormal_dodge_modify;
			if (wcscmp(fieldName, L"r_support_power_modify") == 0) return r_support_power_modify;
			if (wcscmp(fieldName, L"job_change_enter_zone") == 0) return job_change_enter_zone;
			if (wcscmp(fieldName, L"job_change") == 0) return job_change;
			if (wcscmp(fieldName, L"race_type2") == 0) return race_type2;
			if (wcscmp(fieldName, L"attribute_type") == 0) return attribute_type;

			return std::any();
		}
		std::wstring GetFieldAsString(const wchar_t* fieldName) {
			if (wcscmp(fieldName, L"alias") == 0) return Data::AnyFieldToStringConverter::ToString(&alias);
			if (wcscmp(fieldName, L"name") == 0) return Data::AnyFieldToStringConverter::ToString(&name);
			if (wcscmp(fieldName, L"title") == 0) return Data::AnyFieldToStringConverter::ToString(&title);
			if (wcscmp(fieldName, L"name2") == 0) return Data::AnyFieldToStringConverter::ToString(&name2);
			if (wcscmp(fieldName, L"title2") == 0) return Data::AnyFieldToStringConverter::ToString(&title2);
			if (wcscmp(fieldName, L"boss_npc") == 0) return Data::AnyFieldToStringConverter::ToString(&boss_npc);
			if (wcscmp(fieldName, L"soul_npc") == 0) return Data::AnyFieldToStringConverter::ToString(&soul_npc);
			if (wcscmp(fieldName, L"boss_type") == 0) return Data::AnyFieldToStringConverter::ToString(&boss_type);
			if (wcscmp(fieldName, L"write_combat_log") == 0) return Data::AnyFieldToStringConverter::ToString(&write_combat_log);
			if (wcscmp(fieldName, L"radius") == 0) return Data::AnyFieldToStringConverter::ToString(&radius);
			if (wcscmp(fieldName, L"scale") == 0) return Data::AnyFieldToStringConverter::ToString(&scale);
			if (wcscmp(fieldName, L"walk_speed") == 0) return Data::AnyFieldToStringConverter::ToString(&walk_speed);
			if (wcscmp(fieldName, L"run_speed") == 0) return Data::AnyFieldToStringConverter::ToString(&run_speed);
			if (wcscmp(fieldName, L"neutral_hostile") == 0) return Data::AnyFieldToStringConverter::ToString(&neutral_hostile);
			if (wcscmp(fieldName, L"offensive") == 0) return Data::AnyFieldToStringConverter::ToString(&offensive);
			if (wcscmp(fieldName, L"immune_skill_attribute_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_skill_attribute[0]));
			if (wcscmp(fieldName, L"immune_skill_attribute_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_skill_attribute[1]));
			if (wcscmp(fieldName, L"immune_skill_attribute_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_skill_attribute[2]));
			if (wcscmp(fieldName, L"immune_skill_attribute_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_skill_attribute[3]));
			if (wcscmp(fieldName, L"immune_skill_attribute_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_skill_attribute[4]));
			if (wcscmp(fieldName, L"immune_skill_attribute_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_skill_attribute[5]));
			if (wcscmp(fieldName, L"immune_skill_attribute_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_skill_attribute[6]));
			if (wcscmp(fieldName, L"immune_skill_attribute_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_skill_attribute[7]));
			if (wcscmp(fieldName, L"immune_effect_attribute_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[0]));
			if (wcscmp(fieldName, L"immune_effect_attribute_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[1]));
			if (wcscmp(fieldName, L"immune_effect_attribute_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[2]));
			if (wcscmp(fieldName, L"immune_effect_attribute_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[3]));
			if (wcscmp(fieldName, L"immune_effect_attribute_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[4]));
			if (wcscmp(fieldName, L"immune_effect_attribute_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[5]));
			if (wcscmp(fieldName, L"immune_effect_attribute_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[6]));
			if (wcscmp(fieldName, L"immune_effect_attribute_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[7]));
			if (wcscmp(fieldName, L"immune_effect_attribute_9") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[8]));
			if (wcscmp(fieldName, L"immune_effect_attribute_10") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[9]));
			if (wcscmp(fieldName, L"immune_effect_attribute_11") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[10]));
			if (wcscmp(fieldName, L"immune_effect_attribute_12") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[11]));
			if (wcscmp(fieldName, L"immune_effect_attribute_13") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[12]));
			if (wcscmp(fieldName, L"immune_effect_attribute_14") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[13]));
			if (wcscmp(fieldName, L"immune_effect_attribute_15") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[14]));
			if (wcscmp(fieldName, L"immune_effect_attribute_16") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[15]));
			if (wcscmp(fieldName, L"immune_effect_attribute_17") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[16]));
			if (wcscmp(fieldName, L"immune_effect_attribute_18") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[17]));
			if (wcscmp(fieldName, L"immune_effect_attribute_19") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[18]));
			if (wcscmp(fieldName, L"immune_effect_attribute_20") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_effect_attribute[19]));
			if (wcscmp(fieldName, L"immune_breaker_attribute_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_breaker_attribute[0]));
			if (wcscmp(fieldName, L"immune_breaker_attribute_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_breaker_attribute[1]));
			if (wcscmp(fieldName, L"immune_breaker_attribute_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_breaker_attribute[2]));
			if (wcscmp(fieldName, L"immune_breaker_attribute_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_breaker_attribute[3]));
			if (wcscmp(fieldName, L"immune_breaker_attribute_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_breaker_attribute[4]));
			if (wcscmp(fieldName, L"immune_breaker_attribute_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_breaker_attribute[5]));
			if (wcscmp(fieldName, L"immune_breaker_attribute_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_breaker_attribute[6]));
			if (wcscmp(fieldName, L"immune_breaker_attribute_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_breaker_attribute[7]));
			if (wcscmp(fieldName, L"immune_breaker_count") == 0) return Data::AnyFieldToStringConverter::ToString(&immune_breaker_count);
			if (wcscmp(fieldName, L"immune_breaker_init_duration") == 0) return Data::AnyFieldToStringConverter::ToString(&immune_breaker_init_duration);
			if (wcscmp(fieldName, L"immune_breaker_show_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_breaker_show[0]));
			if (wcscmp(fieldName, L"immune_breaker_show_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_breaker_show[1]));
			if (wcscmp(fieldName, L"immune_breaker_show_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_breaker_show[2]));
			if (wcscmp(fieldName, L"immune_breaker_show_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_breaker_show[3]));
			if (wcscmp(fieldName, L"immune_breaker_show_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_breaker_show[4]));
			if (wcscmp(fieldName, L"immune_breaker_show_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_breaker_show[5]));
			if (wcscmp(fieldName, L"immune_breaker_show_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_breaker_show[6]));
			if (wcscmp(fieldName, L"immune_breaker_show_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(immune_breaker_show[7]));
			if (wcscmp(fieldName, L"store") == 0) return Data::AnyFieldToStringConverter::ToString(&store);
			if (wcscmp(fieldName, L"store_by_item") == 0) return Data::AnyFieldToStringConverter::ToString(&store_by_item);
			if (wcscmp(fieldName, L"store2_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(store2[0]));
			if (wcscmp(fieldName, L"store2_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(store2[1]));
			if (wcscmp(fieldName, L"store2_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(store2[2]));
			if (wcscmp(fieldName, L"store2_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(store2[3]));
			if (wcscmp(fieldName, L"store2_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(store2[4]));
			if (wcscmp(fieldName, L"store2_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(store2[5]));
			if (wcscmp(fieldName, L"teleport") == 0) return Data::AnyFieldToStringConverter::ToString(&teleport);
			if (wcscmp(fieldName, L"repairer") == 0) return Data::AnyFieldToStringConverter::ToString(&repairer);
			if (wcscmp(fieldName, L"production") == 0) return Data::AnyFieldToStringConverter::ToString(&production);
			if (wcscmp(fieldName, L"market") == 0) return Data::AnyFieldToStringConverter::ToString(&market);
			if (wcscmp(fieldName, L"post_office") == 0) return Data::AnyFieldToStringConverter::ToString(&post_office);
			if (wcscmp(fieldName, L"exchange_faction_score") == 0) return Data::AnyFieldToStringConverter::ToString(&exchange_faction_score);
			if (wcscmp(fieldName, L"exchange_faction_score_max_faction_level") == 0) return Data::AnyFieldToStringConverter::ToString(&exchange_faction_score_max_faction_level);
			if (wcscmp(fieldName, L"exchange_faction_score_multiply_value") == 0) return Data::AnyFieldToStringConverter::ToString(&exchange_faction_score_multiply_value);
			if (wcscmp(fieldName, L"join_leave_faction") == 0) return Data::AnyFieldToStringConverter::ToString(&join_leave_faction);
			if (wcscmp(fieldName, L"transfer_faction") == 0) return Data::AnyFieldToStringConverter::ToString(&transfer_faction);
			if (wcscmp(fieldName, L"depot") == 0) return Data::AnyFieldToStringConverter::ToString(&depot);
			if (wcscmp(fieldName, L"guild") == 0) return Data::AnyFieldToStringConverter::ToString(&guild);
			if (wcscmp(fieldName, L"max_faction_score") == 0) return Data::AnyFieldToStringConverter::ToString(&max_faction_score);
			if (wcscmp(fieldName, L"enable_co_ownership_pouch") == 0) return Data::AnyFieldToStringConverter::ToString(&enable_co_ownership_pouch);
			if (wcscmp(fieldName, L"reward_faction_score") == 0) return Data::AnyFieldToStringConverter::ToString(&reward_faction_score);
			if (wcscmp(fieldName, L"peaktime_reward_sun_start_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&peaktime_reward_sun_start_hour);
			if (wcscmp(fieldName, L"peaktime_reward_sun_end_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&peaktime_reward_sun_end_hour);
			if (wcscmp(fieldName, L"peaktime_reward_mon_start_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&peaktime_reward_mon_start_hour);
			if (wcscmp(fieldName, L"peaktime_reward_mon_end_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&peaktime_reward_mon_end_hour);
			if (wcscmp(fieldName, L"peaktime_reward_tue_start_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&peaktime_reward_tue_start_hour);
			if (wcscmp(fieldName, L"peaktime_reward_tue_end_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&peaktime_reward_tue_end_hour);
			if (wcscmp(fieldName, L"peaktime_reward_wed_start_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&peaktime_reward_wed_start_hour);
			if (wcscmp(fieldName, L"peaktime_reward_wed_end_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&peaktime_reward_wed_end_hour);
			if (wcscmp(fieldName, L"peaktime_reward_thu_start_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&peaktime_reward_thu_start_hour);
			if (wcscmp(fieldName, L"peaktime_reward_thu_end_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&peaktime_reward_thu_end_hour);
			if (wcscmp(fieldName, L"peaktime_reward_fri_start_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&peaktime_reward_fri_start_hour);
			if (wcscmp(fieldName, L"peaktime_reward_fri_end_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&peaktime_reward_fri_end_hour);
			if (wcscmp(fieldName, L"peaktime_reward_sat_start_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&peaktime_reward_sat_start_hour);
			if (wcscmp(fieldName, L"peaktime_reward_sat_end_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&peaktime_reward_sat_end_hour);
			if (wcscmp(fieldName, L"contribution_reward") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_reward);
			if (wcscmp(fieldName, L"contribution_day_reward_sun") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_day_reward_sun);
			if (wcscmp(fieldName, L"contribution_day_reward_mon") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_day_reward_mon);
			if (wcscmp(fieldName, L"contribution_day_reward_tue") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_day_reward_tue);
			if (wcscmp(fieldName, L"contribution_day_reward_wed") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_day_reward_wed);
			if (wcscmp(fieldName, L"contribution_day_reward_thu") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_day_reward_thu);
			if (wcscmp(fieldName, L"contribution_day_reward_fri") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_day_reward_fri);
			if (wcscmp(fieldName, L"contribution_day_reward_sat") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_day_reward_sat);
			if (wcscmp(fieldName, L"contribution_peaktime_reward_sun_start_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_peaktime_reward_sun_start_hour);
			if (wcscmp(fieldName, L"contribution_peaktime_reward_sun_end_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_peaktime_reward_sun_end_hour);
			if (wcscmp(fieldName, L"contribution_peaktime_reward_mon_start_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_peaktime_reward_mon_start_hour);
			if (wcscmp(fieldName, L"contribution_peaktime_reward_mon_end_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_peaktime_reward_mon_end_hour);
			if (wcscmp(fieldName, L"contribution_peaktime_reward_tue_start_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_peaktime_reward_tue_start_hour);
			if (wcscmp(fieldName, L"contribution_peaktime_reward_tue_end_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_peaktime_reward_tue_end_hour);
			if (wcscmp(fieldName, L"contribution_peaktime_reward_wed_start_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_peaktime_reward_wed_start_hour);
			if (wcscmp(fieldName, L"contribution_peaktime_reward_wed_end_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_peaktime_reward_wed_end_hour);
			if (wcscmp(fieldName, L"contribution_peaktime_reward_thu_start_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_peaktime_reward_thu_start_hour);
			if (wcscmp(fieldName, L"contribution_peaktime_reward_thu_end_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_peaktime_reward_thu_end_hour);
			if (wcscmp(fieldName, L"contribution_peaktime_reward_fri_start_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_peaktime_reward_fri_start_hour);
			if (wcscmp(fieldName, L"contribution_peaktime_reward_fri_end_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_peaktime_reward_fri_end_hour);
			if (wcscmp(fieldName, L"contribution_peaktime_reward_sat_start_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_peaktime_reward_sat_start_hour);
			if (wcscmp(fieldName, L"contribution_peaktime_reward_sat_end_hour") == 0) return Data::AnyFieldToStringConverter::ToString(&contribution_peaktime_reward_sat_end_hour);
			if (wcscmp(fieldName, L"personal_dropped_pouch_reward") == 0) return Data::AnyFieldToStringConverter::ToString(&personal_dropped_pouch_reward);
			if (wcscmp(fieldName, L"reward_sealed_dungeon") == 0) return Data::AnyFieldToStringConverter::ToString(&reward_sealed_dungeon);
			if (wcscmp(fieldName, L"fielditemdrop") == 0) return Data::AnyFieldToStringConverter::ToString(&fielditemdrop);
			if (wcscmp(fieldName, L"deadbody_fielditemdrop") == 0) return Data::AnyFieldToStringConverter::ToString(&deadbody_fielditemdrop);
			if (wcscmp(fieldName, L"deadbody_pickup_duration") == 0) return Data::AnyFieldToStringConverter::ToString(&deadbody_pickup_duration);
			if (wcscmp(fieldName, L"burrow") == 0) return Data::AnyFieldToStringConverter::ToString(&burrow);
			if (wcscmp(fieldName, L"manipulate_duration") == 0) return Data::AnyFieldToStringConverter::ToString(&manipulate_duration);
			if (wcscmp(fieldName, L"caster_manipulate_animname") == 0) return Data::AnyFieldToStringConverter::ToString(&caster_manipulate_animname);
			if (wcscmp(fieldName, L"target_manipulate_animname") == 0) return Data::AnyFieldToStringConverter::ToString(&target_manipulate_animname);
			if (wcscmp(fieldName, L"caster_manipulate_show") == 0) return Data::AnyFieldToStringConverter::ToString(&caster_manipulate_show);
			if (wcscmp(fieldName, L"target_manipulate_show") == 0) return Data::AnyFieldToStringConverter::ToString(&target_manipulate_show);
			if (wcscmp(fieldName, L"action_name") == 0) return Data::AnyFieldToStringConverter::ToString(&action_name);
			if (wcscmp(fieldName, L"action_desc") == 0) return Data::AnyFieldToStringConverter::ToString(&action_desc);
			if (wcscmp(fieldName, L"manipulate_transit_zone") == 0) return Data::AnyFieldToStringConverter::ToString(&manipulate_transit_zone);
			if (wcscmp(fieldName, L"forwarding_types_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[0]));
			if (wcscmp(fieldName, L"forwarding_types_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[1]));
			if (wcscmp(fieldName, L"forwarding_types_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[2]));
			if (wcscmp(fieldName, L"forwarding_types_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[3]));
			if (wcscmp(fieldName, L"forwarding_types_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[4]));
			if (wcscmp(fieldName, L"forwarding_types_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[5]));
			if (wcscmp(fieldName, L"forwarding_types_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[6]));
			if (wcscmp(fieldName, L"forwarding_types_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[7]));
			if (wcscmp(fieldName, L"forwarding_types_9") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[8]));
			if (wcscmp(fieldName, L"forwarding_types_10") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[9]));
			if (wcscmp(fieldName, L"forwarding_types_11") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[10]));
			if (wcscmp(fieldName, L"forwarding_types_12") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[11]));
			if (wcscmp(fieldName, L"forwarding_types_13") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[12]));
			if (wcscmp(fieldName, L"forwarding_types_14") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[13]));
			if (wcscmp(fieldName, L"forwarding_types_15") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[14]));
			if (wcscmp(fieldName, L"forwarding_types_16") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[15]));
			if (wcscmp(fieldName, L"forwarding_types_17") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[16]));
			if (wcscmp(fieldName, L"forwarding_types_18") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[17]));
			if (wcscmp(fieldName, L"forwarding_types_19") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[18]));
			if (wcscmp(fieldName, L"forwarding_types_20") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[19]));
			if (wcscmp(fieldName, L"forwarding_types_21") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[20]));
			if (wcscmp(fieldName, L"forwarding_types_22") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[21]));
			if (wcscmp(fieldName, L"forwarding_types_23") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[22]));
			if (wcscmp(fieldName, L"forwarding_types_24") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[23]));
			if (wcscmp(fieldName, L"forwarding_types_25") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[24]));
			if (wcscmp(fieldName, L"forwarding_types_26") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[25]));
			if (wcscmp(fieldName, L"forwarding_types_27") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[26]));
			if (wcscmp(fieldName, L"forwarding_types_28") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[27]));
			if (wcscmp(fieldName, L"forwarding_types_29") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[28]));
			if (wcscmp(fieldName, L"forwarding_types_30") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[29]));
			if (wcscmp(fieldName, L"forwarding_types_31") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[30]));
			if (wcscmp(fieldName, L"forwarding_types_32") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[31]));
			if (wcscmp(fieldName, L"forwarding_types_33") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[32]));
			if (wcscmp(fieldName, L"forwarding_types_34") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[33]));
			if (wcscmp(fieldName, L"forwarding_types_35") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[34]));
			if (wcscmp(fieldName, L"forwarding_types_36") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[35]));
			if (wcscmp(fieldName, L"forwarding_types_37") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[36]));
			if (wcscmp(fieldName, L"forwarding_types_38") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[37]));
			if (wcscmp(fieldName, L"forwarding_types_39") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[38]));
			if (wcscmp(fieldName, L"forwarding_types_40") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[39]));
			if (wcscmp(fieldName, L"forwarding_types_41") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[40]));
			if (wcscmp(fieldName, L"forwarding_types_42") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[41]));
			if (wcscmp(fieldName, L"forwarding_types_43") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[42]));
			if (wcscmp(fieldName, L"forwarding_types_44") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[43]));
			if (wcscmp(fieldName, L"forwarding_types_45") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[44]));
			if (wcscmp(fieldName, L"forwarding_types_46") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[45]));
			if (wcscmp(fieldName, L"forwarding_types_47") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[46]));
			if (wcscmp(fieldName, L"forwarding_types_48") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[47]));
			if (wcscmp(fieldName, L"forwarding_types_49") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[48]));
			if (wcscmp(fieldName, L"forwarding_types_50") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[49]));
			if (wcscmp(fieldName, L"forwarding_types_51") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[50]));
			if (wcscmp(fieldName, L"forwarding_types_52") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[51]));
			if (wcscmp(fieldName, L"forwarding_types_53") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[52]));
			if (wcscmp(fieldName, L"forwarding_types_54") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[53]));
			if (wcscmp(fieldName, L"forwarding_types_55") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[54]));
			if (wcscmp(fieldName, L"forwarding_types_56") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[55]));
			if (wcscmp(fieldName, L"forwarding_types_57") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[56]));
			if (wcscmp(fieldName, L"forwarding_types_58") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[57]));
			if (wcscmp(fieldName, L"forwarding_types_59") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[58]));
			if (wcscmp(fieldName, L"forwarding_types_60") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[59]));
			if (wcscmp(fieldName, L"forwarding_types_61") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[60]));
			if (wcscmp(fieldName, L"forwarding_types_62") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[61]));
			if (wcscmp(fieldName, L"forwarding_types_63") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[62]));
			if (wcscmp(fieldName, L"forwarding_types_64") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[63]));
			if (wcscmp(fieldName, L"forwarding_types_65") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[64]));
			if (wcscmp(fieldName, L"forwarding_types_66") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[65]));
			if (wcscmp(fieldName, L"forwarding_types_67") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[66]));
			if (wcscmp(fieldName, L"forwarding_types_68") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[67]));
			if (wcscmp(fieldName, L"forwarding_types_69") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[68]));
			if (wcscmp(fieldName, L"forwarding_types_70") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[69]));
			if (wcscmp(fieldName, L"forwarding_types_71") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[70]));
			if (wcscmp(fieldName, L"forwarding_types_72") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[71]));
			if (wcscmp(fieldName, L"forwarding_types_73") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[72]));
			if (wcscmp(fieldName, L"forwarding_types_74") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[73]));
			if (wcscmp(fieldName, L"forwarding_types_75") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[74]));
			if (wcscmp(fieldName, L"forwarding_types_76") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[75]));
			if (wcscmp(fieldName, L"forwarding_types_77") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[76]));
			if (wcscmp(fieldName, L"forwarding_types_78") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[77]));
			if (wcscmp(fieldName, L"forwarding_types_79") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[78]));
			if (wcscmp(fieldName, L"forwarding_types_80") == 0) return Data::AnyFieldToStringConverter::ToString(&(forwarding_types[79]));
			if (wcscmp(fieldName, L"quests_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[0]));
			if (wcscmp(fieldName, L"quests_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[1]));
			if (wcscmp(fieldName, L"quests_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[2]));
			if (wcscmp(fieldName, L"quests_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[3]));
			if (wcscmp(fieldName, L"quests_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[4]));
			if (wcscmp(fieldName, L"quests_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[5]));
			if (wcscmp(fieldName, L"quests_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[6]));
			if (wcscmp(fieldName, L"quests_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[7]));
			if (wcscmp(fieldName, L"quests_9") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[8]));
			if (wcscmp(fieldName, L"quests_10") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[9]));
			if (wcscmp(fieldName, L"quests_11") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[10]));
			if (wcscmp(fieldName, L"quests_12") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[11]));
			if (wcscmp(fieldName, L"quests_13") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[12]));
			if (wcscmp(fieldName, L"quests_14") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[13]));
			if (wcscmp(fieldName, L"quests_15") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[14]));
			if (wcscmp(fieldName, L"quests_16") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[15]));
			if (wcscmp(fieldName, L"quests_17") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[16]));
			if (wcscmp(fieldName, L"quests_18") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[17]));
			if (wcscmp(fieldName, L"quests_19") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[18]));
			if (wcscmp(fieldName, L"quests_20") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[19]));
			if (wcscmp(fieldName, L"quests_21") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[20]));
			if (wcscmp(fieldName, L"quests_22") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[21]));
			if (wcscmp(fieldName, L"quests_23") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[22]));
			if (wcscmp(fieldName, L"quests_24") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[23]));
			if (wcscmp(fieldName, L"quests_25") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[24]));
			if (wcscmp(fieldName, L"quests_26") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[25]));
			if (wcscmp(fieldName, L"quests_27") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[26]));
			if (wcscmp(fieldName, L"quests_28") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[27]));
			if (wcscmp(fieldName, L"quests_29") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[28]));
			if (wcscmp(fieldName, L"quests_30") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[29]));
			if (wcscmp(fieldName, L"quests_31") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[30]));
			if (wcscmp(fieldName, L"quests_32") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[31]));
			if (wcscmp(fieldName, L"quests_33") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[32]));
			if (wcscmp(fieldName, L"quests_34") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[33]));
			if (wcscmp(fieldName, L"quests_35") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[34]));
			if (wcscmp(fieldName, L"quests_36") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[35]));
			if (wcscmp(fieldName, L"quests_37") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[36]));
			if (wcscmp(fieldName, L"quests_38") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[37]));
			if (wcscmp(fieldName, L"quests_39") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[38]));
			if (wcscmp(fieldName, L"quests_40") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[39]));
			if (wcscmp(fieldName, L"quests_41") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[40]));
			if (wcscmp(fieldName, L"quests_42") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[41]));
			if (wcscmp(fieldName, L"quests_43") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[42]));
			if (wcscmp(fieldName, L"quests_44") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[43]));
			if (wcscmp(fieldName, L"quests_45") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[44]));
			if (wcscmp(fieldName, L"quests_46") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[45]));
			if (wcscmp(fieldName, L"quests_47") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[46]));
			if (wcscmp(fieldName, L"quests_48") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[47]));
			if (wcscmp(fieldName, L"quests_49") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[48]));
			if (wcscmp(fieldName, L"quests_50") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[49]));
			if (wcscmp(fieldName, L"quests_51") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[50]));
			if (wcscmp(fieldName, L"quests_52") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[51]));
			if (wcscmp(fieldName, L"quests_53") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[52]));
			if (wcscmp(fieldName, L"quests_54") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[53]));
			if (wcscmp(fieldName, L"quests_55") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[54]));
			if (wcscmp(fieldName, L"quests_56") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[55]));
			if (wcscmp(fieldName, L"quests_57") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[56]));
			if (wcscmp(fieldName, L"quests_58") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[57]));
			if (wcscmp(fieldName, L"quests_59") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[58]));
			if (wcscmp(fieldName, L"quests_60") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[59]));
			if (wcscmp(fieldName, L"quests_61") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[60]));
			if (wcscmp(fieldName, L"quests_62") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[61]));
			if (wcscmp(fieldName, L"quests_63") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[62]));
			if (wcscmp(fieldName, L"quests_64") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[63]));
			if (wcscmp(fieldName, L"quests_65") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[64]));
			if (wcscmp(fieldName, L"quests_66") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[65]));
			if (wcscmp(fieldName, L"quests_67") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[66]));
			if (wcscmp(fieldName, L"quests_68") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[67]));
			if (wcscmp(fieldName, L"quests_69") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[68]));
			if (wcscmp(fieldName, L"quests_70") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[69]));
			if (wcscmp(fieldName, L"quests_71") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[70]));
			if (wcscmp(fieldName, L"quests_72") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[71]));
			if (wcscmp(fieldName, L"quests_73") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[72]));
			if (wcscmp(fieldName, L"quests_74") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[73]));
			if (wcscmp(fieldName, L"quests_75") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[74]));
			if (wcscmp(fieldName, L"quests_76") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[75]));
			if (wcscmp(fieldName, L"quests_77") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[76]));
			if (wcscmp(fieldName, L"quests_78") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[77]));
			if (wcscmp(fieldName, L"quests_79") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[78]));
			if (wcscmp(fieldName, L"quests_80") == 0) return Data::AnyFieldToStringConverter::ToString(&(quests[79]));
			if (wcscmp(fieldName, L"missions_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[0]));
			if (wcscmp(fieldName, L"missions_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[1]));
			if (wcscmp(fieldName, L"missions_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[2]));
			if (wcscmp(fieldName, L"missions_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[3]));
			if (wcscmp(fieldName, L"missions_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[4]));
			if (wcscmp(fieldName, L"missions_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[5]));
			if (wcscmp(fieldName, L"missions_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[6]));
			if (wcscmp(fieldName, L"missions_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[7]));
			if (wcscmp(fieldName, L"missions_9") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[8]));
			if (wcscmp(fieldName, L"missions_10") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[9]));
			if (wcscmp(fieldName, L"missions_11") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[10]));
			if (wcscmp(fieldName, L"missions_12") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[11]));
			if (wcscmp(fieldName, L"missions_13") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[12]));
			if (wcscmp(fieldName, L"missions_14") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[13]));
			if (wcscmp(fieldName, L"missions_15") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[14]));
			if (wcscmp(fieldName, L"missions_16") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[15]));
			if (wcscmp(fieldName, L"missions_17") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[16]));
			if (wcscmp(fieldName, L"missions_18") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[17]));
			if (wcscmp(fieldName, L"missions_19") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[18]));
			if (wcscmp(fieldName, L"missions_20") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[19]));
			if (wcscmp(fieldName, L"missions_21") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[20]));
			if (wcscmp(fieldName, L"missions_22") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[21]));
			if (wcscmp(fieldName, L"missions_23") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[22]));
			if (wcscmp(fieldName, L"missions_24") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[23]));
			if (wcscmp(fieldName, L"missions_25") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[24]));
			if (wcscmp(fieldName, L"missions_26") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[25]));
			if (wcscmp(fieldName, L"missions_27") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[26]));
			if (wcscmp(fieldName, L"missions_28") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[27]));
			if (wcscmp(fieldName, L"missions_29") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[28]));
			if (wcscmp(fieldName, L"missions_30") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[29]));
			if (wcscmp(fieldName, L"missions_31") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[30]));
			if (wcscmp(fieldName, L"missions_32") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[31]));
			if (wcscmp(fieldName, L"missions_33") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[32]));
			if (wcscmp(fieldName, L"missions_34") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[33]));
			if (wcscmp(fieldName, L"missions_35") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[34]));
			if (wcscmp(fieldName, L"missions_36") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[35]));
			if (wcscmp(fieldName, L"missions_37") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[36]));
			if (wcscmp(fieldName, L"missions_38") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[37]));
			if (wcscmp(fieldName, L"missions_39") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[38]));
			if (wcscmp(fieldName, L"missions_40") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[39]));
			if (wcscmp(fieldName, L"missions_41") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[40]));
			if (wcscmp(fieldName, L"missions_42") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[41]));
			if (wcscmp(fieldName, L"missions_43") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[42]));
			if (wcscmp(fieldName, L"missions_44") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[43]));
			if (wcscmp(fieldName, L"missions_45") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[44]));
			if (wcscmp(fieldName, L"missions_46") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[45]));
			if (wcscmp(fieldName, L"missions_47") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[46]));
			if (wcscmp(fieldName, L"missions_48") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[47]));
			if (wcscmp(fieldName, L"missions_49") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[48]));
			if (wcscmp(fieldName, L"missions_50") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[49]));
			if (wcscmp(fieldName, L"missions_51") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[50]));
			if (wcscmp(fieldName, L"missions_52") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[51]));
			if (wcscmp(fieldName, L"missions_53") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[52]));
			if (wcscmp(fieldName, L"missions_54") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[53]));
			if (wcscmp(fieldName, L"missions_55") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[54]));
			if (wcscmp(fieldName, L"missions_56") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[55]));
			if (wcscmp(fieldName, L"missions_57") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[56]));
			if (wcscmp(fieldName, L"missions_58") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[57]));
			if (wcscmp(fieldName, L"missions_59") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[58]));
			if (wcscmp(fieldName, L"missions_60") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[59]));
			if (wcscmp(fieldName, L"missions_61") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[60]));
			if (wcscmp(fieldName, L"missions_62") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[61]));
			if (wcscmp(fieldName, L"missions_63") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[62]));
			if (wcscmp(fieldName, L"missions_64") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[63]));
			if (wcscmp(fieldName, L"missions_65") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[64]));
			if (wcscmp(fieldName, L"missions_66") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[65]));
			if (wcscmp(fieldName, L"missions_67") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[66]));
			if (wcscmp(fieldName, L"missions_68") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[67]));
			if (wcscmp(fieldName, L"missions_69") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[68]));
			if (wcscmp(fieldName, L"missions_70") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[69]));
			if (wcscmp(fieldName, L"missions_71") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[70]));
			if (wcscmp(fieldName, L"missions_72") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[71]));
			if (wcscmp(fieldName, L"missions_73") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[72]));
			if (wcscmp(fieldName, L"missions_74") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[73]));
			if (wcscmp(fieldName, L"missions_75") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[74]));
			if (wcscmp(fieldName, L"missions_76") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[75]));
			if (wcscmp(fieldName, L"missions_77") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[76]));
			if (wcscmp(fieldName, L"missions_78") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[77]));
			if (wcscmp(fieldName, L"missions_79") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[78]));
			if (wcscmp(fieldName, L"missions_80") == 0) return Data::AnyFieldToStringConverter::ToString(&(missions[79]));
			if (wcscmp(fieldName, L"cases_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[0]));
			if (wcscmp(fieldName, L"cases_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[1]));
			if (wcscmp(fieldName, L"cases_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[2]));
			if (wcscmp(fieldName, L"cases_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[3]));
			if (wcscmp(fieldName, L"cases_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[4]));
			if (wcscmp(fieldName, L"cases_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[5]));
			if (wcscmp(fieldName, L"cases_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[6]));
			if (wcscmp(fieldName, L"cases_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[7]));
			if (wcscmp(fieldName, L"cases_9") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[8]));
			if (wcscmp(fieldName, L"cases_10") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[9]));
			if (wcscmp(fieldName, L"cases_11") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[10]));
			if (wcscmp(fieldName, L"cases_12") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[11]));
			if (wcscmp(fieldName, L"cases_13") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[12]));
			if (wcscmp(fieldName, L"cases_14") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[13]));
			if (wcscmp(fieldName, L"cases_15") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[14]));
			if (wcscmp(fieldName, L"cases_16") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[15]));
			if (wcscmp(fieldName, L"cases_17") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[16]));
			if (wcscmp(fieldName, L"cases_18") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[17]));
			if (wcscmp(fieldName, L"cases_19") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[18]));
			if (wcscmp(fieldName, L"cases_20") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[19]));
			if (wcscmp(fieldName, L"cases_21") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[20]));
			if (wcscmp(fieldName, L"cases_22") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[21]));
			if (wcscmp(fieldName, L"cases_23") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[22]));
			if (wcscmp(fieldName, L"cases_24") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[23]));
			if (wcscmp(fieldName, L"cases_25") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[24]));
			if (wcscmp(fieldName, L"cases_26") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[25]));
			if (wcscmp(fieldName, L"cases_27") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[26]));
			if (wcscmp(fieldName, L"cases_28") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[27]));
			if (wcscmp(fieldName, L"cases_29") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[28]));
			if (wcscmp(fieldName, L"cases_30") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[29]));
			if (wcscmp(fieldName, L"cases_31") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[30]));
			if (wcscmp(fieldName, L"cases_32") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[31]));
			if (wcscmp(fieldName, L"cases_33") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[32]));
			if (wcscmp(fieldName, L"cases_34") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[33]));
			if (wcscmp(fieldName, L"cases_35") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[34]));
			if (wcscmp(fieldName, L"cases_36") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[35]));
			if (wcscmp(fieldName, L"cases_37") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[36]));
			if (wcscmp(fieldName, L"cases_38") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[37]));
			if (wcscmp(fieldName, L"cases_39") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[38]));
			if (wcscmp(fieldName, L"cases_40") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[39]));
			if (wcscmp(fieldName, L"cases_41") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[40]));
			if (wcscmp(fieldName, L"cases_42") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[41]));
			if (wcscmp(fieldName, L"cases_43") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[42]));
			if (wcscmp(fieldName, L"cases_44") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[43]));
			if (wcscmp(fieldName, L"cases_45") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[44]));
			if (wcscmp(fieldName, L"cases_46") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[45]));
			if (wcscmp(fieldName, L"cases_47") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[46]));
			if (wcscmp(fieldName, L"cases_48") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[47]));
			if (wcscmp(fieldName, L"cases_49") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[48]));
			if (wcscmp(fieldName, L"cases_50") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[49]));
			if (wcscmp(fieldName, L"cases_51") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[50]));
			if (wcscmp(fieldName, L"cases_52") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[51]));
			if (wcscmp(fieldName, L"cases_53") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[52]));
			if (wcscmp(fieldName, L"cases_54") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[53]));
			if (wcscmp(fieldName, L"cases_55") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[54]));
			if (wcscmp(fieldName, L"cases_56") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[55]));
			if (wcscmp(fieldName, L"cases_57") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[56]));
			if (wcscmp(fieldName, L"cases_58") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[57]));
			if (wcscmp(fieldName, L"cases_59") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[58]));
			if (wcscmp(fieldName, L"cases_60") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[59]));
			if (wcscmp(fieldName, L"cases_61") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[60]));
			if (wcscmp(fieldName, L"cases_62") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[61]));
			if (wcscmp(fieldName, L"cases_63") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[62]));
			if (wcscmp(fieldName, L"cases_64") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[63]));
			if (wcscmp(fieldName, L"cases_65") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[64]));
			if (wcscmp(fieldName, L"cases_66") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[65]));
			if (wcscmp(fieldName, L"cases_67") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[66]));
			if (wcscmp(fieldName, L"cases_68") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[67]));
			if (wcscmp(fieldName, L"cases_69") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[68]));
			if (wcscmp(fieldName, L"cases_70") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[69]));
			if (wcscmp(fieldName, L"cases_71") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[70]));
			if (wcscmp(fieldName, L"cases_72") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[71]));
			if (wcscmp(fieldName, L"cases_73") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[72]));
			if (wcscmp(fieldName, L"cases_74") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[73]));
			if (wcscmp(fieldName, L"cases_75") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[74]));
			if (wcscmp(fieldName, L"cases_76") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[75]));
			if (wcscmp(fieldName, L"cases_77") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[76]));
			if (wcscmp(fieldName, L"cases_78") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[77]));
			if (wcscmp(fieldName, L"cases_79") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[78]));
			if (wcscmp(fieldName, L"cases_80") == 0) return Data::AnyFieldToStringConverter::ToString(&(cases[79]));
			if (wcscmp(fieldName, L"case_subtypes_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[0]));
			if (wcscmp(fieldName, L"case_subtypes_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[1]));
			if (wcscmp(fieldName, L"case_subtypes_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[2]));
			if (wcscmp(fieldName, L"case_subtypes_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[3]));
			if (wcscmp(fieldName, L"case_subtypes_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[4]));
			if (wcscmp(fieldName, L"case_subtypes_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[5]));
			if (wcscmp(fieldName, L"case_subtypes_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[6]));
			if (wcscmp(fieldName, L"case_subtypes_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[7]));
			if (wcscmp(fieldName, L"case_subtypes_9") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[8]));
			if (wcscmp(fieldName, L"case_subtypes_10") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[9]));
			if (wcscmp(fieldName, L"case_subtypes_11") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[10]));
			if (wcscmp(fieldName, L"case_subtypes_12") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[11]));
			if (wcscmp(fieldName, L"case_subtypes_13") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[12]));
			if (wcscmp(fieldName, L"case_subtypes_14") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[13]));
			if (wcscmp(fieldName, L"case_subtypes_15") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[14]));
			if (wcscmp(fieldName, L"case_subtypes_16") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[15]));
			if (wcscmp(fieldName, L"case_subtypes_17") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[16]));
			if (wcscmp(fieldName, L"case_subtypes_18") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[17]));
			if (wcscmp(fieldName, L"case_subtypes_19") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[18]));
			if (wcscmp(fieldName, L"case_subtypes_20") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[19]));
			if (wcscmp(fieldName, L"case_subtypes_21") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[20]));
			if (wcscmp(fieldName, L"case_subtypes_22") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[21]));
			if (wcscmp(fieldName, L"case_subtypes_23") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[22]));
			if (wcscmp(fieldName, L"case_subtypes_24") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[23]));
			if (wcscmp(fieldName, L"case_subtypes_25") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[24]));
			if (wcscmp(fieldName, L"case_subtypes_26") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[25]));
			if (wcscmp(fieldName, L"case_subtypes_27") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[26]));
			if (wcscmp(fieldName, L"case_subtypes_28") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[27]));
			if (wcscmp(fieldName, L"case_subtypes_29") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[28]));
			if (wcscmp(fieldName, L"case_subtypes_30") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[29]));
			if (wcscmp(fieldName, L"case_subtypes_31") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[30]));
			if (wcscmp(fieldName, L"case_subtypes_32") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[31]));
			if (wcscmp(fieldName, L"case_subtypes_33") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[32]));
			if (wcscmp(fieldName, L"case_subtypes_34") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[33]));
			if (wcscmp(fieldName, L"case_subtypes_35") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[34]));
			if (wcscmp(fieldName, L"case_subtypes_36") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[35]));
			if (wcscmp(fieldName, L"case_subtypes_37") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[36]));
			if (wcscmp(fieldName, L"case_subtypes_38") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[37]));
			if (wcscmp(fieldName, L"case_subtypes_39") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[38]));
			if (wcscmp(fieldName, L"case_subtypes_40") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[39]));
			if (wcscmp(fieldName, L"case_subtypes_41") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[40]));
			if (wcscmp(fieldName, L"case_subtypes_42") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[41]));
			if (wcscmp(fieldName, L"case_subtypes_43") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[42]));
			if (wcscmp(fieldName, L"case_subtypes_44") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[43]));
			if (wcscmp(fieldName, L"case_subtypes_45") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[44]));
			if (wcscmp(fieldName, L"case_subtypes_46") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[45]));
			if (wcscmp(fieldName, L"case_subtypes_47") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[46]));
			if (wcscmp(fieldName, L"case_subtypes_48") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[47]));
			if (wcscmp(fieldName, L"case_subtypes_49") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[48]));
			if (wcscmp(fieldName, L"case_subtypes_50") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[49]));
			if (wcscmp(fieldName, L"case_subtypes_51") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[50]));
			if (wcscmp(fieldName, L"case_subtypes_52") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[51]));
			if (wcscmp(fieldName, L"case_subtypes_53") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[52]));
			if (wcscmp(fieldName, L"case_subtypes_54") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[53]));
			if (wcscmp(fieldName, L"case_subtypes_55") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[54]));
			if (wcscmp(fieldName, L"case_subtypes_56") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[55]));
			if (wcscmp(fieldName, L"case_subtypes_57") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[56]));
			if (wcscmp(fieldName, L"case_subtypes_58") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[57]));
			if (wcscmp(fieldName, L"case_subtypes_59") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[58]));
			if (wcscmp(fieldName, L"case_subtypes_60") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[59]));
			if (wcscmp(fieldName, L"case_subtypes_61") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[60]));
			if (wcscmp(fieldName, L"case_subtypes_62") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[61]));
			if (wcscmp(fieldName, L"case_subtypes_63") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[62]));
			if (wcscmp(fieldName, L"case_subtypes_64") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[63]));
			if (wcscmp(fieldName, L"case_subtypes_65") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[64]));
			if (wcscmp(fieldName, L"case_subtypes_66") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[65]));
			if (wcscmp(fieldName, L"case_subtypes_67") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[66]));
			if (wcscmp(fieldName, L"case_subtypes_68") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[67]));
			if (wcscmp(fieldName, L"case_subtypes_69") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[68]));
			if (wcscmp(fieldName, L"case_subtypes_70") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[69]));
			if (wcscmp(fieldName, L"case_subtypes_71") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[70]));
			if (wcscmp(fieldName, L"case_subtypes_72") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[71]));
			if (wcscmp(fieldName, L"case_subtypes_73") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[72]));
			if (wcscmp(fieldName, L"case_subtypes_74") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[73]));
			if (wcscmp(fieldName, L"case_subtypes_75") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[74]));
			if (wcscmp(fieldName, L"case_subtypes_76") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[75]));
			if (wcscmp(fieldName, L"case_subtypes_77") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[76]));
			if (wcscmp(fieldName, L"case_subtypes_78") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[77]));
			if (wcscmp(fieldName, L"case_subtypes_79") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[78]));
			if (wcscmp(fieldName, L"case_subtypes_80") == 0) return Data::AnyFieldToStringConverter::ToString(&(case_subtypes[79]));
			if (wcscmp(fieldName, L"loot_forwarding_types_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_forwarding_types[0]));
			if (wcscmp(fieldName, L"loot_forwarding_types_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_forwarding_types[1]));
			if (wcscmp(fieldName, L"loot_forwarding_types_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_forwarding_types[2]));
			if (wcscmp(fieldName, L"loot_forwarding_types_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_forwarding_types[3]));
			if (wcscmp(fieldName, L"loot_forwarding_types_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_forwarding_types[4]));
			if (wcscmp(fieldName, L"loot_forwarding_types_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_forwarding_types[5]));
			if (wcscmp(fieldName, L"loot_forwarding_types_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_forwarding_types[6]));
			if (wcscmp(fieldName, L"loot_forwarding_types_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_forwarding_types[7]));
			if (wcscmp(fieldName, L"loot_quests_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_quests[0]));
			if (wcscmp(fieldName, L"loot_quests_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_quests[1]));
			if (wcscmp(fieldName, L"loot_quests_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_quests[2]));
			if (wcscmp(fieldName, L"loot_quests_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_quests[3]));
			if (wcscmp(fieldName, L"loot_quests_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_quests[4]));
			if (wcscmp(fieldName, L"loot_quests_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_quests[5]));
			if (wcscmp(fieldName, L"loot_quests_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_quests[6]));
			if (wcscmp(fieldName, L"loot_quests_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_quests[7]));
			if (wcscmp(fieldName, L"loot_missions_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_missions[0]));
			if (wcscmp(fieldName, L"loot_missions_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_missions[1]));
			if (wcscmp(fieldName, L"loot_missions_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_missions[2]));
			if (wcscmp(fieldName, L"loot_missions_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_missions[3]));
			if (wcscmp(fieldName, L"loot_missions_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_missions[4]));
			if (wcscmp(fieldName, L"loot_missions_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_missions[5]));
			if (wcscmp(fieldName, L"loot_missions_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_missions[6]));
			if (wcscmp(fieldName, L"loot_missions_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_missions[7]));
			if (wcscmp(fieldName, L"loot_cases_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_cases[0]));
			if (wcscmp(fieldName, L"loot_cases_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_cases[1]));
			if (wcscmp(fieldName, L"loot_cases_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_cases[2]));
			if (wcscmp(fieldName, L"loot_cases_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_cases[3]));
			if (wcscmp(fieldName, L"loot_cases_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_cases[4]));
			if (wcscmp(fieldName, L"loot_cases_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_cases[5]));
			if (wcscmp(fieldName, L"loot_cases_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_cases[6]));
			if (wcscmp(fieldName, L"loot_cases_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_cases[7]));
			if (wcscmp(fieldName, L"loot_item_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_item[0]));
			if (wcscmp(fieldName, L"loot_item_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_item[1]));
			if (wcscmp(fieldName, L"loot_item_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_item[2]));
			if (wcscmp(fieldName, L"loot_item_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_item[3]));
			if (wcscmp(fieldName, L"loot_item_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_item[4]));
			if (wcscmp(fieldName, L"loot_item_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_item[5]));
			if (wcscmp(fieldName, L"loot_item_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_item[6]));
			if (wcscmp(fieldName, L"loot_item_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(loot_item[7]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[0]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[1]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[2]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[3]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[4]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[5]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[6]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[7]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_9") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[8]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_10") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[9]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_11") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[10]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_12") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[11]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_13") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[12]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_14") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[13]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_15") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[14]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_16") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[15]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_17") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[16]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_18") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[17]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_19") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[18]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_20") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[19]));
			if (wcscmp(fieldName, L"finish_blow_forwarding_types_21") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_forwarding_types[20]));
			if (wcscmp(fieldName, L"finish_blow_quests_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[0]));
			if (wcscmp(fieldName, L"finish_blow_quests_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[1]));
			if (wcscmp(fieldName, L"finish_blow_quests_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[2]));
			if (wcscmp(fieldName, L"finish_blow_quests_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[3]));
			if (wcscmp(fieldName, L"finish_blow_quests_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[4]));
			if (wcscmp(fieldName, L"finish_blow_quests_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[5]));
			if (wcscmp(fieldName, L"finish_blow_quests_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[6]));
			if (wcscmp(fieldName, L"finish_blow_quests_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[7]));
			if (wcscmp(fieldName, L"finish_blow_quests_9") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[8]));
			if (wcscmp(fieldName, L"finish_blow_quests_10") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[9]));
			if (wcscmp(fieldName, L"finish_blow_quests_11") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[10]));
			if (wcscmp(fieldName, L"finish_blow_quests_12") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[11]));
			if (wcscmp(fieldName, L"finish_blow_quests_13") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[12]));
			if (wcscmp(fieldName, L"finish_blow_quests_14") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[13]));
			if (wcscmp(fieldName, L"finish_blow_quests_15") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[14]));
			if (wcscmp(fieldName, L"finish_blow_quests_16") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[15]));
			if (wcscmp(fieldName, L"finish_blow_quests_17") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[16]));
			if (wcscmp(fieldName, L"finish_blow_quests_18") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[17]));
			if (wcscmp(fieldName, L"finish_blow_quests_19") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[18]));
			if (wcscmp(fieldName, L"finish_blow_quests_20") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[19]));
			if (wcscmp(fieldName, L"finish_blow_quests_21") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_quests[20]));
			if (wcscmp(fieldName, L"finish_blow_missions_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[0]));
			if (wcscmp(fieldName, L"finish_blow_missions_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[1]));
			if (wcscmp(fieldName, L"finish_blow_missions_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[2]));
			if (wcscmp(fieldName, L"finish_blow_missions_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[3]));
			if (wcscmp(fieldName, L"finish_blow_missions_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[4]));
			if (wcscmp(fieldName, L"finish_blow_missions_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[5]));
			if (wcscmp(fieldName, L"finish_blow_missions_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[6]));
			if (wcscmp(fieldName, L"finish_blow_missions_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[7]));
			if (wcscmp(fieldName, L"finish_blow_missions_9") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[8]));
			if (wcscmp(fieldName, L"finish_blow_missions_10") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[9]));
			if (wcscmp(fieldName, L"finish_blow_missions_11") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[10]));
			if (wcscmp(fieldName, L"finish_blow_missions_12") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[11]));
			if (wcscmp(fieldName, L"finish_blow_missions_13") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[12]));
			if (wcscmp(fieldName, L"finish_blow_missions_14") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[13]));
			if (wcscmp(fieldName, L"finish_blow_missions_15") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[14]));
			if (wcscmp(fieldName, L"finish_blow_missions_16") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[15]));
			if (wcscmp(fieldName, L"finish_blow_missions_17") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[16]));
			if (wcscmp(fieldName, L"finish_blow_missions_18") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[17]));
			if (wcscmp(fieldName, L"finish_blow_missions_19") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[18]));
			if (wcscmp(fieldName, L"finish_blow_missions_20") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[19]));
			if (wcscmp(fieldName, L"finish_blow_missions_21") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_missions[20]));
			if (wcscmp(fieldName, L"finish_blow_cases_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[0]));
			if (wcscmp(fieldName, L"finish_blow_cases_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[1]));
			if (wcscmp(fieldName, L"finish_blow_cases_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[2]));
			if (wcscmp(fieldName, L"finish_blow_cases_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[3]));
			if (wcscmp(fieldName, L"finish_blow_cases_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[4]));
			if (wcscmp(fieldName, L"finish_blow_cases_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[5]));
			if (wcscmp(fieldName, L"finish_blow_cases_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[6]));
			if (wcscmp(fieldName, L"finish_blow_cases_8") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[7]));
			if (wcscmp(fieldName, L"finish_blow_cases_9") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[8]));
			if (wcscmp(fieldName, L"finish_blow_cases_10") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[9]));
			if (wcscmp(fieldName, L"finish_blow_cases_11") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[10]));
			if (wcscmp(fieldName, L"finish_blow_cases_12") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[11]));
			if (wcscmp(fieldName, L"finish_blow_cases_13") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[12]));
			if (wcscmp(fieldName, L"finish_blow_cases_14") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[13]));
			if (wcscmp(fieldName, L"finish_blow_cases_15") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[14]));
			if (wcscmp(fieldName, L"finish_blow_cases_16") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[15]));
			if (wcscmp(fieldName, L"finish_blow_cases_17") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[16]));
			if (wcscmp(fieldName, L"finish_blow_cases_18") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[17]));
			if (wcscmp(fieldName, L"finish_blow_cases_19") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[18]));
			if (wcscmp(fieldName, L"finish_blow_cases_20") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[19]));
			if (wcscmp(fieldName, L"finish_blow_cases_21") == 0) return Data::AnyFieldToStringConverter::ToString(&(finish_blow_cases[20]));
			if (wcscmp(fieldName, L"walk_ratescale") == 0) return Data::AnyFieldToStringConverter::ToString(&walk_ratescale);
			if (wcscmp(fieldName, L"run_ratescale") == 0) return Data::AnyFieldToStringConverter::ToString(&run_ratescale);
			if (wcscmp(fieldName, L"appearance") == 0) return Data::AnyFieldToStringConverter::ToString(&appearance);
			if (wcscmp(fieldName, L"animset") == 0) return Data::AnyFieldToStringConverter::ToString(&animset);
			if (wcscmp(fieldName, L"face_animset") == 0) return Data::AnyFieldToStringConverter::ToString(&face_animset);
			if (wcscmp(fieldName, L"talk") == 0) return Data::AnyFieldToStringConverter::ToString(&talk);
			if (wcscmp(fieldName, L"iconindex") == 0) return Data::AnyFieldToStringConverter::ToString(&iconindex);
			if (wcscmp(fieldName, L"mesh_scale") == 0) return Data::AnyFieldToStringConverter::ToString(&mesh_scale);
			if (wcscmp(fieldName, L"p_radius") == 0) return Data::AnyFieldToStringConverter::ToString(&p_radius);
			if (wcscmp(fieldName, L"name_pos_diff") == 0) return Data::AnyFieldToStringConverter::ToString(&name_pos_diff);
			if (wcscmp(fieldName, L"name_pos_stand") == 0) return Data::AnyFieldToStringConverter::ToString(&name_pos_stand);
			if (wcscmp(fieldName, L"name_pos_sit") == 0) return Data::AnyFieldToStringConverter::ToString(&name_pos_sit);
			if (wcscmp(fieldName, L"name_pos_dead") == 0) return Data::AnyFieldToStringConverter::ToString(&name_pos_dead);
			if (wcscmp(fieldName, L"start_talk_action") == 0) return Data::AnyFieldToStringConverter::ToString(&start_talk_action);
			if (wcscmp(fieldName, L"end_talk_action") == 0) return Data::AnyFieldToStringConverter::ToString(&end_talk_action);
			if (wcscmp(fieldName, L"spawn_production") == 0) return Data::AnyFieldToStringConverter::ToString(&spawn_production);
			if (wcscmp(fieldName, L"dead_production") == 0) return Data::AnyFieldToStringConverter::ToString(&dead_production);
			if (wcscmp(fieldName, L"four_leg") == 0) return Data::AnyFieldToStringConverter::ToString(&four_leg);
			if (wcscmp(fieldName, L"despawn_showdata") == 0) return Data::AnyFieldToStringConverter::ToString(&despawn_showdata);
			if (wcscmp(fieldName, L"race") == 0) return Data::AnyFieldToStringConverter::ToString(&race);
			if (wcscmp(fieldName, L"sex") == 0) return Data::AnyFieldToStringConverter::ToString(&sex);
			if (wcscmp(fieldName, L"job") == 0) return Data::AnyFieldToStringConverter::ToString(&job);
			if (wcscmp(fieldName, L"stance") == 0) return Data::AnyFieldToStringConverter::ToString(&stance);
			if (wcscmp(fieldName, L"level") == 0) return Data::AnyFieldToStringConverter::ToString(&level);
			if (wcscmp(fieldName, L"mastery_level") == 0) return Data::AnyFieldToStringConverter::ToString(&mastery_level);
			if (wcscmp(fieldName, L"faction") == 0) return Data::AnyFieldToStringConverter::ToString(&faction);
			if (wcscmp(fieldName, L"attackable") == 0) return Data::AnyFieldToStringConverter::ToString(&attackable);
			if (wcscmp(fieldName, L"detect_hiding") == 0) return Data::AnyFieldToStringConverter::ToString(&detect_hiding);
			if (wcscmp(fieldName, L"default_idle") == 0) return Data::AnyFieldToStringConverter::ToString(&default_idle);
			if (wcscmp(fieldName, L"warfare_boss") == 0) return Data::AnyFieldToStringConverter::ToString(&warfare_boss);
			if (wcscmp(fieldName, L"max_hp") == 0) return Data::AnyFieldToStringConverter::ToString(&max_hp);
			if (wcscmp(fieldName, L"max_sp") == 0) return Data::AnyFieldToStringConverter::ToString(&max_sp);
			if (wcscmp(fieldName, L"modify_cast_speed_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&modify_cast_speed_percent);
			if (wcscmp(fieldName, L"hp_regen") == 0) return Data::AnyFieldToStringConverter::ToString(&hp_regen);
			if (wcscmp(fieldName, L"hp_regen_combat") == 0) return Data::AnyFieldToStringConverter::ToString(&hp_regen_combat);
			if (wcscmp(fieldName, L"attack_hit_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_hit_base_percent);
			if (wcscmp(fieldName, L"attack_hit_value") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_hit_value);
			if (wcscmp(fieldName, L"attack_pierce_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_pierce_base_percent);
			if (wcscmp(fieldName, L"attack_parry_pierce_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_parry_pierce_percent);
			if (wcscmp(fieldName, L"attack_pierce_value") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_pierce_value);
			if (wcscmp(fieldName, L"attack_concentrate_value") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_concentrate_value);
			if (wcscmp(fieldName, L"attack_critical_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_critical_base_percent);
			if (wcscmp(fieldName, L"attack_critical_damage_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_critical_damage_percent);
			if (wcscmp(fieldName, L"attack_critical_value") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_critical_value);
			if (wcscmp(fieldName, L"attack_critical_damage_value") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_critical_damage_value);
			if (wcscmp(fieldName, L"defend_critical_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_critical_base_percent);
			if (wcscmp(fieldName, L"defend_critical_damage_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_critical_damage_percent);
			if (wcscmp(fieldName, L"defend_critical_value") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_critical_value);
			if (wcscmp(fieldName, L"defend_bounce_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_bounce_percent);
			if (wcscmp(fieldName, L"defend_dodge_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_dodge_base_percent);
			if (wcscmp(fieldName, L"defend_dodge_value") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_dodge_value);
			if (wcscmp(fieldName, L"defend_parry_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_parry_base_percent);
			if (wcscmp(fieldName, L"defend_parry_value") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_parry_value);
			if (wcscmp(fieldName, L"defend_parry_reduce_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_parry_reduce_percent);
			if (wcscmp(fieldName, L"defend_parry_reduce_diff") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_parry_reduce_diff);
			if (wcscmp(fieldName, L"defend_perfect_parry_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_perfect_parry_base_percent);
			if (wcscmp(fieldName, L"defend_perfect_parry_reduce_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_perfect_parry_reduce_percent);
			if (wcscmp(fieldName, L"defend_counter_reduce_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_counter_reduce_percent);
			if (wcscmp(fieldName, L"defend_immune_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_immune_base_percent);
			if (wcscmp(fieldName, L"attack_power_creature_min") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_power_creature_min);
			if (wcscmp(fieldName, L"attack_power_creature_max") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_power_creature_max);
			if (wcscmp(fieldName, L"attack_power_equip_min") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_power_equip_min);
			if (wcscmp(fieldName, L"attack_power_equip_max") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_power_equip_max);
			if (wcscmp(fieldName, L"defend_power_creature_value") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_power_creature_value);
			if (wcscmp(fieldName, L"defend_power_equip_value") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_power_equip_value);
			if (wcscmp(fieldName, L"defend_resist_power_creature_value") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_resist_power_creature_value);
			if (wcscmp(fieldName, L"defend_resist_power_equip_value") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_resist_power_equip_value);
			if (wcscmp(fieldName, L"defend_physical_damage_reduce_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_physical_damage_reduce_percent);
			if (wcscmp(fieldName, L"defend_force_damage_reduce_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_force_damage_reduce_percent);
			if (wcscmp(fieldName, L"attack_damage_modify_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_damage_modify_percent);
			if (wcscmp(fieldName, L"attack_damage_modify_diff") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_damage_modify_diff);
			if (wcscmp(fieldName, L"defend_damage_modify_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_damage_modify_percent);
			if (wcscmp(fieldName, L"defend_damage_modify_diff") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_damage_modify_diff);
			if (wcscmp(fieldName, L"defend_miss_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_miss_base_percent);
			if (wcscmp(fieldName, L"attack_stiff_duration_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_stiff_duration_base_percent);
			if (wcscmp(fieldName, L"attack_stiff_duration_value") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_stiff_duration_value);
			if (wcscmp(fieldName, L"defend_stiff_duration_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_stiff_duration_base_percent);
			if (wcscmp(fieldName, L"defend_stiff_duration_value") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_stiff_duration_value);
			if (wcscmp(fieldName, L"cast_duration_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&cast_duration_base_percent);
			if (wcscmp(fieldName, L"cast_duration_value") == 0) return Data::AnyFieldToStringConverter::ToString(&cast_duration_value);
			if (wcscmp(fieldName, L"job_ability_1") == 0) return Data::AnyFieldToStringConverter::ToString(&job_ability_1);
			if (wcscmp(fieldName, L"job_ability_2") == 0) return Data::AnyFieldToStringConverter::ToString(&job_ability_2);
			if (wcscmp(fieldName, L"heal_power_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&heal_power_base_percent);
			if (wcscmp(fieldName, L"aoe_defend_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&aoe_defend_base_percent);
			if (wcscmp(fieldName, L"aoe_defend_power_value") == 0) return Data::AnyFieldToStringConverter::ToString(&aoe_defend_power_value);
			if (wcscmp(fieldName, L"hate_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&hate_base_percent);
			if (wcscmp(fieldName, L"hate_power_creature_value") == 0) return Data::AnyFieldToStringConverter::ToString(&hate_power_creature_value);
			if (wcscmp(fieldName, L"abnormal_attack_power_value") == 0) return Data::AnyFieldToStringConverter::ToString(&abnormal_attack_power_value);
			if (wcscmp(fieldName, L"abnormal_attack_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&abnormal_attack_base_percent);
			if (wcscmp(fieldName, L"abnormal_defend_power_value") == 0) return Data::AnyFieldToStringConverter::ToString(&abnormal_defend_power_value);
			if (wcscmp(fieldName, L"abnormal_defend_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&abnormal_defend_base_percent);
			if (wcscmp(fieldName, L"abnormal_attack_power_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&abnormal_attack_power_modify);
			if (wcscmp(fieldName, L"abnormal_defend_power_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&abnormal_defend_power_modify);
			if (wcscmp(fieldName, L"hate_power_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&hate_power_modify);
			if (wcscmp(fieldName, L"heal_power_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&heal_power_modify);
			if (wcscmp(fieldName, L"aoe_defend_power_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&aoe_defend_power_modify);
			if (wcscmp(fieldName, L"attack_hit_value_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_hit_value_modify);
			if (wcscmp(fieldName, L"attack_critical_value_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_critical_value_modify);
			if (wcscmp(fieldName, L"defend_critical_value_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_critical_value_modify);
			if (wcscmp(fieldName, L"defend_dodge_value_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_dodge_value_modify);
			if (wcscmp(fieldName, L"defend_parry_value_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_parry_value_modify);
			if (wcscmp(fieldName, L"defend_physical_value_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_physical_value_modify);
			if (wcscmp(fieldName, L"defend_force_value_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_force_value_modify);
			if (wcscmp(fieldName, L"attack_stiff_duration_value_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_stiff_duration_value_modify);
			if (wcscmp(fieldName, L"defend_stiff_duration_value_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_stiff_duration_value_modify);
			if (wcscmp(fieldName, L"cast_duration_value_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&cast_duration_value_modify);
			if (wcscmp(fieldName, L"attack_critical_damage_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_critical_damage_modify);
			if (wcscmp(fieldName, L"defend_critical_damage_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_critical_damage_modify);
			if (wcscmp(fieldName, L"attack_pierce_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_pierce_modify);
			if (wcscmp(fieldName, L"attack_parry_pierce_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_parry_pierce_modify);
			if (wcscmp(fieldName, L"defend_parry_reduce_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_parry_reduce_modify);
			if (wcscmp(fieldName, L"attack_perfect_parry_damage_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_perfect_parry_damage_modify);
			if (wcscmp(fieldName, L"defend_perfect_parry_reduce_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_perfect_parry_reduce_modify);
			if (wcscmp(fieldName, L"attack_counter_damage_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_counter_damage_modify);
			if (wcscmp(fieldName, L"defend_counter_reduce_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_counter_reduce_modify);
			if (wcscmp(fieldName, L"grade2") == 0) return Data::AnyFieldToStringConverter::ToString(&grade2);
			if (wcscmp(fieldName, L"grade_imageset") == 0) return Data::AnyFieldToStringConverter::ToString(&grade_imageset);
			if (wcscmp(fieldName, L"grade_tooltip_text") == 0) return Data::AnyFieldToStringConverter::ToString(&grade_tooltip_text);
			if (wcscmp(fieldName, L"boss_ui_type") == 0) return Data::AnyFieldToStringConverter::ToString(&boss_ui_type);
			if (wcscmp(fieldName, L"boss_group_id") == 0) return Data::AnyFieldToStringConverter::ToString(&boss_group_id);
			if (wcscmp(fieldName, L"boss_slot") == 0) return Data::AnyFieldToStringConverter::ToString(&boss_slot);
			if (wcscmp(fieldName, L"boss_kill_hide_slot") == 0) return Data::AnyFieldToStringConverter::ToString(&boss_kill_hide_slot);
			if (wcscmp(fieldName, L"boss_spawn_message") == 0) return Data::AnyFieldToStringConverter::ToString(&boss_spawn_message);
			if (wcscmp(fieldName, L"boss_icon") == 0) return Data::AnyFieldToStringConverter::ToString(&boss_icon);
			if (wcscmp(fieldName, L"boss_aggro_icon") == 0) return Data::AnyFieldToStringConverter::ToString(&boss_aggro_icon);
			if (wcscmp(fieldName, L"boss_aggro_indicator") == 0) return Data::AnyFieldToStringConverter::ToString(&boss_aggro_indicator);
			if (wcscmp(fieldName, L"boss_aggro_twin_indicator") == 0) return Data::AnyFieldToStringConverter::ToString(&boss_aggro_twin_indicator);
			if (wcscmp(fieldName, L"end_talk_sound") == 0) return Data::AnyFieldToStringConverter::ToString(&end_talk_sound);
			if (wcscmp(fieldName, L"end_talk_social") == 0) return Data::AnyFieldToStringConverter::ToString(&end_talk_social);
			if (wcscmp(fieldName, L"burrow_scaned_mark") == 0) return Data::AnyFieldToStringConverter::ToString(&burrow_scaned_mark);
			if (wcscmp(fieldName, L"burrow_visual_effect") == 0) return Data::AnyFieldToStringConverter::ToString(&burrow_visual_effect);
			if (wcscmp(fieldName, L"use_foot_print") == 0) return Data::AnyFieldToStringConverter::ToString(&use_foot_print);
			if (wcscmp(fieldName, L"use_water_print") == 0) return Data::AnyFieldToStringConverter::ToString(&use_water_print);
			if (wcscmp(fieldName, L"default_visible") == 0) return Data::AnyFieldToStringConverter::ToString(&default_visible);
			if (wcscmp(fieldName, L"move_type") == 0) return Data::AnyFieldToStringConverter::ToString(&move_type);
			if (wcscmp(fieldName, L"size_type") == 0) return Data::AnyFieldToStringConverter::ToString(&size_type);
			if (wcscmp(fieldName, L"description") == 0) return Data::AnyFieldToStringConverter::ToString(&description);
			if (wcscmp(fieldName, L"description2") == 0) return Data::AnyFieldToStringConverter::ToString(&description2);
			if (wcscmp(fieldName, L"dying_message") == 0) return Data::AnyFieldToStringConverter::ToString(&dying_message);
			if (wcscmp(fieldName, L"role_type") == 0) return Data::AnyFieldToStringConverter::ToString(&role_type);
			if (wcscmp(fieldName, L"die_shout") == 0) return Data::AnyFieldToStringConverter::ToString(&die_shout);
			if (wcscmp(fieldName, L"race_type") == 0) return Data::AnyFieldToStringConverter::ToString(&race_type);
			if (wcscmp(fieldName, L"indicator") == 0) return Data::AnyFieldToStringConverter::ToString(&indicator);
			if (wcscmp(fieldName, L"neutral_faction_nameplate_enemy") == 0) return Data::AnyFieldToStringConverter::ToString(&neutral_faction_nameplate_enemy);
			if (wcscmp(fieldName, L"banned_response_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(banned_response[0]));
			if (wcscmp(fieldName, L"banned_response_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(banned_response[1]));
			if (wcscmp(fieldName, L"response_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(response[0]));
			if (wcscmp(fieldName, L"response_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(response[1]));
			if (wcscmp(fieldName, L"response_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(response[2]));
			if (wcscmp(fieldName, L"response_4") == 0) return Data::AnyFieldToStringConverter::ToString(&(response[3]));
			if (wcscmp(fieldName, L"response_5") == 0) return Data::AnyFieldToStringConverter::ToString(&(response[4]));
			if (wcscmp(fieldName, L"response_6") == 0) return Data::AnyFieldToStringConverter::ToString(&(response[5]));
			if (wcscmp(fieldName, L"response_7") == 0) return Data::AnyFieldToStringConverter::ToString(&(response[6]));
			if (wcscmp(fieldName, L"stand_social_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(stand_social[0]));
			if (wcscmp(fieldName, L"stand_social_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(stand_social[1]));
			if (wcscmp(fieldName, L"stand_social_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(stand_social[2]));
			if (wcscmp(fieldName, L"stand_social_rate_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(stand_social_rate[0]));
			if (wcscmp(fieldName, L"stand_social_rate_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(stand_social_rate[1]));
			if (wcscmp(fieldName, L"stand_social_rate_3") == 0) return Data::AnyFieldToStringConverter::ToString(&(stand_social_rate[2]));
			if (wcscmp(fieldName, L"die_knockback") == 0) return Data::AnyFieldToStringConverter::ToString(&die_knockback);
			if (wcscmp(fieldName, L"invoke_fx_msg") == 0) return Data::AnyFieldToStringConverter::ToString(&invoke_fx_msg);
			if (wcscmp(fieldName, L"disable_name_spawn") == 0) return Data::AnyFieldToStringConverter::ToString(&disable_name_spawn);
			if (wcscmp(fieldName, L"play_additional_die") == 0) return Data::AnyFieldToStringConverter::ToString(&play_additional_die);
			if (wcscmp(fieldName, L"summoned_beauty_shop") == 0) return Data::AnyFieldToStringConverter::ToString(&summoned_beauty_shop);
			if (wcscmp(fieldName, L"boast") == 0) return Data::AnyFieldToStringConverter::ToString(&boast);
			if (wcscmp(fieldName, L"always_show_hp") == 0) return Data::AnyFieldToStringConverter::ToString(&always_show_hp);
			if (wcscmp(fieldName, L"use_map_unit_group") == 0) return Data::AnyFieldToStringConverter::ToString(&use_map_unit_group);
			if (wcscmp(fieldName, L"map_unit_1") == 0) return Data::AnyFieldToStringConverter::ToString(&(map_unit[0]));
			if (wcscmp(fieldName, L"map_unit_2") == 0) return Data::AnyFieldToStringConverter::ToString(&(map_unit[1]));
			if (wcscmp(fieldName, L"use_immediate_load") == 0) return Data::AnyFieldToStringConverter::ToString(&use_immediate_load);
			if (wcscmp(fieldName, L"ghost_type") == 0) return Data::AnyFieldToStringConverter::ToString(&ghost_type);
			if (wcscmp(fieldName, L"ghostmode_beyond_start_show") == 0) return Data::AnyFieldToStringConverter::ToString(&ghostmode_beyond_start_show);
			if (wcscmp(fieldName, L"ghostmode_beyond_end_show") == 0) return Data::AnyFieldToStringConverter::ToString(&ghostmode_beyond_end_show);
			if (wcscmp(fieldName, L"soul_npc_skill_level") == 0) return Data::AnyFieldToStringConverter::ToString(&soul_npc_skill_level);
			if (wcscmp(fieldName, L"boss_challenge_attraction_score") == 0) return Data::AnyFieldToStringConverter::ToString(&boss_challenge_attraction_score);
			if (wcscmp(fieldName, L"is_mysterious_store") == 0) return Data::AnyFieldToStringConverter::ToString(&is_mysterious_store);
			if (wcscmp(fieldName, L"newbiecare") == 0) return Data::AnyFieldToStringConverter::ToString(&newbiecare);
			if (wcscmp(fieldName, L"attack_attribute_value") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_attribute_value);
			if (wcscmp(fieldName, L"attack_attribute_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_attribute_base_percent);
			if (wcscmp(fieldName, L"attack_attribute_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_attribute_modify);
			if (wcscmp(fieldName, L"hide_nameplate") == 0) return Data::AnyFieldToStringConverter::ToString(&hide_nameplate);
			if (wcscmp(fieldName, L"nameplate_height_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&nameplate_height_modify);
			if (wcscmp(fieldName, L"attack_aoe_pierce_value") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_aoe_pierce_value);
			if (wcscmp(fieldName, L"attack_abnormal_hit_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_abnormal_hit_base_percent);
			if (wcscmp(fieldName, L"attack_abnormal_hit_value") == 0) return Data::AnyFieldToStringConverter::ToString(&attack_abnormal_hit_value);
			if (wcscmp(fieldName, L"defend_abnormal_dodge_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_abnormal_dodge_base_percent);
			if (wcscmp(fieldName, L"defend_abnormal_dodge_value") == 0) return Data::AnyFieldToStringConverter::ToString(&defend_abnormal_dodge_value);
			if (wcscmp(fieldName, L"support_power_base_percent") == 0) return Data::AnyFieldToStringConverter::ToString(&support_power_base_percent);
			if (wcscmp(fieldName, L"support_power_value") == 0) return Data::AnyFieldToStringConverter::ToString(&support_power_value);
			if (wcscmp(fieldName, L"heal_power_value") == 0) return Data::AnyFieldToStringConverter::ToString(&heal_power_value);
			if (wcscmp(fieldName, L"hypermove_power_value") == 0) return Data::AnyFieldToStringConverter::ToString(&hypermove_power_value);
			if (wcscmp(fieldName, L"r_attack_aoe_pierce_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&r_attack_aoe_pierce_modify);
			if (wcscmp(fieldName, L"r_attack_abnormal_hit_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&r_attack_abnormal_hit_modify);
			if (wcscmp(fieldName, L"r_defend_abnormal_dodge_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&r_defend_abnormal_dodge_modify);
			if (wcscmp(fieldName, L"r_support_power_modify") == 0) return Data::AnyFieldToStringConverter::ToString(&r_support_power_modify);
			if (wcscmp(fieldName, L"job_change_enter_zone") == 0) return Data::AnyFieldToStringConverter::ToString(&job_change_enter_zone);
			if (wcscmp(fieldName, L"job_change") == 0) return Data::AnyFieldToStringConverter::ToString(&job_change);
			if (wcscmp(fieldName, L"race_type2") == 0) return Data::AnyFieldToStringConverter::ToString(&race_type2);
			if (wcscmp(fieldName, L"attribute_type") == 0) return Data::AnyFieldToStringConverter::ToString(&attribute_type);

			return L"";
		}
		void AutoCorrectLookupOffsets(const char* lookupDataPtr) {
			if (reinterpret_cast<std::uintptr_t>(alias) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) alias = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(alias));
			else return;
			if (reinterpret_cast<std::uintptr_t>(name) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) name = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(name));
			if (reinterpret_cast<std::uintptr_t>(title) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) title = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(title));
			for (int i = 0; i < 8; i++) {
				if (reinterpret_cast<std::uintptr_t>(immune_breaker_show[i]) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) immune_breaker_show[i] = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(immune_breaker_show[i]));
			}
			if (reinterpret_cast<std::uintptr_t>(caster_manipulate_animname) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) caster_manipulate_animname = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(caster_manipulate_animname));
			if (reinterpret_cast<std::uintptr_t>(target_manipulate_animname) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) target_manipulate_animname = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(target_manipulate_animname));
			if (reinterpret_cast<std::uintptr_t>(caster_manipulate_show) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) caster_manipulate_show = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(caster_manipulate_show));
			if (reinterpret_cast<std::uintptr_t>(target_manipulate_show) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) target_manipulate_show = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(target_manipulate_show));
			if (reinterpret_cast<std::uintptr_t>(animset) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) animset = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(animset));
			if (reinterpret_cast<std::uintptr_t>(face_animset) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) face_animset = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(face_animset));
			if (reinterpret_cast<std::uintptr_t>(start_talk_action) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) start_talk_action = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(start_talk_action));
			if (reinterpret_cast<std::uintptr_t>(end_talk_action) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) end_talk_action = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(end_talk_action));
			if (reinterpret_cast<std::uintptr_t>(spawn_production) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) spawn_production = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(spawn_production));
			if (reinterpret_cast<std::uintptr_t>(dead_production) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) dead_production = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(dead_production));
			if (reinterpret_cast<std::uintptr_t>(despawn_showdata) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) despawn_showdata = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(despawn_showdata));
			if (reinterpret_cast<std::uintptr_t>(grade_imageset) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) grade_imageset = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(grade_imageset));
			if (reinterpret_cast<std::uintptr_t>(boss_aggro_indicator) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) boss_aggro_indicator = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(boss_aggro_indicator));
			if (reinterpret_cast<std::uintptr_t>(boss_aggro_twin_indicator) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) boss_aggro_twin_indicator = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(boss_aggro_twin_indicator));
			if (reinterpret_cast<std::uintptr_t>(end_talk_sound) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) end_talk_sound = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(end_talk_sound));
			if (reinterpret_cast<std::uintptr_t>(burrow_scaned_mark) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) burrow_scaned_mark = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(burrow_scaned_mark));
			if (reinterpret_cast<std::uintptr_t>(burrow_visual_effect) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) burrow_visual_effect = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(burrow_visual_effect));
			if (reinterpret_cast<std::uintptr_t>(description) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) description = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(description));
			if (reinterpret_cast<std::uintptr_t>(ghostmode_beyond_start_show) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) ghostmode_beyond_start_show = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(ghostmode_beyond_start_show));
			if (reinterpret_cast<std::uintptr_t>(ghostmode_beyond_end_show) < reinterpret_cast<std::uintptr_t>(lookupDataPtr)) ghostmode_beyond_end_show = reinterpret_cast<wchar_t*>(const_cast<char*>(lookupDataPtr) + reinterpret_cast<std::uintptr_t>(ghostmode_beyond_end_show));
		}
		union Key
		{
            struct {
                
            };
			unsigned __int64 key;
		};
		__declspec(align(8)) Key key;
		wchar_t* alias;
wchar_t* name;
wchar_t* title;
Data::TableRef name2;
int name2_tableId(){return 405;};
Data::TableRef title2;
int title2_tableId(){return 405;};
Data::TableRef boss_npc;
int boss_npc_tableId(){return 46;};
bool soul_npc;
__int8 boss_type;
std::wstring boss_type_EnumValue() const {return Get_boss_type_EnumValue(boss_type);};
bool write_combat_log;
char Pad0[1];
__int16 radius;
__int16 scale;
__int16 walk_speed;
__int16 run_speed;
__int8 neutral_hostile;
std::wstring neutral_hostile_EnumValue() const {return Get_neutral_hostile_EnumValue(neutral_hostile);};
bool offensive;
__int8 immune_skill_attribute[8];
std::wstring immune_skill_attribute_EnumValue(int index) const {return Get_immune_skill_attribute_EnumValue(immune_skill_attribute[index]);};
__int16 immune_effect_attribute[20];
std::wstring immune_effect_attribute_EnumValue(int index) const {return Get_immune_effect_attribute_EnumValue(immune_effect_attribute[index]);};
__int16 immune_breaker_attribute[8];
std::wstring immune_breaker_attribute_EnumValue(int index) const {return Get_immune_breaker_attribute_EnumValue(immune_breaker_attribute[index]);};
__int8 immune_breaker_count;
char Pad1[1];
__int32 immune_breaker_init_duration;
wchar_t* immune_breaker_show[8];
Data::TableRef store;
int store_tableId(){return 385;};
Data::TableRef store_by_item;
int store_by_item_tableId(){return 384;};
Data::TableRef store2[6];
int store2_tableId(){return 383;};
Data::TableRef teleport;
int teleport_tableId(){return 401;};
bool repairer;
__int8 production;
std::wstring production_EnumValue() const {return Get_production_EnumValue(production);};
bool market;
bool post_office;
bool exchange_faction_score;
char Pad2[1];
__int16 exchange_faction_score_max_faction_level;
__int8 exchange_faction_score_multiply_value;
bool join_leave_faction;
bool transfer_faction;
bool depot;
bool guild;
char Pad3[3];
__int32 max_faction_score;
bool enable_co_ownership_pouch;
char Pad4[3];
__int32 reward_faction_score;
__int8 peaktime_reward_sun_start_hour;
__int8 peaktime_reward_sun_end_hour;
__int8 peaktime_reward_mon_start_hour;
__int8 peaktime_reward_mon_end_hour;
__int8 peaktime_reward_tue_start_hour;
__int8 peaktime_reward_tue_end_hour;
__int8 peaktime_reward_wed_start_hour;
__int8 peaktime_reward_wed_end_hour;
__int8 peaktime_reward_thu_start_hour;
__int8 peaktime_reward_thu_end_hour;
__int8 peaktime_reward_fri_start_hour;
__int8 peaktime_reward_fri_end_hour;
__int8 peaktime_reward_sat_start_hour;
__int8 peaktime_reward_sat_end_hour;
char Pad5[2];
Data::TableRef contribution_reward;
int contribution_reward_tableId(){return 75;};
Data::TableRef contribution_day_reward_sun;
int contribution_day_reward_sun_tableId(){return 75;};
Data::TableRef contribution_day_reward_mon;
int contribution_day_reward_mon_tableId(){return 75;};
Data::TableRef contribution_day_reward_tue;
int contribution_day_reward_tue_tableId(){return 75;};
Data::TableRef contribution_day_reward_wed;
int contribution_day_reward_wed_tableId(){return 75;};
Data::TableRef contribution_day_reward_thu;
int contribution_day_reward_thu_tableId(){return 75;};
Data::TableRef contribution_day_reward_fri;
int contribution_day_reward_fri_tableId(){return 75;};
Data::TableRef contribution_day_reward_sat;
int contribution_day_reward_sat_tableId(){return 75;};
__int8 contribution_peaktime_reward_sun_start_hour;
__int8 contribution_peaktime_reward_sun_end_hour;
__int8 contribution_peaktime_reward_mon_start_hour;
__int8 contribution_peaktime_reward_mon_end_hour;
__int8 contribution_peaktime_reward_tue_start_hour;
__int8 contribution_peaktime_reward_tue_end_hour;
__int8 contribution_peaktime_reward_wed_start_hour;
__int8 contribution_peaktime_reward_wed_end_hour;
__int8 contribution_peaktime_reward_thu_start_hour;
__int8 contribution_peaktime_reward_thu_end_hour;
__int8 contribution_peaktime_reward_fri_start_hour;
__int8 contribution_peaktime_reward_fri_end_hour;
__int8 contribution_peaktime_reward_sat_start_hour;
__int8 contribution_peaktime_reward_sat_end_hour;
char Pad6[2];
Data::TableRef personal_dropped_pouch_reward;
int personal_dropped_pouch_reward_tableId(){return 313;};
Data::TableRef reward_sealed_dungeon;
int reward_sealed_dungeon_tableId(){return 259;};
Data::TableRef fielditemdrop;
int fielditemdrop_tableId(){return 138;};
Data::TableRef deadbody_fielditemdrop;
int deadbody_fielditemdrop_tableId(){return 138;};
__int32 deadbody_pickup_duration;
bool burrow;
char Pad7[3];
__int32 manipulate_duration;
wchar_t* caster_manipulate_animname;
wchar_t* target_manipulate_animname;
wchar_t* caster_manipulate_show;
wchar_t* target_manipulate_show;
Data::TableRef action_name;
int action_name_tableId(){return 405;};
Data::TableRef action_desc;
int action_desc_tableId(){return 405;};
Data::TableRef manipulate_transit_zone;
int manipulate_transit_zone_tableId(){return 443;};
__int8 forwarding_types[80];
std::wstring forwarding_types_EnumValue(int index) const {return Get_forwarding_types_EnumValue(forwarding_types[index]);};
Data::TableRef quests[80];
int quests_tableId(){return 283;};
__int8 missions[80];
__int8 cases[80];
__int16 case_subtypes[80];
__int8 loot_forwarding_types[8];
std::wstring loot_forwarding_types_EnumValue(int index) const {return Get_loot_forwarding_types_EnumValue(loot_forwarding_types[index]);};
Data::TableRef loot_quests[8];
int loot_quests_tableId(){return 283;};
__int8 loot_missions[8];
__int8 loot_cases[8];
Data::TableRef loot_item[8];
int loot_item_tableId(){return 189;};
__int8 finish_blow_forwarding_types[21];
std::wstring finish_blow_forwarding_types_EnumValue(int index) const {return Get_finish_blow_forwarding_types_EnumValue(finish_blow_forwarding_types[index]);};
char Pad8[3];
Data::TableRef finish_blow_quests[21];
int finish_blow_quests_tableId(){return 283;};
__int8 finish_blow_missions[21];
__int8 finish_blow_cases[21];
char Pad9[2];
float walk_ratescale;
float run_ratescale;
Data::TableRef appearance;
int appearance_tableId(){return 84;};
wchar_t* animset;
wchar_t* face_animset;
bool talk;
__int8 iconindex;
char Pad10[2];
float mesh_scale;
__int8 p_radius;
char Pad11[1];
__int16 name_pos_diff;
__int16 name_pos_stand;
__int16 name_pos_sit;
__int16 name_pos_dead;
char Pad12[2];
wchar_t* start_talk_action;
wchar_t* end_talk_action;
wchar_t* spawn_production;
wchar_t* dead_production;
bool four_leg;
char Pad13[3];
wchar_t* despawn_showdata;
__int8 race;
std::wstring race_EnumValue() const {return Get_race_EnumValue(race);};
__int8 sex;
std::wstring sex_EnumValue() const {return Get_sex_EnumValue(sex);};
__int8 job;
std::wstring job_EnumValue() const {return Get_job_EnumValue(job);};
__int8 stance;
std::wstring stance_EnumValue() const {return Get_stance_EnumValue(stance);};
__int8 level;
__int8 mastery_level;
char Pad14[2];
Data::TableRef faction;
int faction_tableId(){return 130;};
bool attackable;
bool detect_hiding;
char Pad15[2];
Data::TableRef default_idle;
int default_idle_tableId(){return 257;};
bool warfare_boss;
char Pad16[3];
__int64 max_hp;
__int16 max_sp;
__int16 modify_cast_speed_percent;
__int64 hp_regen;
__int32 hp_regen_combat;
__int16 attack_hit_base_percent;
__int16 attack_hit_value;
__int16 attack_pierce_base_percent;
__int16 attack_parry_pierce_percent;
__int16 attack_pierce_value;
__int16 attack_concentrate_value;
__int16 attack_critical_base_percent;
__int16 attack_critical_damage_percent;
__int32 attack_critical_value;
__int32 attack_critical_damage_value;
__int16 defend_critical_base_percent;
__int16 defend_critical_damage_percent;
__int32 defend_critical_value;
__int16 defend_bounce_percent;
__int16 defend_dodge_base_percent;
__int16 defend_dodge_value;
__int16 defend_parry_base_percent;
__int16 defend_parry_value;
__int16 defend_parry_reduce_percent;
__int16 defend_parry_reduce_diff;
__int16 defend_perfect_parry_base_percent;
__int16 defend_perfect_parry_reduce_percent;
__int16 defend_counter_reduce_percent;
__int16 defend_immune_base_percent;
char Pad17[2];
__int32 attack_power_creature_min;
__int32 attack_power_creature_max;
__int16 attack_power_equip_min;
__int16 attack_power_equip_max;
__int32 defend_power_creature_value;
__int32 defend_power_equip_value;
__int16 defend_resist_power_creature_value;
__int16 defend_resist_power_equip_value;
__int16 defend_physical_damage_reduce_percent;
__int16 defend_force_damage_reduce_percent;
__int16 attack_damage_modify_percent;
char Pad18[2];
__int32 attack_damage_modify_diff;
__int16 defend_damage_modify_percent;
char Pad19[2];
__int32 defend_damage_modify_diff;
__int16 defend_miss_base_percent;
__int16 attack_stiff_duration_base_percent;
__int16 attack_stiff_duration_value;
__int16 defend_stiff_duration_base_percent;
__int16 defend_stiff_duration_value;
__int16 cast_duration_base_percent;
__int16 cast_duration_value;
char Pad20[2];
__int32 job_ability_1;
__int32 job_ability_2;
__int16 heal_power_base_percent;
__int16 aoe_defend_base_percent;
__int16 aoe_defend_power_value;
__int16 hate_base_percent;
__int16 hate_power_creature_value;
char Pad21[2];
__int32 abnormal_attack_power_value;
__int16 abnormal_attack_base_percent;
__int16 abnormal_defend_power_value;
__int16 abnormal_defend_base_percent;
__int16 abnormal_attack_power_modify;
__int16 abnormal_defend_power_modify;
__int16 hate_power_modify;
__int16 heal_power_modify;
__int16 aoe_defend_power_modify;
__int16 attack_hit_value_modify;
__int16 attack_critical_value_modify;
__int16 defend_critical_value_modify;
__int16 defend_dodge_value_modify;
__int16 defend_parry_value_modify;
__int16 defend_physical_value_modify;
__int16 defend_force_value_modify;
__int16 attack_stiff_duration_value_modify;
__int16 defend_stiff_duration_value_modify;
__int16 cast_duration_value_modify;
__int16 attack_critical_damage_modify;
__int16 defend_critical_damage_modify;
__int16 attack_pierce_modify;
__int16 attack_parry_pierce_modify;
__int16 defend_parry_reduce_modify;
__int16 attack_perfect_parry_damage_modify;
__int16 defend_perfect_parry_reduce_modify;
__int16 attack_counter_damage_modify;
__int16 defend_counter_reduce_modify;
__int8 grade2;
std::wstring grade2_EnumValue() const {return Get_grade2_EnumValue(grade2);};
char Pad22[1];
wchar_t* grade_imageset;
Data::TableRef grade_tooltip_text;
int grade_tooltip_text_tableId(){return 405;};
__int8 boss_ui_type;
std::wstring boss_ui_type_EnumValue() const {return Get_boss_ui_type_EnumValue(boss_ui_type);};
__int8 boss_group_id;
__int8 boss_slot;
std::wstring boss_slot_EnumValue() const {return Get_boss_slot_EnumValue(boss_slot);};
bool boss_kill_hide_slot;
Data::TableRef boss_spawn_message;
int boss_spawn_message_tableId(){return 151;};
Data::IconRef boss_icon;
Data::IconRef boss_aggro_icon;
wchar_t* boss_aggro_indicator;
wchar_t* boss_aggro_twin_indicator;
wchar_t* end_talk_sound;
Data::TableRef end_talk_social;
int end_talk_social_tableId(){return 367;};
wchar_t* burrow_scaned_mark;
wchar_t* burrow_visual_effect;
bool use_foot_print;
bool use_water_print;
bool default_visible;
__int8 move_type;
std::wstring move_type_EnumValue() const {return Get_move_type_EnumValue(move_type);};
__int8 size_type;
std::wstring size_type_EnumValue() const {return Get_size_type_EnumValue(size_type);};
char Pad23[3];
wchar_t* description;
Data::TableRef description2;
int description2_tableId(){return 405;};
Data::TableRef dying_message;
int dying_message_tableId(){return 405;};
__int8 role_type;
std::wstring role_type_EnumValue() const {return Get_role_type_EnumValue(role_type);};
char Pad24[3];
Data::TableRef die_shout;
int die_shout_tableId(){return 405;};
__int8 race_type;
std::wstring race_type_EnumValue() const {return Get_race_type_EnumValue(race_type);};
char Pad25[3];
Data::TableRef indicator;
int indicator_tableId(){return 181;};
bool neutral_faction_nameplate_enemy;
char Pad26[3];
Data::TableRef banned_response[2];
int banned_response_tableId(){return 258;};
Data::TableRef response[7];
int response_tableId(){return 258;};
Data::TableRef stand_social[3];
int stand_social_tableId(){return 367;};
__int16 stand_social_rate[3];
bool die_knockback;
bool invoke_fx_msg;
bool disable_name_spawn;
bool play_additional_die;
char Pad27[2];
Data::TableRef summoned_beauty_shop;
int summoned_beauty_shop_tableId(){return 387;};
Data::TableRef boast;
int boast_tableId(){return 42;};
bool always_show_hp;
bool use_map_unit_group;
char Pad28[2];
Data::TableRef map_unit[2];
int map_unit_tableId(){return 242;};
bool use_immediate_load;
__int8 ghost_type;
std::wstring ghost_type_EnumValue() const {return Get_ghost_type_EnumValue(ghost_type);};
char Pad29[2];
wchar_t* ghostmode_beyond_start_show;
wchar_t* ghostmode_beyond_end_show;
__int8 soul_npc_skill_level;
char Pad30[1];
__int16 boss_challenge_attraction_score;
bool is_mysterious_store;
char Pad31[3];
Data::TableRef newbiecare;
int newbiecare_tableId(){return 253;};
__int32 attack_attribute_value;
__int16 attack_attribute_base_percent;
__int16 attack_attribute_modify;
bool hide_nameplate;
char Pad32[1];
__int16 nameplate_height_modify;
__int16 attack_aoe_pierce_value;
__int16 attack_abnormal_hit_base_percent;
__int16 attack_abnormal_hit_value;
__int16 defend_abnormal_dodge_base_percent;
__int16 defend_abnormal_dodge_value;
__int16 support_power_base_percent;
__int16 support_power_value;
char Pad33[2];
__int32 heal_power_value;
__int16 hypermove_power_value;
__int16 r_attack_aoe_pierce_modify;
__int16 r_attack_abnormal_hit_modify;
__int16 r_defend_abnormal_dodge_modify;
__int16 r_support_power_modify;
bool job_change_enter_zone;
bool job_change;
__int8 race_type2;
std::wstring race_type2_EnumValue() const {return Get_race_type2_EnumValue(race_type2);};
__int8 attribute_type;
std::wstring attribute_type_EnumValue() const {return Get_attribute_type_EnumValue(attribute_type);};

		static TableVersion Version() { return TableVersion(3, 4); }
		static __int16 TableId() { return 255; }
		static __int32 SubType() { return 0; }
	};
#pragma pack(pop)
#pragma pack(push, 1)
	struct __declspec(align(4)) npc_RecordPtr // : DrRecordPtr
	{
		npc_Record* _record;
		int _cacheChunkIndex;
		//__unaligned __declspec(align(1)) const Data::npc_Record* _debug;
		bool _makeCopy;
	};
#pragma pack(pop)
}